<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard | BookSwap</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/style.css">
    <!-- Navbar Chat System CSS -->
    <link rel="stylesheet" href="/css/navbar-chat.css">
    <link href="https://fonts.googleapis.com/css?family=Montserrat:700,600,400&display=swap" rel="stylesheet">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <style>
        /* Active navigation styling for dynamic page */
        .nav-item.active .nav-link {
            color: #3BB7FB !important;
            background: rgba(59, 183, 251, 0.1);
            border-radius: 5px;
            font-weight: 600;
        }
        
        /* Default Avatar Styling */
        .default-avatar-dashboard {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            border: 4px solid rgba(59, 183, 251, 0.3);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, #6B7280, #9CA3AF);
            transition: all 0.3s ease;
            overflow: hidden;
            margin: 0 auto;
        }
        
        .default-avatar-dashboard:hover {
            transform: scale(1.05);
            border-color: rgba(59, 183, 251, 0.5);
            box-shadow: 0 12px 35px rgba(0, 0, 0, 0.4);
        }
        
        .default-avatar-dashboard svg {
            transition: all 0.3s ease;
        }
        
        /* Chat Toggle Button Styles */
        .chat-toggle {
            position: relative;
        }
        
        .chat-notification-badge {
            position: absolute;
            top: 8px;
            right: 8px;
            background: #F6B443;
            color: #ffffff;
            border-radius: 50%;
            min-width: 18px;
            height: 18px;
            font-size: 11px;
            font-weight: 600;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 2px 6px rgba(246, 180, 67, 0.4);
        }
        
        /* Instagram-like Chat Container */
        .chat-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 9999;
            display: flex;
        }
        
        .chat-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(5px);
        }
        
        .chat-sidebar {
            width: 400px;
            background: linear-gradient(145deg, #18191E, #1E1F26);
            border-right: 1px solid #2A2D35;
            display: flex;
            flex-direction: column;
            z-index: 10000;
            box-shadow: 2px 0 20px rgba(0, 0, 0, 0.3);
        }
        
        .chat-header {
            padding: 20px 24px;
            border-bottom: 1px solid #2A2D35;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        
        .chat-header h3 {
            color: #ffffff;
            margin: 0;
            font-size: 1.4rem;
            font-weight: 600;
        }
        
        .chat-header h3 i {
            color: #3BB7FB;
            margin-right: 0.5rem;
        }
        
        .chat-close-btn {
            background: none;
            border: none;
            color: #8b94a1;
            font-size: 1.2rem;
            cursor: pointer;
            padding: 8px;
            border-radius: 50%;
            transition: all 0.3s ease;
        }
        
        .chat-close-btn:hover {
            background: rgba(59, 183, 251, 0.1);
            color: #3BB7FB;
        }
        
        .chat-search {
            padding: 16px 24px;
            border-bottom: 1px solid #2A2D35;
        }
        
        .search-input-container {
            position: relative;
        }
        
        .chat-search-input {
            width: 100%;
            padding: 12px 40px 12px 16px;
            background: rgba(42, 45, 53, 0.6);
            border: 1px solid #3a3f46;
            border-radius: 25px;
            color: #ffffff;
            font-size: 14px;
            outline: none;
            transition: all 0.3s ease;
        }
        
        .chat-search-input:focus {
            border-color: #3BB7FB;
            box-shadow: 0 0 0 2px rgba(59, 183, 251, 0.2);
        }
        
        .chat-search-input::placeholder {
            color: #8b94a1;
        }
        
        .search-input-container .search-icon {
            position: absolute;
            right: 16px;
            top: 50%;
            transform: translateY(-50%);
            color: #8b94a1;
            font-size: 14px;
        }
        
        .chat-tabs {
            display: flex;
            border-bottom: 1px solid #2A2D35;
        }
        
        .chat-tab-btn {
            flex: 1;
            padding: 16px 20px;
            background: none;
            border: none;
            color: #8b94a1;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            border-bottom: 2px solid transparent;
        }
        
        .chat-tab-btn.active {
            color: #3BB7FB;
            border-bottom-color: #3BB7FB;
        }
        
        .chat-tab-btn:hover {
            color: #ffffff;
            background: rgba(59, 183, 251, 0.1);
        }
        
        .chat-content {
            flex: 1;
            overflow-y: auto;
        }
        
        .chat-tab-panel {
            display: none;
            height: 100%;
        }
        
        .chat-tab-panel.active {
            display: block;
        }
        
        .conversations-list {
            padding: 0;
        }
        
        .conversation-item {
            padding: 16px 24px;
            border-bottom: 1px solid #2A2D35;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
        }
        
        .conversation-item:hover {
            background: rgba(59, 183, 251, 0.05);
        }
        
        .conversation-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            margin-right: 12px;
            border: 2px solid rgba(59, 183, 251, 0.2);
        }
        
        .conversation-info {
            flex: 1;
        }
        
        .conversation-name {
            color: #ffffff;
            font-weight: 600;
            margin: 0 0 4px 0;
            font-size: 15px;
        }
        
        .conversation-preview {
            color: #8b94a1;
            font-size: 13px;
            margin: 0;
        }
        
        .conversation-meta {
            text-align: right;
            color: #8b94a1;
            font-size: 12px;
        }
        
        .unread-badge {
            background: #3BB7FB;
            color: #ffffff;
            border-radius: 50%;
            min-width: 20px;
            height: 20px;
            font-size: 11px;
            font-weight: 600;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-top: 4px;
        }
        
        /* Chat Main Area */
        .chat-main {
            flex: 1;
            background: linear-gradient(145deg, #18191E, #1E1F26);
            display: flex;
            flex-direction: column;
            z-index: 10000;
        }
        
        .chat-main-header {
            padding: 20px 24px;
            border-bottom: 1px solid #2A2D35;
            display: flex;
            align-items: center;
            gap: 16px;
        }
        
        .back-to-chats-btn {
            background: none;
            border: none;
            color: #3BB7FB;
            font-size: 1.2rem;
            cursor: pointer;
            padding: 8px;
            border-radius: 50%;
            transition: all 0.3s ease;
        }
        
        .back-to-chats-btn:hover {
            background: rgba(59, 183, 251, 0.1);
        }
        
        .chat-user-info {
            flex: 1;
            display: flex;
            align-items: center;
            gap: 12px;
        }
        
        .chat-user-avatar {
            width: 45px;
            height: 45px;
            border-radius: 50%;
            border: 2px solid rgba(59, 183, 251, 0.3);
        }
        
        .chat-user-details h4 {
            color: #ffffff;
            margin: 0;
            font-size: 16px;
            font-weight: 600;
        }
        
        .chat-user-status {
            color: #8b94a1;
            font-size: 13px;
        }
        
        .chat-actions {
            display: flex;
            gap: 8px;
        }
        
        .chat-action-btn {
            background: none;
            border: none;
            color: #8b94a1;
            font-size: 1.1rem;
            cursor: pointer;
            padding: 10px;
            border-radius: 50%;
            transition: all 0.3s ease;
        }
        
        .chat-action-btn:hover {
            background: rgba(59, 183, 251, 0.1);
            color: #3BB7FB;
        }
        
        .chat-messages {
            flex: 1;
            padding: 20px 24px;
            overflow-y: auto;
            display: flex;
            flex-direction: column;
            gap: 16px;
        }
        
        .message {
            display: flex;
            gap: 8px;
            max-width: 70%;
        }
        
        .message.sent {
            align-self: flex-end;
            flex-direction: row-reverse;
        }
        
        .message-avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            flex-shrink: 0;
        }
        
        .message-content {
            background: rgba(42, 45, 53, 0.8);
            padding: 12px 16px;
            border-radius: 18px;
            color: #ffffff;
            font-size: 14px;
            line-height: 1.4;
        }
        
        .message.sent .message-content {
            background: linear-gradient(135deg, #3BB7FB, #2196F3);
        }
        
        .message-time {
            font-size: 11px;
            color: #8b94a1;
            margin-top: 4px;
            text-align: center;
        }
        
        .chat-input-area {
            padding: 20px 24px;
            border-top: 1px solid #2A2D35;
        }
        
        .chat-input-container {
            display: flex;
            align-items: center;
            gap: 12px;
            background: rgba(42, 45, 53, 0.6);
            border: 1px solid #3a3f46;
            border-radius: 25px;
            padding: 8px 16px;
            transition: all 0.3s ease;
        }
        
        .chat-input-container:focus-within {
            border-color: #3BB7FB;
            box-shadow: 0 0 0 2px rgba(59, 183, 251, 0.2);
        }
        
        .message-input {
            flex: 1;
            background: none;
            border: none;
            color: #ffffff;
            font-size: 14px;
            outline: none;
            padding: 8px 0;
        }
        
        .message-input::placeholder {
            color: #8b94a1;
        }
        
        .attachment-btn,
        .emoji-btn,
        .send-btn {
            background: none;
            border: none;
            color: #8b94a1;
            cursor: pointer;
            padding: 6px;
            border-radius: 50%;
            transition: all 0.3s ease;
        }
        
        .send-btn {
            color: #3BB7FB;
        }
        
        .attachment-btn:hover,
        .emoji-btn:hover,
        .send-btn:hover {
            background: rgba(59, 183, 251, 0.1);
            color: #3BB7FB;
        }
        
        /* Responsive Design */
        @media (max-width: 768px) {
            .chat-sidebar {
                width: 100%;
            }
            
            .chat-main {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
            }
        }
        
        /* Profile Modal - Recent Books Styles */
        .profile-books-wrapper {
            position: relative;
        }
        
        .profile-books-scroll {
            max-height: 300px;
            overflow-y: auto;
            overflow-x: hidden;
            padding-right: 8px;
            transition: max-height 0.3s ease;
        }
        
        .profile-books-scroll.expanded {
            max-height: 600px;
        }
        
        /* Custom scrollbar for books container */
        .profile-books-scroll::-webkit-scrollbar {
            width: 6px;
        }
        
        .profile-books-scroll::-webkit-scrollbar-track {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 3px;
        }
        
        .profile-books-scroll::-webkit-scrollbar-thumb {
            background: rgba(59, 183, 251, 0.4);
            border-radius: 3px;
        }
        
        .profile-books-scroll::-webkit-scrollbar-thumb:hover {
            background: rgba(59, 183, 251, 0.6);
        }
        
        .recent-book-item {
            display: flex;
            align-items: center;
            gap: 15px;
            padding: 12px;
            margin-bottom: 10px;
            background: rgba(255, 255, 255, 0.03);
            border-radius: 12px;
            border: 1px solid rgba(255, 255, 255, 0.08);
            transition: all 0.3s ease;
            opacity: 1;
            max-height: 500px;
            overflow: hidden;
        }
        
        .recent-book-item:hover {
            background: rgba(59, 183, 251, 0.1);
            border-color: rgba(59, 183, 251, 0.3);
            transform: translateX(5px);
        }
        
        .recent-book-item.hidden-book {
            display: none;
        }
        
        .book-cover-tiny {
            width: 50px;
            height: 70px;
            object-fit: cover;
            border-radius: 6px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
            flex-shrink: 0;
        }
        
        .book-info {
            flex: 1;
            min-width: 0;
        }
        
        .book-title {
            color: #fff;
            font-size: 0.95rem;
            font-weight: 600;
            margin: 0 0 5px 0;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        
        .book-author {
            color: #b0b3b8;
            font-size: 0.85rem;
            margin: 0 0 5px 0;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        
        .book-genre {
            display: inline-block;
            background: rgba(59, 183, 251, 0.15);
            color: #3BB7FB;
            padding: 2px 8px;
            border-radius: 10px;
            font-size: 0.75rem;
            font-weight: 500;
        }
        
        .profile-show-more {
            background: rgba(59, 183, 251, 0.1);
            border: 1px solid rgba(59, 183, 251, 0.3);
            color: #3BB7FB;
            padding: 8px 20px;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }
        
        .profile-show-more:hover {
            background: rgba(59, 183, 251, 0.2);
            border-color: rgba(59, 183, 251, 0.5);
            color: #3BB7FB;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(59, 183, 251, 0.2);
        }
        
        .profile-show-more i {
            transition: transform 0.3s ease;
        }
        
        /* Animation for expanding/collapsing */
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .recent-book-item:not(.hidden-book) {
            animation: fadeIn 0.3s ease forwards;
        }
        
        /* Search Results - User Books Styles */
        .search-result-item {
            background: rgba(35, 36, 42, 0.6);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 12px;
            padding: 0;
            margin-bottom: 15px;
            transition: all 0.3s ease;
            overflow: hidden;
        }
        
        .search-result-item:hover {
            border-color: rgba(59, 183, 251, 0.3);
            box-shadow: 0 4px 12px rgba(59, 183, 251, 0.15);
        }
        
        .search-result-header {
            display: flex;
            align-items: center;
            gap: 15px;
            padding: 15px;
            cursor: pointer;
            transition: background 0.3s ease;
        }
        
        .search-result-header:hover {
            background: rgba(59, 183, 251, 0.05);
        }
        
        .search-result-avatar {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            object-fit: cover;
            border: 2px solid rgba(59, 183, 251, 0.3);
            flex-shrink: 0;
        }
        
        .search-result-info {
            flex: 1;
        }
        
        .search-result-name {
            color: #fff;
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 4px;
        }
        
        .search-result-username {
            color: #b0b3b8;
            font-size: 0.9rem;
            margin-bottom: 8px;
        }
        
        .search-result-stats {
            display: flex;
            gap: 12px;
            flex-wrap: wrap;
        }
        
        .search-result-stats span {
            color: #8a8e94;
            font-size: 0.85rem;
            display: flex;
            align-items: center;
            gap: 4px;
        }
        
        .search-result-stats span i {
            color: #3BB7FB;
        }
        
        .search-user-books {
            border-top: 1px solid rgba(255, 255, 255, 0.08);
            padding: 15px;
            background: rgba(0, 0, 0, 0.2);
        }
        
        .search-books-scroll {
            max-height: 240px;
            overflow-y: auto;
            overflow-x: hidden;
            padding-right: 8px;
            transition: max-height 0.3s ease;
        }
        
        .search-books-scroll.expanded {
            max-height: 500px;
        }
        
        .search-books-scroll::-webkit-scrollbar {
            width: 5px;
        }
        
        .search-books-scroll::-webkit-scrollbar-track {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 3px;
        }
        
        .search-books-scroll::-webkit-scrollbar-thumb {
            background: rgba(59, 183, 251, 0.4);
            border-radius: 3px;
        }
        
        .search-books-scroll::-webkit-scrollbar-thumb:hover {
            background: rgba(59, 183, 251, 0.6);
        }
        
        .search-book-item {
            display: flex;
            align-items: center;
            gap: 12px;
            padding: 10px;
            margin-bottom: 8px;
            background: rgba(255, 255, 255, 0.03);
            border-radius: 10px;
            border: 1px solid rgba(255, 255, 255, 0.05);
            transition: all 0.3s ease;
        }
        
        .search-book-item:hover {
            background: rgba(59, 183, 251, 0.08);
            border-color: rgba(59, 183, 251, 0.2);
            transform: translateX(4px);
        }
        
        .search-book-item.hidden-book {
            display: none;
        }
        
        .search-book-cover {
            width: 40px;
            height: 55px;
            object-fit: cover;
            border-radius: 5px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
            flex-shrink: 0;
        }
        
        .search-book-info {
            flex: 1;
            min-width: 0;
        }
        
        .search-book-title {
            color: #fff;
            font-size: 0.9rem;
            font-weight: 600;
            margin-bottom: 3px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        
        .search-book-author {
            color: #b0b3b8;
            font-size: 0.8rem;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        
        .btn-show-more-books {
            display: block;
            width: 100%;
            background: rgba(59, 183, 251, 0.1);
            border: 1px solid rgba(59, 183, 251, 0.3);
            color: #3BB7FB;
            padding: 8px 15px;
            border-radius: 8px;
            font-size: 0.85rem;
            font-weight: 500;
            margin-top: 10px;
            transition: all 0.3s ease;
            cursor: pointer;
        }
        
        .btn-show-more-books:hover {
            background: rgba(59, 183, 251, 0.2);
            border-color: rgba(59, 183, 251, 0.5);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(59, 183, 251, 0.2);
        }
        
        .btn-show-more-books i {
            transition: transform 0.3s ease;
        }
        
        .search-no-results {
            text-align: center;
            padding: 40px 20px;
            color: #b0b3b8;
        }
        
        .search-no-results i {
            font-size: 3rem;
            color: #8a8e94;
            margin-bottom: 15px;
        }
        
        .search-loading {
            text-align: center;
            padding: 40px 20px;
            color: #b0b3b8;
        }
        
        .search-loading .spinner-border {
            color: #3BB7FB;
        }
    </style>
</head>
<body>
<!-- Include Standard Navbar -->
<%- include('partials/navbar') %>

<!-- Dashboard Main Content -->
<main class="container-fluid py-4">
    <!-- Welcome Hero Section -->
    <section class="welcome-hero mb-5">
        <div class="container">
            <div class="row align-items-center">
                <!-- User Photo - Shows first on mobile -->
                <div class="col-lg-4 order-1 order-lg-2 text-center mb-4 mb-lg-0">
                    <div class="user-avatar-large">
                        <% if (userPhoto && userPhoto !== '/images/default-avatar.png') { %>
                            <img src="<%= userPhoto %>" alt="Profile" class="rounded-circle profile-img-large">
                        <% } else { %>
                            <div class="default-avatar-dashboard">
                                <svg width="120" height="120" viewBox="0 0 120 120" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <circle cx="60" cy="60" r="60" fill="#6B7280"/>
                                    <circle cx="60" cy="45" r="20" fill="#9CA3AF"/>
                                    <path d="M30 100 C30 85, 42 75, 60 75 C78 75, 90 85, 90 100" fill="#9CA3AF"/>
                                </svg>
                            </div>
                        <% } %>
                    </div>
                </div>
                <!-- Welcome Content - Shows second on mobile, centered -->
                <div class="col-lg-8 order-2 order-lg-1 text-center text-lg-left">
                    <h1 class="hero-title mb-3">
                        Welcome back, <span class="gradient-text"><%= userName || 'Reader' %>!</span>
                    </h1>
                    <p class="hero-subtitle mb-4">Ready to discover your next great read? Check out what's happening in your reading community.</p>
                    <div class="d-flex flex-wrap gap-3 justify-content-center justify-content-lg-start">
                        <a href="/library" class="btn btn-gradient">
                            <i class="bi bi-book"></i> My Library
                        </a>
                        <a href="/swap-matcher" class="btn btn-outline-light">
                            <i class="bi bi-arrow-left-right"></i> Find Swaps
                        </a>
                        <button type="button" class="btn btn-outline-info" id="refresh-dashboard" title="Refresh All Data">
                            <i class="bi bi-arrow-clockwise"></i> Refresh Data
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Stats Overview -->
    <section class="dashboard-stats mb-5" id="user-stats-section">
        <div class="container">
            <h3 class="section-title mb-4">
                <i class="bi bi-graph-up"></i> Your Reading Journey
                <button type="button" class="btn btn-sm btn-outline-primary ml-2 refresh-stats" title="Refresh Stats">
                    <i class="bi bi-arrow-clockwise"></i>
                </button>
            </h3>
            <div class="row text-center">
                        <div class="col-6 col-md-6 col-lg-3 mb-4">
                            <div class="card card-dark h-100">
                                <div class="card-body text-center">
                                    <div class="stat-item">
                                        <div class="stat-value text-gradient" id="books-owned-count"><%= userStats.booksOwned %></div>
                                        <div class="stat-label">Books Owned</div>
                                        <div class="stat-icon"><i class="bi bi-book" style="color: #3BB7FB; font-size: 1.4rem;"></i></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-6 col-md-6 col-lg-3 mb-4">
                            <div class="card card-dark h-100">
                                <div class="card-body text-center">
                                    <div class="stat-item">
                                        <div class="stat-value text-gradient" id="swaps-completed-count"><%= userStats.swapsCompleted %></div>
                                        <div class="stat-label">Swaps Completed</div>
                                        <div class="stat-icon"><i class="bi bi-arrow-left-right" style="color: #3BB7FB; font-size: 1.4rem;"></i></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-6 col-md-6 col-lg-3 mb-4">
                            <div class="card card-dark h-100">
                                <div class="card-body text-center">
                                    <div class="stat-item">
                                        <div class="stat-value text-gradient" id="wishlist-items-count"><%= userStats.wishlistItems %></div>
                                        <div class="stat-label">Wishlist Items</div>
                                        <div class="stat-icon"><i class="bi bi-heart" style="color: #3BB7FB; font-size: 1.4rem;"></i></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-6 col-md-6 col-lg-3 mb-4">
                            <div class="card card-dark h-100">
                                <div class="card-body text-center">
                                    <div class="stat-item">
                                        <div class="stat-value text-gradient" id="pending-swaps-count"><%= userStats.pendingSwaps %></div>
                                        <div class="stat-label">Pending Swaps</div>
                                        <div class="stat-icon"><i class="bi bi-clock" style="color: #3BB7FB; font-size: 1.4rem;"></i></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
        </div>
    </section>

    <!-- User Search Section -->
    <section class="user-search mb-5">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <h2 class="section-title">
                        <i class="bi bi-people"></i> Find Users
                    </h2>
                    <div class="history-style-search-container">
                        <input type="text" id="userSearchInput" class="history-style-search-input" 
                               placeholder="Search for users by name or username..." 
                               autocomplete="off">
                        <div class="history-style-search-icon" id="searchUsersBtn">
                            <i class="bi bi-search"></i>
                        </div>
                    </div>
                        <div id="searchResults" class="search-results" style="display: none;">
                            <!-- Search results will be populated here -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Quick Actions -->
    <section class="quick-actions mb-5">
        <div class="container">
            <h3 class="section-title mb-4">
                <i class="bi bi-lightning"></i> Quick Actions
            </h3>
            <div class="row">
                <div class="col-6 col-md-6 col-lg-3 mb-4">
                    <div class="card card-dark h-100">
                        <div class="card-body text-center d-flex flex-column justify-content-center">
                            <a href="/library" class="action-card-modern">
                                <div class="action-icon-modern">
                                    <i class="bi bi-plus-circle"></i>
                                </div>
                                <h6>Add Book</h6>
                                <p>Add a new book to your library</p>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="col-6 col-md-6 col-lg-3 mb-4">
                    <div class="card card-dark h-100">
                        <div class="card-body text-center d-flex flex-column justify-content-center">
                            <a href="/swap-matcher" class="action-card-modern">
                                <div class="action-icon-modern">
                                    <i class="bi bi-arrow-left-right"></i>
                                </div>
                                <h6>Find Swaps</h6>
                                <p>Discover books to swap</p>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="col-6 col-md-6 col-lg-3 mb-4">
                    <div class="card card-dark h-100">
                        <div class="card-body text-center d-flex flex-column justify-content-center">
                            <a href="/wishlist" class="action-card-modern">
                                <div class="action-icon-modern">
                                    <i class="bi bi-heart"></i>
                                </div>
                                <h6>Wishlist</h6>
                                <p>Manage your reading list</p>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="col-6 col-md-6 col-lg-3 mb-4">
                    <div class="card card-dark h-100">
                        <div class="card-body text-center d-flex flex-column justify-content-center">
                            <a href="/messages" class="action-card-modern">
                                <div class="action-icon-modern">
                                    <i class="bi bi-chat-dots"></i>
                                </div>
                                <h6>Messages</h6>
                                <p>Check conversations</p>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Main Dashboard Grid -->
    <section class="dashboard-grid">
        <div class="container">
            <div class="row">
                <!-- Swap Insights -->
                <div class="col-12 col-md-6 col-lg-6 mb-4">
                    <div class="card card-dark h-100" id="swap-insights-section">
                        <div class="card-header">
                            <h5 class="card-title">
                                <i class="bi bi-graph-up"></i> Swap Insights
                                <button type="button" class="btn btn-sm btn-outline-primary ml-2 refresh-insights" title="Refresh Insights">
                                    <i class="bi bi-arrow-clockwise"></i>
                                </button>
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="insight-item mb-4">
                                <div class="insight-header">
                                    <div class="insight-title">
                                        <i class="bi bi-graph-up-arrow"></i>
                                        <span>Success Rate</span>
                                    </div>
                                    <div class="insight-value">
                                        <span class="badge badge-gradient"><span id="success-rate"><%= swapInsights.successRate %></span>%</span>
                                    </div>
                                </div>
                                <div class="progress-modern">
                                    <div class="progress-bar-modern bg-gradient" data-width="<%= swapInsights.successRate %>"></div>
                                </div>
                            </div>
                            
                            <div class="insight-item mb-4">
                                <div class="insight-header">
                                    <div class="insight-title">
                                        <i class="bi bi-clock-history"></i>
                                        <span>Avg Response Time</span>
                                    </div>
                                    <div class="insight-value">
                                        <span class="insight-text" id="avg-response-time"><%= swapInsights.avgResponseTime %></span>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="insight-item">
                                <div class="insight-header">
                                    <div class="insight-title">
                                        <i class="bi bi-bookmark"></i>
                                        <span>Popular Genre</span>
                                    </div>
                                    <div class="insight-value">
                                        <span class="badge badge-gradient" id="popular-genre"><%= swapInsights.popularGenre %></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Nearby Books -->
                <div class="col-12 col-md-6 col-lg-6 mb-4">
                    <div class="card card-dark h-100" id="nearby-books-section">
                        <div class="card-header">
                            <h5 class="card-title">
                                <i class="bi bi-heart"></i> Recommended Books
                            </h5>
                        </div>
                        <div class="card-body">
                            <div id="nearby-books-list">
                                <% if (nearbyBooks && nearbyBooks.length > 0) { %>
                                    <% nearbyBooks.slice(0, 3).forEach(book => { %>
                                        <div class="nearby-book-item mb-3">
                                            <div class="nearby-book-content">
                                                <div class="book-cover-section">
                                                    <img src="<%= book.image || '/images/placeholder-book.jpg' %>" 
                                                         alt="<%= book.title %>" class="book-cover-small"
                                                         onerror="this.src='/images/placeholder-book.jpg'">
                                                </div>
                                                <div class="book-details-section">
                                                    <h6 class="book-title"><%= book.title %></h6>
                                                    <p class="book-author">by <%= book.author %></p>
                                                    <p class="book-owner">
                                                        <i class="bi bi-person"></i> 
                                                        <span class="clickable" onclick="openUserProfile('<%= book.ownerId %>')">
                                                            <%= book.ownerName || book.owner?.name || 'Unknown Owner' %>
                                                        </span>
                                                    </p>
                                                    <div class="book-actions">
                                                        <span class="location-text">
                                                            <i class="bi bi-heart"></i> <%= book.distance || 'Recommended' %>
                                                        </span>
                                                        <a href="/swap-request/<%= book.id %>" class="btn btn-sm btn-outline-light">
                                                            Request
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    <% }); %>
                            <% } else { %>
                                <div class="empty-state text-center py-4">
                                    <i class="bi bi-heart empty-state-icon"></i>
                                    <h6 class="mt-3">No recommended books</h6>
                                    <p class="text-muted">No books available from other users at the moment</p>
                                </div>
                            <% } %>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Trending Genres -->
                <div class="col-12 col-md-6 col-lg-6 mb-4">
                    <div class="card card-dark h-100" id="trending-section">
                        <div class="card-header">
                            <h5 class="card-title">
                                <i class="bi bi-fire"></i> Trending Genres
                                <button type="button" class="btn btn-sm btn-outline-primary ml-2 refresh-trending" title="Refresh Trending Data">
                                    <i class="bi bi-arrow-clockwise"></i>
                                </button>
                            </h5>
                        </div>
                        <div class="card-body">
                            <div id="trending-genres-list">
                                <% if (trendingGenres && trendingGenres.length > 0) { %>
                                    <% trendingGenres.slice(0, 3).forEach((genre, index) => { %>
                                        <div class="trending-item mb-3">
                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                                <div class="d-flex align-items-center">
                                                    <span class="trending-rank">#<%= index + 1 %></span>
                                                    <span class="genre-name"><%= genre.name %></span>
                                                </div>
                                                <span class="badge badge-gradient"><%= genre.swaps %></span>
                                            </div>
                                            <div class="progress-modern">
                                                <div class="progress-bar-modern bg-gradient" data-width="<%= genre.percentage %>"></div>
                                            </div>
                                        </div>
                                    <% }); %>
                                <% } else { %>
                                    <div class="empty-state text-center py-4">
                                        <i class="bi bi-fire empty-state-icon"></i>
                                        <h6 class="mt-3">No trending data</h6>
                                        <p class="text-muted">Check back soon for trending genres</p>
                                    </div>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Top 3 Leaderboard -->
                <div class="col-12 col-md-6 col-lg-6 mb-4">
                    <div class="card card-dark h-100">
                        <div class="card-header">
                            <h5 class="card-title">
                                <i class="bi bi-trophy"></i> Top 3 Leaderboard
                            </h5>
                        </div>
                        <div class="card-body">
                            <div id="leaderboard-list">
                                <% if (leaderboard && leaderboard.length > 0) { %>
                                    <% leaderboard.slice(0, 3).forEach((user, index) => { %>
                                        <div class="leaderboard-item mb-3 <%= user.isCurrentUser ? 'current-user' : '' %>">
                                            <div class="leaderboard-content">
                                                <div class="rank-section">
                                                    <span class="rank-badge rank-<%= user.rank %>">#<%= user.rank %></span>
                                                </div>
                                                <div class="user-avatar-section">
                                                    <img src="<%= user.avatar || '/images/default-avatar.png' %>" 
                                                         alt="<%= user.displayName %>" class="user-avatar clickable"
                                                         onerror="this.src='/images/default-avatar.png'"
                                                         onclick="openUserProfile('<%= user._id %>')">
                                                </div>
                                                <div class="user-details-section">
                                                    <h6 class="user-name clickable" onclick="openUserProfile('<%= user._id %>')"><%= user.displayName %></h6>
                                                    <p class="user-level">Level <%= user.level %></p>
                                                    <div class="user-stats">
                                                        <div class="stat-item">
                                                            <i class="bi bi-star-fill"></i>
                                                            <span><%= user.totalPoints %> pts</span>
                                                        </div>
                                                        <div class="stat-item">
                                                            <i class="bi bi-award"></i>
                                                            <span><%= user.badgeCount %> badges</span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="user-actions">
                                                    <span class="join-date">
                                                        <i class="bi bi-calendar"></i> <%= user.joinDate %>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    <% }); %>
                                <% } else { %>
                                    <div class="empty-state text-center py-4">
                                        <i class="bi bi-trophy empty-state-icon"></i>
                                        <h6 class="mt-3">No leaderboard data</h6>
                                        <p class="text-muted">Check back soon for top users</p>
                                    </div>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

<!-- User Profile Modal -->
<div class="modal fade" id="userProfileModal" tabindex="-1" aria-labelledby="userProfileModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content profile-modal">
            <div class="modal-header profile-header">
                <h5 class="modal-title" id="userProfileModalLabel">
                    <i class="bi bi-person-circle"></i> User Profile
                </h5>
                <button type="button" class="btn-close" onclick="closeProfileModal()" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body profile-body">
                <!-- Loading State -->
                <div id="profileLoading" class="text-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-3 text-muted">Loading profile...</p>
                </div>
                
                <!-- Profile Content -->
                <div id="profileContent" style="display: none;">
                    <!-- Profile Header -->
                    <div class="profile-header-section">
                        <div class="profile-avatar-section">
                            <img id="profileAvatar" src="" alt="User Avatar" class="profile-avatar">
                            <div class="profile-level-badge" id="profileLevel">Level 1</div>
                        </div>
                        <div class="profile-info-section">
                            <h4 id="profileDisplayName" class="profile-name">User Name</h4>
                            <p id="profileUsername" class="profile-username">@username</p>
                            <div class="profile-stats-row">
                                <div class="stat-item">
                                    <i class="bi bi-star-fill"></i>
                                    <span id="profilePoints">0</span> pts
                                </div>
                                <div class="stat-item">
                                    <i class="bi bi-award"></i>
                                    <span id="profileBadges">0</span> badges
                                </div>
                                <div class="stat-item">
                                    <i class="bi bi-calendar"></i>
                                    <span id="profileJoinDate">Unknown</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Badges Section -->
                    <div class="profile-section">
                        <h6 class="section-title">
                            <i class="bi bi-award"></i> Badges
                        </h6>
                        <div id="profileBadgesList" class="badges-container">
                            <!-- Badges will be populated here -->
                        </div>
                    </div>
                    
                    <!-- Stats Section -->
                    <div class="profile-section">
                        <h6 class="section-title">
                            <i class="bi bi-graph-up"></i> Statistics
                        </h6>
                        <div class="stats-grid">
                            <div class="stat-card">
                                <div class="stat-icon">
                                    <i class="bi bi-book"></i>
                                </div>
                                <div class="stat-content">
                                    <div class="stat-value" id="profileBooksOwned">0</div>
                                    <div class="stat-label">Books Owned</div>
                                </div>
                            </div>
                            <div class="stat-card">
                                <div class="stat-icon">
                                    <i class="bi bi-arrow-left-right"></i>
                                </div>
                                <div class="stat-content">
                                    <div class="stat-value" id="profileSwapsCompleted">0</div>
                                    <div class="stat-label">Swaps Completed</div>
                                </div>
                            </div>
                            <div class="stat-card">
                                <div class="stat-icon">
                                    <i class="bi bi-percent"></i>
                                </div>
                                <div class="stat-content">
                                    <div class="stat-value" id="profileSuccessRate">0%</div>
                                    <div class="stat-label">Success Rate</div>
                                </div>
                            </div>
                            <div class="stat-card">
                                <div class="stat-icon">
                                    <i class="bi bi-eye"></i>
                                </div>
                                <div class="stat-content">
                                    <div class="stat-value" id="profileBooksViewed">0</div>
                                    <div class="stat-label">Books Viewed</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Recent Books Section -->
                    <div class="profile-section">
                        <h6 class="section-title">
                            <i class="bi bi-collection"></i> Recent Books
                        </h6>
                        <div id="profileRecentBooks" class="recent-books-container">
                            <!-- Recent books will be populated here -->
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer profile-footer">
                <button type="button" class="btn btn-outline-light" onclick="closeProfileModal()">Close</button>
                <button type="button" class="btn btn-primary" id="profileMessageBtn">
                    <i class="bi bi-chat-dots"></i> Send Message
                </button>
            </div>
        </div>
    </div>
</div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.min.js"></script>
    
    <!-- User Profile Modal Script -->
    <script>
        function openUserProfile(userId) {
            console.log('Opening profile for userId:', userId);
            
            // Check if userId is valid
            if (!userId || userId === 'unknown' || userId === 'undefined') {
                alert('User profile not available');
                return;
            }
            
            // Show loading state
            document.getElementById('profileLoading').style.display = 'block';
            document.getElementById('profileContent').style.display = 'none';
            
            // Show modal
            $('#userProfileModal').modal('show');
            
            // Fetch user profile data
            fetch(`/api/user/profile/${userId}`)
                .then(response => {
                    console.log('Profile API response status:', response.status);
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Profile data received:', data);
                    
                    // Validate data structure
                    if (!data || !data.stats) {
                        console.error('Invalid data structure:', data);
                        throw new Error('Invalid profile data structure');
                    }
                    
                    // Hide loading, show content
                    document.getElementById('profileLoading').style.display = 'none';
                    document.getElementById('profileContent').style.display = 'block';
                    
                    // Populate profile data
                    populateProfile(data);
                })
                .catch(error => {
                    console.error('Error fetching user profile:', error);
                    document.getElementById('profileLoading').innerHTML = 
                        '<div class="text-center py-5"><i class="bi bi-exclamation-triangle text-warning"></i><p class="mt-3 text-muted">Error loading profile: ' + error.message + '</p></div>';
                });
        }
        
        function closeProfileModal() {
            $('#userProfileModal').modal('hide');
        }
        
        function populateProfile(data) {
            console.log('Populating profile with data:', data);
            
            try {
                // Basic info
                document.getElementById('profileAvatar').src = data.avatar || '/images/default-avatar.png';
                document.getElementById('profileDisplayName').textContent = data.displayName || 'Unknown User';
                document.getElementById('profileUsername').textContent = '@' + (data.username || 'unknown');
                document.getElementById('profileLevel').textContent = 'Level ' + (data.level || 1);
                document.getElementById('profilePoints').textContent = data.totalPoints || 0;
                document.getElementById('profileBadges').textContent = data.badgeCount || 0;
                document.getElementById('profileJoinDate').textContent = data.joinDate || 'Unknown';
                
                // Stats
                if (data.stats) {
                    document.getElementById('profileBooksOwned').textContent = data.stats.booksOwned || 0;
                    document.getElementById('profileSwapsCompleted').textContent = data.stats.swapsCompleted || 0;
                    document.getElementById('profileSuccessRate').textContent = (data.stats.successRate || 0) + '%';
                    document.getElementById('profileBooksViewed').textContent = data.stats.booksViewed || 0;
                    
                    console.log('Stats populated:', {
                        booksOwned: data.stats.booksOwned,
                        swapsCompleted: data.stats.swapsCompleted,
                        successRate: data.stats.successRate,
                        booksViewed: data.stats.booksViewed
                    });
                } else {
                    console.error('No stats data available');
                }
                
                // Badges
                console.log('Populating badges:', data.badges);
                populateBadges(data.badges);
                
                // Recent books
                console.log('Populating recent books:', data.recentBooks);
                populateRecentBooks(data.recentBooks);
            } catch (error) {
                console.error('Error populating profile:', error);
            }
        }
        
        function populateBadges(badges) {
            const badgesContainer = document.getElementById('profileBadgesList');
            
            if (badges && badges.length > 0) {
                badgesContainer.innerHTML = badges.map(badge => `
                    <div class="badge-item">
                        <i class="bi bi-award"></i>
                        <span>${badge}</span>
                    </div>
                `).join('');
            } else {
                badgesContainer.innerHTML = '<div class="text-center py-4"><i class="bi bi-award text-muted" style="font-size: 3rem; opacity: 0.5;"></i><p class="text-muted mt-3 mb-0" style="font-size: 1.1rem; font-weight: 500;">No badges earned yet</p><p class="text-muted mt-1" style="font-size: 0.9rem;">Keep swapping books to earn badges!</p></div>';
            }
        }
        
        function populateRecentBooks(books) {
            const booksContainer = document.getElementById('profileRecentBooks');
            
            if (books && books.length > 0) {
                const visibleCount = Math.min(3, books.length);
                const hasMore = books.length > 3;
                
                // Create scrollable wrapper
                let booksHTML = '<div class="profile-books-wrapper">';
                
                // Add all books to scrollable container
                booksHTML += '<div class="profile-books-scroll">';
                booksHTML += books.map((book, index) => `
                    <div class="recent-book-item ${index >= 3 ? 'hidden-book' : ''}" data-book-index="${index}">
                        <img src="${book.image || '/images/placeholder-book.jpg'}" 
                             alt="${book.title}" class="book-cover-tiny"
                             onerror="this.src='/images/placeholder-book.jpg'">
                        <div class="book-info">
                            <h6 class="book-title">${book.title}</h6>
                            <p class="book-author">by ${book.author}</p>
                            <span class="book-genre">${book.genre || 'Unknown'}</span>
                        </div>
                    </div>
                `).join('');
                booksHTML += '</div>'; // Close scroll container
                
                // Add "Show More" button if there are more than 3 books
                if (hasMore) {
                    booksHTML += `
                        <div class="text-center mt-3">
                            <button class="btn btn-sm btn-outline-primary profile-show-more" onclick="toggleProfileBooks()">
                                <i class="bi bi-chevron-down"></i> Show ${books.length - 3} More
                            </button>
                        </div>
                    `;
                }
                
                booksHTML += '</div>'; // Close wrapper
                
                booksContainer.innerHTML = booksHTML;
                
                // Store book count for toggle function
                window.profileBooksExpanded = false;
                window.profileTotalBooks = books.length;
            } else {
                booksContainer.innerHTML = '<div class="text-center py-4"><i class="bi bi-book text-muted" style="font-size: 3rem; opacity: 0.5;"></i><p class="text-muted mt-3 mb-0" style="font-size: 1.1rem; font-weight: 500;">No books added yet</p><p class="text-muted mt-1" style="font-size: 0.9rem;">Start adding books to your library!</p></div>';
            }
        }
        
        // Toggle function for showing/hiding books
        function toggleProfileBooks() {
            const hiddenBooks = document.querySelectorAll('.recent-book-item.hidden-book');
            const button = document.querySelector('.profile-show-more');
            const scrollContainer = document.querySelector('.profile-books-scroll');
            
            if (!window.profileBooksExpanded) {
                // Show all books
                hiddenBooks.forEach(book => book.classList.remove('hidden-book'));
                scrollContainer.classList.add('expanded');
                button.innerHTML = '<i class="bi bi-chevron-up"></i> Show Less';
                window.profileBooksExpanded = true;
            } else {
                // Hide books after first 3
                hiddenBooks.forEach(book => book.classList.add('hidden-book'));
                scrollContainer.classList.remove('expanded');
                const hiddenCount = window.profileTotalBooks - 3;
                button.innerHTML = `<i class="bi bi-chevron-down"></i> Show ${hiddenCount} More`;
                window.profileBooksExpanded = false;
                
                // Scroll back to top of books container
                scrollContainer.scrollTop = 0;
            }
        }
        
        // User Search Functionality
        function initializeUserSearch() {
            const searchInput = document.getElementById('userSearchInput');
            const searchBtn = document.getElementById('searchUsersBtn');
            const searchResults = document.getElementById('searchResults');
            let searchTimeout;
            
            // Search on button click
            searchBtn.addEventListener('click', performSearch);
            
            // Search on Enter key
            searchInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    performSearch();
                }
            });
            
            // Search on input (with debounce)
            searchInput.addEventListener('input', function() {
                clearTimeout(searchTimeout);
                const query = this.value.trim();
                
                if (query.length >= 2) {
                    searchTimeout = setTimeout(() => {
                        performSearch();
                    }, 500); // 500ms delay
                } else if (query.length === 0) {
                    hideSearchResults();
                }
            });
            
            function performSearch() {
                const query = searchInput.value.trim();
                
                if (query.length < 2) {
                    hideSearchResults();
                    return;
                }
                
                showSearchLoading();
                
                fetch(`/api/users/search?q=${encodeURIComponent(query)}`)
                    .then(response => response.json())
                    .then(data => {
                        displaySearchResults(data.users);
                    })
                    .catch(error => {
                        console.error('Error searching users:', error);
                        showSearchError();
                    });
            }
            
            function showSearchLoading() {
                searchResults.style.display = 'block';
                searchResults.innerHTML = `
                    <div class="search-loading">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Searching...</span>
                        </div>
                        <p class="mt-2">Searching users...</p>
                    </div>
                `;
            }
            
            function displaySearchResults(users) {
                searchResults.style.display = 'block';
                
                if (users.length === 0) {
                    searchResults.innerHTML = `
                        <div class="search-no-results">
                            <i class="bi bi-person-x"></i>
                            <p>No users found matching "${searchInput.value}"</p>
                        </div>
                    `;
                    return;
                }
                
                searchResults.innerHTML = users.map((user, userIndex) => {
                    const books = user.recentBooks || [];
                    const visibleBooks = books.slice(0, 3);
                    const hasMoreBooks = books.length > 3;
                    
                    let booksHTML = '';
                    if (books.length > 0) {
                        booksHTML = `
                            <div class="search-user-books">
                                <div class="search-books-scroll" id="search-books-${userIndex}">
                                    ${books.map((book, bookIndex) => `
                                        <div class="search-book-item ${bookIndex >= 3 ? 'hidden-book' : ''}" data-book-index="${bookIndex}">
                                            <img src="${book.image}" 
                                                 alt="${book.title}" 
                                                 class="search-book-cover"
                                                 onerror="this.src='/images/placeholder-book.jpg'">
                                            <div class="search-book-info">
                                                <div class="search-book-title">${book.title}</div>
                                                <div class="search-book-author">${book.author}</div>
                                            </div>
                                        </div>
                                    `).join('')}
                                </div>
                                ${hasMoreBooks ? `
                                    <button class="btn-show-more-books" onclick="toggleSearchUserBooks(${userIndex}, event)">
                                        <i class="bi bi-chevron-down"></i> ${books.length - 3} more
                                    </button>
                                ` : ''}
                            </div>
                        `;
                    }
                    
                    return `
                        <div class="search-result-item">
                            <div class="search-result-header" onclick="openUserProfile('${user._id}')">
                                <img src="${user.avatar}" alt="${user.name}" class="search-result-avatar"
                                     onerror="this.src='/images/default-avatar.png'">
                                <div class="search-result-info">
                                    <div class="search-result-name">${user.name}</div>
                                    <div class="search-result-username">@${user.username}</div>
                                    <div class="search-result-stats">
                                        <span><i class="bi bi-star"></i> ${user.points} pts</span>
                                        <span><i class="bi bi-award"></i> ${user.badges} badges</span>
                                        <span><i class="bi bi-book"></i> ${user.booksOwned} books</span>
                                    </div>
                                </div>
                            </div>
                            ${booksHTML}
                        </div>
                    `;
                }).join('');
                
                // Initialize toggle state for each user
                window.searchUserBooksExpanded = {};
            }
            
            // Toggle function for search user books
            function toggleSearchUserBooks(userIndex, event) {
                event.stopPropagation(); // Prevent opening profile
                
                const container = document.getElementById(`search-books-${userIndex}`);
                const hiddenBooks = container.querySelectorAll('.search-book-item.hidden-book');
                const button = event.currentTarget;
                const expanded = window.searchUserBooksExpanded[userIndex] || false;
                
                if (!expanded) {
                    // Show all books
                    hiddenBooks.forEach(book => book.classList.remove('hidden-book'));
                    container.classList.add('expanded');
                    button.innerHTML = '<i class="bi bi-chevron-up"></i> Show less';
                    window.searchUserBooksExpanded[userIndex] = true;
                } else {
                    // Hide books after first 3
                    hiddenBooks.forEach(book => book.classList.add('hidden-book'));
                    container.classList.remove('expanded');
                    const hiddenCount = hiddenBooks.length;
                    button.innerHTML = `<i class="bi bi-chevron-down"></i> ${hiddenCount} more`;
                    window.searchUserBooksExpanded[userIndex] = false;
                    container.scrollTop = 0;
                }
            }
            
            function showSearchError() {
                searchResults.style.display = 'block';
                searchResults.innerHTML = `
                    <div class="search-no-results">
                        <i class="bi bi-exclamation-triangle"></i>
                        <p>Error searching users. Please try again.</p>
                    </div>
                `;
            }
            
            function hideSearchResults() {
                searchResults.style.display = 'none';
            }
        }
        
        // Initialize user search when page loads
        document.addEventListener('DOMContentLoaded', function() {
            initializeUserSearch();
        });
    </script>
    <script src="/js/navigation.js"></script>
    <script src="/js/dashboard-updater.js"></script>
    
    <!-- Progress bar initialization -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Set progress bar widths from data attributes
            document.querySelectorAll('.progress-bar[data-width]').forEach(function(bar) {
                const width = bar.getAttribute('data-width');
                bar.style.width = width + '%';
            });
        });
    </script>
    
    <!-- Include Navbar Chat System -->
    <script src="/socket.io/socket.io.js"></script>
    <script src="/js/navbar-chat.js"></script>
</body>
</html>

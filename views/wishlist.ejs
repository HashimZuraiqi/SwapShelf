<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Wishlist - SwapShelf</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.0/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark custom-navbar">
        <div class="container-fluid">
            <!-- Logo on far left -->
            <a class="navbar-brand d-flex align-items-center" href="/">
                <span class="logo-icon mr-2">📚</span>
                <span class="logo-text ml-2 gradient-text">Book<span class="swap">Swap</span></span>
            </a>
            
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            
            <div class="collapse navbar-collapse" id="navbarNav">
                <!-- Navigation options in the center -->
                <ul class="navbar-nav mx-auto">
                    <li class="nav-item <%= activePage === 'home' ? 'active' : '' %>" data-page="home">
                        <a class="nav-link" href="/"><i class="bi bi-house-door"></i> Home</a>
                    </li>
                    <li class="nav-item <%= activePage === 'dashboard' ? 'active' : '' %>" data-page="dashboard">
                        <a class="nav-link" href="/dashboard"><i class="bi bi-speedometer2"></i> Dashboard</a>
                    </li>
                    <li class="nav-item <%= activePage === 'library' ? 'active' : '' %>" data-page="library">
                        <a class="nav-link" href="/library"><i class="bi bi-book"></i> My Library</a>
                    </li>
                    <li class="nav-item <%= activePage === 'wishlist' ? 'active' : '' %>" data-page="wishlist">
                        <a class="nav-link" href="/wishlist"><i class="bi bi-heart"></i> Wishlist</a>
                    </li>
                    <li class="nav-item <%= activePage === 'swap-matcher' ? 'active' : '' %>" data-page="swap-matcher">
                        <a class="nav-link" href="/swap-matcher"><i class="bi bi-arrow-left-right"></i> Swap Matcher</a>
                    </li>
                    <li class="nav-item <%= activePage === 'rewards' ? 'active' : '' %>" data-page="rewards">
                        <a class="nav-link" href="/rewards"><i class="bi bi-trophy"></i> Rewards</a>
                    </li>
                </ul>
                
                <!-- Profile dropdown on far right -->
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="profileDropdown" role="button"
                           data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                          <i class="bi bi-person-circle"></i> Profile
                        </a>
                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="profileDropdown">
                          <a class="dropdown-item" href="/me"><i class="bi bi-person"></i> My Profile</a>
                          <a class="dropdown-item" href="/logout"><i class="bi bi-box-arrow-right"></i> Logout</a>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <main class="main-content container-fluid px-4 py-4">
        <!-- Page Header -->
        <div class="page-header mb-5">
            <div class="row">
                <div class="col-12">
                    <div class="mb-4">
                        <h1 class="mb-3 page-title" style="font-size: 2rem; font-weight: 700; color: #fff;">
                            <span class="title-icon me-2">
                                <img src="/images/image.png" alt="Wishlist Icon" class="title-icon-img" style="width: 32px; height: 32px;" />
                            </span>
                            My Wishlist
                        </h1>
                        <p class="subtitle mb-0" style="font-size: 1rem; color: #b0b3b8; line-height: 1.5;">
                            Discover and add books to your wishlist using our book explorer
                        </p>
                    </div>
                    
                    <!-- Search and Action Bar -->
                    <div class="d-flex flex-column flex-md-row gap-2 align-items-start align-items-md-center">
                        <!-- Search bar -->
                        <div class="flex-grow-1" style="max-width: 620px;">
                            <div class="search-box" style="background: #23242a; border: 1px solid rgba(120,130,150,.2); border-radius: 10px; padding: 0.2rem;">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text" style="background: transparent; border: none; color: #3BB7FB; font-size: 1rem; padding-left: 0.75rem;">
                                            <i class="bi bi-search"></i>
                                        </span>
                                    </div>
                                    <input
                                        id="wishlist-search"
                                        type="text"
                                        class="form-control search-input"
                                        placeholder="Search your wishlist..."
                                        autocomplete="off"
                                        style="background: transparent; border: none; color: #fff; font-size: 0.95rem; padding: 0.5rem 0.75rem; padding-left: 0.3rem; height: auto;"
                                    />
                                </div>
                            </div>
                        </div>
                        <!-- Explore Books Button -->
                        <div class="flex-shrink-0">
                            <button class="btn btn-gradient" onclick="openBookExplorer()" 
                                    style="font-size: 0.95rem; font-weight: 600; border-radius: 10px; padding: 0.55rem 1.3rem; white-space: nowrap; height: auto;">
                                <i class="bi bi-search me-2"></i> Explore Books
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- My Wishlist Content -->
        <div id="wishlist-content">
            <% if (!wishlistBooks || wishlistBooks.length === 0) { %>
                <div id="empty-state" class="text-center py-4 my-4">
                    <div style="background: #23242a; border: 1px solid rgba(120,130,150,.1); border-radius: 12px; padding: 2rem 1.5rem; max-width: 400px; margin: 0 auto;">
                        <i class="bi bi-heart empty-state-icon" style="font-size: 3rem; color: #3BB7FB; opacity: 0.6; margin-bottom: 1rem; display: block;"></i>
                        <h4 class="mt-2 empty-title" style="color: #fff; font-weight: 600; margin-bottom: 0.75rem;">Your wishlist is empty</h4>
                        <p class="empty-text" style="color: #b0b3b8; font-size: 0.95rem; margin-bottom: 1.5rem; line-height: 1.5;">
                            Use the "Explore Books" button above to find books and add them to your wishlist!
                        </p>
                        <button class="btn btn-gradient" onclick="openBookExplorer()" 
                                style="font-weight: 600; border-radius: 6px; padding: 0.5rem 1rem; font-size: 0.9rem;">
                            <i class="bi bi-search me-2"></i> Start Exploring
                        </button>
                    </div>
                </div>
            <% } else { %>
                <div class="mb-4">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h3 class="mb-0" style="color: #fff; font-weight: 600; font-size: 1.5rem;">
                            My Wishlist 
                            <span class="badge badge-primary ms-2" style="background: linear-gradient(135deg, #3BB7FB, #F6B443); font-size: 0.75rem; padding: 0.3rem 0.6rem; border-radius: 6px;">
                                <%= wishlistBooks.length %>
                            </span>
                        </h3>
                    </div>
                    <div class="row" id="wishlist-grid">
                        <% wishlistBooks.forEach(book => { %>
                            <div class="col-6 col-sm-6 col-md-4 col-lg-3 mb-4">
                                <div class="book-card h-100">
                                    <div class="text-center mb-3">
                                        <% if (book.image) { %>
                                            <img src="<%= book.image %>" class="book-thumbnail-grid" alt="<%= book.title %>">
                                        <% } else { %>
                                            <div class="book-thumbnail-grid bg-secondary d-flex align-items-center justify-content-center mx-auto">
                                                <i class="bi bi-book text-white" style="font-size: 2rem;"></i>
                                            </div>
                                        <% } %>
                                    </div>
                                    <div class="book-info">
                                        <h6 class="text-white font-weight-bold mb-2" style="font-size: 0.95rem; line-height: 1.3; height: 2.6rem; overflow: hidden; text-align: center; display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical;">
                                            <%= book.title %>
                                        </h6>
                                        <p class="text-muted mb-3" style="font-size: 0.8rem; font-weight: 500; text-align: center; color: #3BB7FB;">
                                            <%= book.author %>
                                        </p>
                                        <div class="mt-auto">
                                            <div class="text-center mb-3">
                                                <small class="text-muted" style="font-size: 0.7rem;">
                                                    <i class="bi bi-calendar me-1"></i> <%= new Date(book.dateAdded).toLocaleDateString() %>
                                                </small>
                                            </div>
                                            <button class="btn btn-outline-danger w-100" onclick="removeFromWishlist('<%= book.id %>')" 
                                                    style="padding: 0.6rem; border-radius: 999px; font-weight: 600; font-size: 0.8rem; transition: all 0.2s ease;">
                                                <i class="bi bi-heart-fill me-1"></i> Remove
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>
            <% } %>
        </div>
    </main>

    <!-- Book Explorer Modal -->
    <div class="modal fade" id="bookExplorerModal" tabindex="-1" role="dialog" aria-labelledby="bookExplorerLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
            <div class="modal-content" style="background: linear-gradient(135deg,#18191E,#15181D,#0D0E10); border: 1px solid rgba(120,130,150,.1); border-radius: 18px;">
                <div class="modal-header" style="background: #23242a; border-bottom: 1px solid rgba(120,130,150,.1); padding: 1.6rem 1.4rem;">
                    <h5 class="modal-title" id="bookExplorerLabel" style="display: flex; align-items: center; gap: 0.75rem; color: #fff; font-weight: 800; font-size: 2.15rem; letter-spacing: 0.2px;">
                        <i class="bi bi-search" style="color: #3BB7FB;"></i> Explore Books
                    </h5>
                    <div class="d-flex align-items-center gap-2">
                        <button type="button" class="btn btn-sm btn-outline-light" onclick="toggleFullscreen()" 
                                style="border-color: rgba(120,130,150,.3); padding: 0.55rem 1rem; border-radius: 999px; font-weight: 700;">
                            <i class="bi bi-arrows-fullscreen" id="fullscreen-icon"></i>
                        </button>
                        <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close" style="font-size: 1.2rem; opacity: 0.8;">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                </div>
                <div class="modal-body" style="background: linear-gradient(135deg,#18191E,#15181D,#0D0E10); padding: 1.1rem;">
                    
                    <!-- Filters like history.ejs -->
                    <div style="top: 74px; z-index: 5; margin: 0 0 1.1rem; background: #23242a; border: 1px solid rgba(120,130,150,.1); border-radius: 14px; padding: 0.6rem 0.75rem; box-shadow: 0 2px 12px rgba(0,0,0,.2); display: flex; align-items: center; flex-wrap: wrap; gap: 0.45rem;">
                        <button class="filter-chip chip-all active" onclick="quickSearch('trending')" style="background: #1E1F23; color: #e6e9ee; border: 1px solid #2A2D35; border-radius: 999px; padding: 0.48rem 0.9rem; font-size: 0.92rem; font-weight: 700; display: inline-flex; align-items: center; gap: 0.45rem; transition: all 0.2s ease;">
                            <i class="bi bi-fire"></i> Trending
                        </button>
                        <button class="filter-chip chip-fiction" onclick="quickSearch('fiction')" style="background: #1E1F23; color: #e6e9ee; border: 1px solid #2A2D35; border-radius: 999px; padding: 0.48rem 0.9rem; font-size: 0.92rem; font-weight: 700; display: inline-flex; align-items: center; gap: 0.45rem; transition: all 0.2s ease;">
                            <i class="bi bi-book"></i> Fiction
                        </button>
                        <button class="filter-chip chip-business" onclick="quickSearch('business')" style="background: #1E1F23; color: #e6e9ee; border: 1px solid #2A2D35; border-radius: 999px; padding: 0.48rem 0.9rem; font-size: 0.92rem; font-weight: 700; display: inline-flex; align-items: center; gap: 0.45rem; transition: all 0.2s ease;">
                            <i class="bi bi-briefcase"></i> Business
                        </button>
                        <button class="filter-chip chip-science" onclick="quickSearch('science')" style="background: #1E1F23; color: #e6e9ee; border: 1px solid #2A2D35; border-radius: 999px; padding: 0.48rem 0.9rem; font-size: 0.92rem; font-weight: 700; display: inline-flex; align-items: center; gap: 0.45rem; transition: all 0.2s ease;">
                            <i class="bi bi-flask"></i> Science
                        </button>
                        <button class="filter-chip chip-selfhelp" onclick="quickSearch('self help')" style="background: #1E1F23; color: #e6e9ee; border: 1px solid #2A2D35; border-radius: 999px; padding: 0.48rem 0.9rem; font-size: 0.92rem; font-weight: 700; display: inline-flex; align-items: center; gap: 0.45rem; transition: all 0.2s ease;">
                            <i class="bi bi-lightbulb"></i> Self Help
                        </button>
                        
                        <div style="margin-left: auto;">
                            <!-- Search Controls -->
                            <div style="display: flex; align-items: center; gap: 0.5rem;">
                                <input type="text" class="form-control" id="book-explorer-search" 
                                       placeholder="Search books..."
                                       style="background: #1E1F23; border: 1px solid #2A2D35; color: #e6e9ee; padding: 0.48rem 0.75rem; font-size: 0.9rem; border-radius: 999px; width: 250px;">
                                <button class="btn btn-gradient" type="button" onclick="startNewSearch()"
                                        style="padding: 0.48rem 0.9rem; font-weight: 700; font-size: 0.9rem; border-radius: 999px;">
                                    <i class="bi bi-search"></i>
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Loading State -->
                    <div id="search-loading" class="text-center py-4" style="display: none;">
                        <div class="spinner-border" style="color: #3BB7FB; width: 2rem; height: 2rem;" role="status">
                            <span class="sr-only">Searching...</span>
                        </div>
                        <p class="mt-3" style="color: #b0b3b8; font-size: 0.95rem;">Searching for books...</p>
                    </div>

                    <!-- Search Results using history.ejs design -->
                    <div id="search-results">
                        <!-- Default: Show trending books -->
                        <div id="trending-books" class="row">
                            <!-- Will load trending books on modal open -->
                        </div>
                        
                        <!-- Search Results -->
                        <div id="book-search-results" class="row" style="display: none;">
                            <!-- Search results go here -->
                        </div>
                        
                        <!-- Empty State -->
                        <div id="empty-state" class="col-12 text-center py-4" style="display: none;">
                            <i class="bi bi-search" style="font-size: 3rem; color: #3BB7FB; opacity: 0.5;"></i>
                            <h5 class="mt-3" style="color: #fff; font-weight: 600;">No books found</h5>
                            <p style="color: #b0b3b8; font-size: 0.9rem;">Try a different search term</p>
                        </div>
                    </div>

                    <!-- Simplified Pagination -->
                    <div id="pagination" class="d-flex justify-content-center mt-4" style="display: none; gap: 0.75rem;">
                        <button class="btn btn-outline-light btn-sm" id="prev-page" onclick="changePage(-1)"
                                style="border-color: rgba(120,130,150,.3); padding: 0.4rem 0.8rem; border-radius: 6px; font-size: 0.85rem;">
                            <i class="bi bi-chevron-left me-1"></i> Previous
                        </button>
                        <span id="page-info" class="align-self-center" style="color: #b0b3b8; font-size: 0.9rem; padding: 0 0.5rem;"></span>
                        <button class="btn btn-outline-light btn-sm" id="next-page" onclick="changePage(1)"
                                style="border-color: rgba(120,130,150,.3); padding: 0.4rem 0.8rem; border-radius: 6px; font-size: 0.85rem;">
                            Next <i class="bi bi-chevron-right ms-1"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Success Toast -->
    <div class="toast" id="successToast" style="position: fixed; top: 20px; right: 20px; z-index: 9999; background: linear-gradient(135deg, #059669, #047857); border: none; border-radius: 12px;" data-delay="3000">
        <div class="toast-body text-white" style="padding: 1rem 1.25rem; font-weight: 600;">
            <i class="bi bi-check-circle-fill me-2" style="color: #10b981;"></i>
            <span id="toast-message">Book added to wishlist!</span>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/js/navigation.js"></script>
    
    <script>
        let currentPage = 0;
        let currentQuery = '';
        let isSearchMode = false;
        let isFullscreen = false;

        // Filter chip hover effects like history.ejs
        document.addEventListener('DOMContentLoaded', function() {
            // Add CSS for filter chip hover effects
            const style = document.createElement('style');
            style.textContent = `
                .filter-chip:hover {
                    background: linear-gradient(135deg, #3BB7FB, #34a0e0) !important;
                    color: #fff !important;
                    border-color: #3BB7FB !important;
                    transform: translateY(-1px);
                    box-shadow: 0 4px 12px rgba(59, 183, 251, 0.2);
                }
                
                .filter-chip.active {
                    background: linear-gradient(135deg, #3BB7FB, #34a0e0) !important;
                    color: #fff !important;
                    border-color: #3BB7FB !important;
                }
                
                .book-card {
                    background: linear-gradient(135deg, #23242a, #1E1F23);
                    border: 1px solid rgba(120,130,150,.1);
                    border-radius: 18px;
                    padding: 1.3rem;
                    margin-bottom: 1rem;
                    transition: all 0.3s ease;
                    cursor: pointer;
                    display: flex;
                    flex-direction: column;
                    height: 100%;
                    min-height: 400px;
                }
                
                .book-card:hover {
                    background: linear-gradient(135deg, #2A2D35, #23242a);
                    border-color: rgba(59, 183, 251, 0.3);
                    transform: translateY(-2px);
                    box-shadow: 0 8px 25px rgba(0,0,0,0.3);
                }
                
                .book-thumbnail {
                    width: 80px;
                    height: 120px;
                    object-fit: cover;
                    border-radius: 8px;
                    border: 1px solid rgba(120,130,150,.2);
                }
                
                .book-thumbnail-grid {
                    width: 140px;
                    height: 180px;
                    object-fit: cover;
                    border-radius: 12px;
                    border: 1px solid rgba(120,130,150,.2);
                    box-shadow: 0 4px 12px rgba(0,0,0,0.3);
                    margin: 0 auto;
                }
                
                .book-info {
                    flex-grow: 1;
                    display: flex;
                    flex-direction: column;
                    text-align: center;
                }
                
                .add-book-btn {
                    background: linear-gradient(135deg, #059669, #047857);
                    border: none;
                    color: #fff;
                    padding: 0.7rem 1.2rem;
                    border-radius: 999px;
                    font-weight: 600;
                    font-size: 0.85rem;
                    transition: all 0.2s ease;
                }
                
                .add-book-btn:hover {
                    background: linear-gradient(135deg, #047857, #065f46);
                    transform: scale(1.05);
                    box-shadow: 0 4px 12px rgba(5, 150, 105, 0.3);
                    color: #fff;
                }
                
                /* Force grid layout */
                #trending-books, #book-search-results {
                    display: flex !important;
                    flex-wrap: wrap !important;
                }
                
                #trending-books > div, #book-search-results > div {
                    flex: 0 0 auto !important;
                }
                
                @media (min-width: 576px) {
                    .col-sm-6 { flex: 0 0 50% !important; max-width: 50% !important; }
                }
                
                @media (min-width: 768px) {
                    .col-md-4 { flex: 0 0 33.333333% !important; max-width: 33.333333% !important; }
                }
                
                @media (min-width: 992px) {
                    .col-lg-3 { flex: 0 0 25% !important; max-width: 25% !important; }
                }
            `;
            document.head.appendChild(style);

            // Load trending books when modal opens
            $('#bookExplorerModal').on('shown.bs.modal', function() {
                if (!isSearchMode) {
                    loadTrendingBooks();
                }
            });
        });

        // Quick search from filter chips
        function quickSearch(category) {
            // Update active chip
            document.querySelectorAll('.filter-chip').forEach(chip => chip.classList.remove('active'));
            event.target.classList.add('active');
            
            if (category === 'trending') {
                loadTrendingBooks();
                isSearchMode = false;
            } else {
                document.getElementById('book-explorer-search').value = category;
                startNewSearch(); // Use startNewSearch to reset page
                isSearchMode = true;
            }
        }

        // Load trending/popular books
        async function loadTrendingBooks() {
            try {
                showLoading();
                
                // Load popular books from different categories
                const trendingQueries = [
                    'bestseller fiction',
                    'popular science',
                    'business success',
                    'self improvement',
                    'mystery thriller'
                ];
                
                const randomQuery = trendingQueries[Math.floor(Math.random() * trendingQueries.length)];
                const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${randomQuery}&orderBy=relevance&maxResults=12`);
                const data = await response.json();
                
                hideLoading();
                
                if (data.items && data.items.length > 0) {
                    displayBooks(data.items, 'trending-books');
                    document.getElementById('trending-books').style.display = 'block';
                    document.getElementById('book-search-results').style.display = 'none';
                    document.getElementById('empty-state').style.display = 'none';
                }
                
            } catch (error) {
                console.error('Error loading trending books:', error);
                hideLoading();
            }
        }

        // Search books
        async function searchBooks() {
            const searchInput = document.getElementById('book-explorer-search');
            const query = searchInput.value.trim();
            
            if (!query) {
                // If empty query, show trending books
                loadTrendingBooks();
                isSearchMode = false;
                return;
            }
            
            currentQuery = query;
            // Don't reset currentPage here - let changePage() handle it
            isSearchMode = true;
            
            try {
                showLoading();
                
                const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${encodeURIComponent(query)}&maxResults=12&startIndex=${currentPage * 12}`);
                const data = await response.json();
                
                hideLoading();
                
                if (data.items && data.items.length > 0) {
                    displayBooks(data.items, 'book-search-results');
                    document.getElementById('trending-books').style.display = 'none';
                    document.getElementById('book-search-results').style.display = 'block';
                    document.getElementById('empty-state').style.display = 'none';
                    setupPagination(data.totalItems || 0);
                } else {
                    showEmptyState();
                    setupPagination(0);
                }
                
            } catch (error) {
                console.error('Error searching books:', error);
                hideLoading();
                showEmptyState();
                setupPagination(0);
            }
        }

        // Display books with history.ejs card styling
        function displayBooks(books, containerId) {
            const container = document.getElementById(containerId);
            container.innerHTML = '';
            
            books.forEach(book => {
                const volumeInfo = book.volumeInfo;
                const title = volumeInfo.title || 'Unknown Title';
                const authors = volumeInfo.authors ? volumeInfo.authors.join(', ') : 'Unknown Author';
                const thumbnail = volumeInfo.imageLinks?.thumbnail || volumeInfo.imageLinks?.smallThumbnail;
                const description = volumeInfo.description ? 
                    volumeInfo.description.substring(0, 100) + '...' : 
                    'No description available';
                const publishedDate = volumeInfo.publishedDate ? volumeInfo.publishedDate.substring(0, 4) : 'Unknown';
                const rating = volumeInfo.averageRating ? `⭐ ${volumeInfo.averageRating}` : '';
                
                const bookCard = `
                    <div class="col-6 col-sm-6 col-md-4 col-lg-3 mb-4">
                        <div class="book-card h-100">
                            <div class="text-center mb-3">
                                ${thumbnail 
                                    ? `<img src="${thumbnail}" class="book-thumbnail-grid" alt="${title}">`
                                    : `<div class="book-thumbnail-grid bg-secondary d-flex align-items-center justify-content-center mx-auto">
                                         <i class="bi bi-book text-white" style="font-size: 2.5rem;"></i>
                                       </div>`
                                }
                            </div>
                            <div class="book-info">
                                <h6 class="text-white font-weight-bold mb-2" style="font-size: 0.95rem; line-height: 1.3; height: 2.6rem; overflow: hidden; text-align: center;">${title}</h6>
                                <p class="text-muted mb-3" style="font-size: 0.8rem; font-weight: 500; text-align: center;">${authors}</p>
                                <p class="text-secondary mb-3" style="font-size: 0.7rem; line-height: 1.3; height: 2.8rem; overflow: hidden; text-align: center;">${description}</p>
                                <div class="mt-auto">
                                    <div class="text-center mb-3">
                                        <small class="text-muted" style="font-size: 0.7rem;">
                                            ${publishedDate} ${rating}
                                        </small>
                                    </div>
                                    <button class="add-book-btn w-100" onclick="addToWishlistDirect('${title.replace(/'/g, "\\'")}', '${authors.replace(/'/g, "\\'")}', '${thumbnail || ''}')">
                                        <i class="bi bi-heart-fill me-1"></i> Add
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                container.innerHTML += bookCard;
            });
        }

        // Direct add to wishlist (no priority modal)
        async function addToWishlistDirect(title, author, image) {
            try {
                const response = await fetch('/wishlist/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        title: title,
                        author: author,
                        image: image,
                        priority: 'Medium', // Default priority
                        notes: ''
                    })
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    showSuccessToast('Book added to wishlist!');
                    // Refresh wishlist display
                    setTimeout(() => {
                        location.reload();
                    }, 1500);
                } else {
                    showSuccessToast(result.message || 'Failed to add book', 'error');
                }
                
            } catch (error) {
                console.error('Error adding book:', error);
                showSuccessToast('Error adding book to wishlist', 'error');
            }
        }

        // Show success toast
        function showSuccessToast(message, type = 'success') {
            const toast = document.getElementById('successToast');
            const messageSpan = document.getElementById('toast-message');
            
            messageSpan.textContent = message;
            
            if (type === 'error') {
                toast.style.background = 'linear-gradient(135deg, #dc3545, #c82333)';
            } else {
                toast.style.background = 'linear-gradient(135deg, #059669, #047857)';
            }
            
            $(toast).toast('show');
        }

        // Helper functions
        function showLoading() {
            // Show loading in both containers
            document.getElementById('trending-books').innerHTML = `
                <div class="col-12 text-center py-4">
                    <div class="spinner-border" style="color: #3BB7FB; width: 2rem; height: 2rem;" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                    <p class="mt-3" style="color: #b0b3b8; font-size: 0.95rem;">Loading books...</p>
                </div>
            `;
            document.getElementById('book-search-results').innerHTML = `
                <div class="col-12 text-center py-4">
                    <div class="spinner-border" style="color: #3BB7FB; width: 2rem; height: 2rem;" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                    <p class="mt-3" style="color: #b0b3b8; font-size: 0.95rem;">Searching books...</p>
                </div>
            `;
        }

        function hideLoading() {
            // Clear loading states - content will be replaced by actual results
            const trendingContainer = document.getElementById('trending-books');
            const searchContainer = document.getElementById('book-search-results');
            
            // Only clear if they contain loading spinners
            if (trendingContainer.innerHTML.includes('spinner-border')) {
                trendingContainer.innerHTML = '';
            }
            if (searchContainer.innerHTML.includes('spinner-border')) {
                searchContainer.innerHTML = '';
            }
        }

        function showEmptyState() {
            document.getElementById('trending-books').style.display = 'none';
            document.getElementById('book-search-results').style.display = 'none';
            document.getElementById('empty-state').style.display = 'block';
        }

        // Setup pagination (fixed to show reasonable page counts)
        function setupPagination(totalItems) {
            const pagination = document.getElementById('pagination');
            const pageInfo = document.getElementById('page-info');
            const prevBtn = document.getElementById('prev-page');
            const nextBtn = document.getElementById('next-page');
            
            if (!pagination || !pageInfo || !prevBtn || !nextBtn) {
                console.error('Pagination elements not found');
                return;
            }
            
            // Limit total pages to reasonable number (Google Books API limitation)
            const maxPages = Math.min(Math.ceil(totalItems / 12), 50); // Max 50 pages
            const currentPageNum = currentPage + 1;
            
            if (maxPages > 1 && isSearchMode && totalItems > 0) {
                pagination.style.display = 'flex';
                pageInfo.textContent = `Page ${currentPageNum} of ${maxPages}`;
                
                prevBtn.disabled = currentPage === 0;
                nextBtn.disabled = currentPage >= maxPages - 1;
                
                // Add visual feedback for disabled buttons
                if (prevBtn.disabled) {
                    prevBtn.style.opacity = '0.5';
                    prevBtn.style.cursor = 'not-allowed';
                } else {
                    prevBtn.style.opacity = '1';
                    prevBtn.style.cursor = 'pointer';
                }
                
                if (nextBtn.disabled) {
                    nextBtn.style.opacity = '0.5';
                    nextBtn.style.cursor = 'not-allowed';
                } else {
                    nextBtn.style.opacity = '1';
                    nextBtn.style.cursor = 'pointer';
                }
            } else {
                pagination.style.display = 'none';
            }
        }

        // Change page
        function changePage(direction) {
            // Only allow pagination if we're in search mode and have a query
            if (!isSearchMode || !currentQuery) {
                console.log('Cannot paginate: not in search mode or no query');
                return;
            }
            
            const newPage = currentPage + direction;
            if (newPage < 0) {
                console.log('Cannot go to negative page');
                return;
            }
            
            // Update current page
            currentPage = newPage;
            console.log('Changed to page:', currentPage + 1);
            
            // Re-run search with new page
            searchBooks();
        }

        // Start new search (resets page)
        function startNewSearch() {
            currentPage = 0;
            searchBooks();
        }

        // Search on Enter key
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('book-explorer-search').addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    startNewSearch();
                }
            });
        });

        // Toggle fullscreen mode
        function toggleFullscreen() {
            const modal = document.querySelector('#bookExplorerModal .modal-dialog');
            const icon = document.getElementById('fullscreen-icon');
            
            if (!isFullscreen) {
                modal.classList.remove('modal-xl');
                modal.classList.add('modal-fullscreen');
                icon.classList.remove('bi-arrows-fullscreen');
                icon.classList.add('bi-fullscreen-exit');
                isFullscreen = true;
            } else {
                modal.classList.remove('modal-fullscreen');
                modal.classList.add('modal-xl');
                icon.classList.remove('bi-fullscreen-exit');
                icon.classList.add('bi-arrows-fullscreen');
                isFullscreen = false;
            }
        }

        // Open book explorer modal
        function openBookExplorer() {
            $('#bookExplorerModal').modal('show');
        }

        // Search wishlist items
        document.getElementById('wishlist-search').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const wishlistItems = document.querySelectorAll('#wishlist-grid .col-6, #wishlist-grid .col-sm-4, #wishlist-grid .col-md-3');
            
            wishlistItems.forEach(item => {
                const title = item.querySelector('.card-title')?.textContent.toLowerCase() || '';
                const author = item.querySelector('.author-text')?.textContent.toLowerCase() || '';
                
                if (title.includes(searchTerm) || author.includes(searchTerm)) {
                    item.style.display = '';
                } else {
                    item.style.display = 'none';
                }
            });
        });

        // Remove from wishlist
        async function removeFromWishlist(bookId) {
            if (confirm('Are you sure you want to remove this book from your wishlist?')) {
                try {
                    const response = await fetch(`/wishlist/remove/${bookId}`, {
                        method: 'DELETE'
                    });
                    
                    const result = await response.json();
                    
                    if (response.ok) {
                        // Remove the card visually
                        event.target.closest('.col-6, .col-sm-4, .col-md-3').remove();
                        showSuccessToast('Book removed from wishlist');
                    } else {
                        showSuccessToast(result.error || 'Failed to remove book', 'error');
                    }
                } catch (error) {
                    console.error('Error removing from wishlist:', error);
                    showSuccessToast('Failed to remove book from wishlist', 'error');
                }
            }
        }

        // Search on Enter key
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('book-explorer-search').addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    searchBooks();
                }
            });
        });

        // Toggle fullscreen mode
        function toggleFullscreen() {
            const modal = document.querySelector('#bookExplorerModal .modal-dialog');
            const icon = document.getElementById('fullscreen-icon');
            
            if (!isFullscreen) {
                modal.classList.remove('modal-xl');
                modal.classList.add('modal-fullscreen');
                icon.classList.remove('bi-arrows-fullscreen');
                icon.classList.add('bi-fullscreen-exit');
                isFullscreen = true;
            } else {
                modal.classList.remove('modal-fullscreen');
                modal.classList.add('modal-xl');
                icon.classList.remove('bi-fullscreen-exit');
                icon.classList.add('bi-arrows-fullscreen');
                isFullscreen = false;
            }
        }

        // Open book explorer modal
        function openBookExplorer() {
            $('#bookExplorerModal').modal('show');
        }

        // Search wishlist items
        document.getElementById('wishlist-search').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const wishlistItems = document.querySelectorAll('#wishlist-grid .col-6');
            
            wishlistItems.forEach(item => {
                const title = item.querySelector('h6')?.textContent.toLowerCase() || '';
                const author = item.querySelector('p.text-muted')?.textContent.toLowerCase() || '';
                
                if (title.includes(searchTerm) || author.includes(searchTerm)) {
                    item.style.display = '';
                } else {
                    item.style.display = 'none';
                }
            });
        });

        // Add CSS for fullscreen modal
        const modalStyle = document.createElement('style');
        modalStyle.textContent = `
            .modal-fullscreen {
                width: 100vw;
                max-width: none;
                height: 100vh;
                margin: 0;
            }
            .modal-fullscreen .modal-content {
                height: 100vh;
                border: 0;
                border-radius: 0;
            }
            .modal-fullscreen .modal-body {
                overflow-y: auto;
            }
        `;
        document.head.appendChild(modalStyle);
    </script>
</body>
</html>

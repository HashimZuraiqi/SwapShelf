<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Profile | BookSwap</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://fonts.googleapis.com/css?family=Montserrat:700,600,400&display=swap" rel="stylesheet">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <style>
        /* Active navigation styling for profile page */
        .nav-item.active .nav-link {
            color: #3BB7FB !important;
            background: rgba(59, 183, 251, 0.1);
            border-radius: 5px;
            font-weight: 600;
        }
        
        /* Profile specific enhancements */
        .profile-header {
            background: linear-gradient(135deg, #1a1b21 0%, #23242a 50%, #1e1f24 100%);
            border: 1px solid rgba(59, 183, 251, 0.1);
            border-radius: 20px;
            padding: 3rem 2rem 2.5rem;
            position: relative;
            overflow: hidden;
            margin: 1.5rem;
            box-shadow: 0 8px 32px rgba(0,0,0,0.3);
            backdrop-filter: blur(20px);
            transition: all 0.3s ease;
        }
        
        .profile-header:hover {
            transform: translateY(-2px);
            box-shadow: 0 12px 40px rgba(0,0,0,0.4);
            border-color: rgba(59, 183, 251, 0.2);
        }
        
        .profile-avatar-wrapper {
            position: relative;
            display: inline-block;
            margin-bottom: 1.5rem;
        }
        
        .profile-avatar {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid rgba(59, 183, 251, 0.2);
            box-shadow: 0 8px 32px rgba(59, 183, 251, 0.3);
            transition: all 0.3s ease;
        }
        
        .profile-avatar:hover {
            transform: scale(1.05);
            border-color: rgba(59, 183, 251, 0.4);
            box-shadow: 0 12px 40px rgba(59, 183, 251, 0.5);
        }
        
        .default-avatar {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            border: 4px solid rgba(59, 183, 251, 0.2);
            box-shadow: 0 8px 32px rgba(59, 183, 251, 0.3);
            transition: all 0.3s ease;
            overflow: hidden;
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, #6B7280, #9CA3AF);
        }
        
        .default-avatar:hover {
            transform: scale(1.05);
            border-color: rgba(59, 183, 251, 0.4);
            box-shadow: 0 12px 40px rgba(59, 183, 251, 0.5);
        }
        
        .default-avatar svg {
            transition: all 0.3s ease;
        }
        
        .upload-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.7);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s ease;
            cursor: pointer;
        }
        
        .profile-avatar-wrapper:hover .upload-overlay {
            opacity: 1;
        }
        
        /* Username Badge Animations */
        .username-badge {
            display: inline-block;
            background: linear-gradient(135deg, #3BB7FB, #2196F3);
            color: white;
            padding: 8px 20px;
            border-radius: 25px;
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 1.5rem;
            box-shadow: 0 4px 15px rgba(59, 183, 251, 0.3);
            border: 2px solid rgba(255, 255, 255, 0.2);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            animation: fadeInUp 0.8s ease-out 0.3s both;
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }
        
        .username-badge::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.6s ease;
        }
        
        .username-badge:hover {
            transform: translateY(-3px) scale(1.05);
            box-shadow: 0 8px 25px rgba(59, 183, 251, 0.5);
            background: linear-gradient(135deg, #2196F3, #1976D2);
        }
        
        .username-badge:hover::before {
            left: 100%;
        }
        
        .username-badge:active {
            transform: translateY(-1px) scale(1.02);
            transition: all 0.15s ease;
        }
        
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        @keyframes pulse {
            0%, 100% {
                box-shadow: 0 4px 15px rgba(59, 183, 251, 0.3);
            }
            50% {
                box-shadow: 0 4px 25px rgba(59, 183, 251, 0.6);
            }
        }
        
        .username-badge:focus {
            outline: none;
            animation: pulse 1.5s infinite;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
            gap: 2rem;
            margin-top: 2rem;
            margin-bottom: 3rem;
        }
        
        .stat-item {
            background: rgba(35, 36, 42, 0.9);
            border: 1px solid rgba(59, 183, 251, 0.15);
            border-radius: 20px;
            padding: 2rem 1.5rem;
            text-align: center;
            backdrop-filter: blur(20px);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }
        
        .stat-item::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: linear-gradient(135deg, #3BB7FB, #F6B443);
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .stat-item:hover {
            transform: translateY(-8px);
            border-color: rgba(59, 183, 251, 0.4);
            box-shadow: 0 12px 40px rgba(0,0,0,0.4);
        }
        
        .stat-item:hover::before {
            opacity: 1;
        }
        
        .stat-number {
            font-size: 2.5rem;
            font-weight: 700;
            background: linear-gradient(135deg, #3BB7FB, #F6B443);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 0.5rem;
        }
        
        .activity-timeline {
            position: relative;
            padding-left: 2rem;
        }
        
        .activity-timeline::before {
            content: '';
            position: absolute;
            left: 24px;
            top: 1rem;
            bottom: 2rem;
            width: 2px;
            background: linear-gradient(180deg, #3BB7FB 0%, #F6B443 50%, #3BB7FB 100%);
            border-radius: 1px;
            opacity: 0.8;
        }
        
        .activity-item:last-child {
            margin-bottom: 0;
        }
        
        .activity-item:last-child::after {
            content: '';
            position: absolute;
            left: -37px;
            bottom: -24px;
            width: 12px;
            height: 12px;
            background: #1E1F23;
            border-radius: 50%;
            z-index: 3;
        }
        
        /* Section title styling */
        .section-title {
            font-size: 1.8rem;
            font-weight: 700;
            margin-bottom: 2rem;
            position: relative;
            text-align: center;
        }
        
        .section-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 60px;
            height: 3px;
            background: linear-gradient(135deg, #3BB7FB, #F6B443);
            border-radius: 2px;
        }
        
        .activity-timeline::before {
            content: '';
            position: absolute;
            left: 0.75rem;
            top: 0;
            bottom: 0;
            width: 2px;
            background: linear-gradient(135deg, #3BB7FB, #F6B443);
            opacity: 0.3;
        }
        
        .activity-item {
            position: relative;
            margin-bottom: 1.5rem;
            margin-left: 1rem;
            padding: 1.5rem;
            background: rgba(35, 36, 42, 0.9);
            border: 1px solid rgba(120,130,150,.15);
            border-radius: 16px;
            backdrop-filter: blur(15px);
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        
        .activity-item::before {
            content: '';
            position: absolute;
            left: -37px;
            top: 50%;
            transform: translateY(-50%);
            width: 12px;
            height: 12px;
            background: linear-gradient(135deg, #3BB7FB, #F6B443);
            border-radius: 50%;
            border: 3px solid #1E1F23;
            z-index: 2;
            box-shadow: 0 0 0 2px rgba(59, 183, 251, 0.3);
        }
        
        .activity-item:hover {
            transform: translateY(-3px) translateX(5px);
            border-color: rgba(59, 183, 251, 0.3);
            box-shadow: 0 8px 32px rgba(0,0,0,0.3);
        }
        
        .activity-item:hover::before {
            background: linear-gradient(135deg, #F6B443, #3BB7FB);
            transform: translateY(-50%) scale(1.2);
            box-shadow: 0 0 0 4px rgba(246, 180, 67, 0.4);
        }
        
        .activity-icon-wrapper {
            width: 48px;
            height: 48px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            flex-shrink: 0;
            background: rgba(59, 183, 251, 0.1);
            border: 1px solid rgba(59, 183, 251, 0.2);
        }
        
        .activity-icon-wrapper.success {
            background: rgba(40, 167, 69, 0.1);
            border-color: rgba(40, 167, 69, 0.25);
        }
        
        .activity-icon-wrapper.warning {
            background: rgba(246, 180, 67, 0.1);
            border-color: rgba(246, 180, 67, 0.25);
        }
        
        .activity-icon-wrapper.danger {
            background: rgba(220, 53, 69, 0.1);
            border-color: rgba(220, 53, 69, 0.25);
        }
        
        .activity-icon-wrapper.info {
            background: rgba(59, 183, 251, 0.1);
            border-color: rgba(59, 183, 251, 0.2);
        }
        
        .activity-icon-wrapper.purple {
            background: rgba(157, 78, 221, 0.12);
            border-color: rgba(157, 78, 221, 0.28);
        }
        
        .activity-icon-wrapper.info i {
            color: #3BB7FB;
        }
        
        .activity-icon-wrapper.success i {
            color: #28a745;
        }
        
        .activity-icon-wrapper.warning i {
            color: #F6B443;
        }
        
        .activity-icon-wrapper.danger i {
            color: #dc3545;
        }
        
        .activity-icon-wrapper.purple i {
            color: #9d4edd;
        }
        
        .activity-content {
            flex: 1;
        }
        
        .activity-message {
            color: #fff;
            font-weight: 600;
            margin-bottom: 0.3rem;
            font-size: 0.95rem;
        }
        
        .activity-time {
            color: #b0b3b8;
            font-size: 0.85rem;
            font-weight: 500;
        }
    </style>
</head>
<body>
<nav class="navbar navbar-expand-lg navbar-dark custom-navbar">
  <div class="container-fluid">
    <!-- Logo on far left -->
    <a class="navbar-brand d-flex align-items-center" href="/" style="margin-left: 100px; margin-right: 150px; margin-top: 10px;">
      <img src="./images/Untitled design(1).png" alt="BookSwap" class="logo-image" style="
          height: 32px; 
          width: auto; 
          transform: scale(4);
          filter: drop-shadow(0 3px 6px rgba(0,0,0,0.2));
          transition: all 0.3s ease;
          z-index: 10;
          position: relative;
      " onmouseover="this.style.transform='scale(4.3)'" onmouseout="this.style.transform='scale(4)'"/>
    </a>
    
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav"
      aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    
    <div class="collapse navbar-collapse" id="navbarNav">
      <!-- Navigation options in the center -->
      <ul class="navbar-nav mx-auto">
          <li class="nav-item <%= activePage === 'dashboard' ? 'active' : '' %>" data-page="dashboard">
            <a class="nav-link" href="/dashboard"><i class="bi bi-speedometer2"></i> Dashboard</a>
          </li>
          <li class="nav-item <%= activePage === 'library' ? 'active' : '' %>" data-page="library">
            <a class="nav-link" href="/library"><i class="bi bi-book"></i> My Library</a>
          </li>
          <li class="nav-item <%= activePage === 'wishlist' ? 'active' : '' %>" data-page="wishlist">
            <a class="nav-link" href="/wishlist"><i class="bi bi-heart"></i> Wishlist</a>
          </li>
          <li class="nav-item <%= activePage === 'swap-matcher' ? 'active' : '' %>" data-page="swap-matcher">
            <a class="nav-link" href="/swap-matcher"><i class="bi bi-arrow-left-right"></i> Swap Matcher</a>
        </li>
        <li class="nav-item <%= activePage === 'rewards' ? 'active' : '' %>" data-page="rewards">
            <a class="nav-link" href="/rewards"><i class="bi bi-trophy"></i> Rewards</a>
          </li>
        </ul>

        <!-- Profile dropdown on far right -->
        <ul class="navbar-nav ml-auto">
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="profileDropdown" role="button"
               data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              <i class="bi bi-person-circle"></i> Profile
            </a>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="profileDropdown">
              <a class="dropdown-item" href="/me"><i class="bi bi-person"></i> My Profile</a>
              <a class="dropdown-item" href="/logout"><i class="bi bi-box-arrow-right"></i> Logout</a>
            </div>
        </li>
      </ul>
    </div>
  </div>
</nav>

<main class="main-content">
    <!-- Profile Header Section -->
    <div class="profile-header">
        <!-- Subtle Background Pattern -->
        <div style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; background-image: radial-gradient(circle at 25% 25%, rgba(59, 183, 251, 0.05) 0%, transparent 50%), radial-gradient(circle at 75% 75%, rgba(246, 180, 67, 0.05) 0%, transparent 50%); pointer-events: none; border-radius: 20px;"></div>
        
        <div class="container-fluid px-4">
            <div class="row justify-content-center">
                <div class="col-lg-10 col-xl-8">
                    <div class="header-content text-center" style="position: relative; z-index: 2;">
                        <!-- Profile Avatar Section -->
                        <div class="profile-avatar-wrapper">
                            <% if (user && user.profilePhoto && user.profilePhoto !== '/images/default-avatar.png') { %>
                                <img src="<%= user.profilePhoto %>" alt="Profile" class="profile-avatar">
                            <% } else { %>
                                <div class="default-avatar">
                                    <svg width="120" height="120" viewBox="0 0 120 120" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <circle cx="60" cy="60" r="60" fill="#6B7280"/>
                                        <circle cx="60" cy="45" r="20" fill="#9CA3AF"/>
                                        <path d="M30 100 C30 85, 42 75, 60 75 C78 75, 90 85, 90 100" fill="#9CA3AF"/>
                                    </svg>
                                </div>
                            <% } %>
                            <div class="upload-overlay" onclick="document.getElementById('photo-upload').click();">
                                <i class="bi bi-camera" style="color: #fff; font-size: 1.5rem;"></i>
                            </div>
                            <input type="file" id="photo-upload" name="profilePhoto" accept="image/*" style="display: none;">
                        </div>
                        
                        <!-- User Info -->
                        <h1 class="page-title" style="font-size: 3rem; font-weight: 900; color: #fff; margin: 0 0 0.5rem; letter-spacing: -1px; background: linear-gradient(135deg, #fff, #e6e9ee); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text;">
                            <%= user ? (user.fullname || user.name) : 'Your Profile' %>
                        </h1>
                        
                        <div class="username-badge" tabindex="0">
                            <i class="bi bi-person-circle mr-2"></i>
                            @<%= user ? user.username : 'username' %>
                        </div>
                        
                        <p style="color: #b0b3b8; font-size: 1.1rem; margin-bottom: 2rem; max-width: 600px; margin-left: auto; margin-right: auto;">
                            <i class="bi bi-envelope mr-2" style="color: #3BB7FB;"></i>
                            <%= user ? user.email : 'user@example.com' %>
                        </p>
                        
                        <!-- Quick Actions -->
                        <div class="d-flex flex-wrap justify-content-center mb-4" style="gap: 15px;">
                            <button class="btn btn-gradient px-4 py-2" onclick="editProfile()">
                                <i class="bi bi-pencil mr-2"></i>Edit Profile
                            </button>
                            <a href="/history" class="btn btn-outline-light px-4 py-2">
                                <i class="bi bi-clock-history mr-2"></i>Activity History
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Profile Content -->
    <div class="container-fluid px-4 py-5">
        <!-- Profile Statistics Section -->
        <div class="row mb-5">
            <div class="col-12">
                <h3 class="section-title text-center mb-4" style="color: #fff; font-weight: 700;">
                    <i class="bi bi-graph-up mr-2" style="color: #3BB7FB;"></i>Profile Statistics
                </h3>
                <div class="stats-grid">
                    <div class="stat-item">
                        <div class="stat-number"><%= userStats ? userStats.swapRating : '4.8' %></div>
                        <div style="color: #b0b3b8; font-weight: 500;">
                            <i class="bi bi-star-fill mr-2" style="color: #F6B443;"></i>Swap Rating
                        </div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-number"><%= userStats ? userStats.connections : 0 %></div>
                        <div style="color: #b0b3b8; font-weight: 500;">
                            <i class="bi bi-people mr-2" style="color: #3BB7FB;"></i>Connections
                        </div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-number"><%= userStats ? userStats.booksRead : 0 %></div>
                        <div style="color: #b0b3b8; font-weight: 500;">
                            <i class="bi bi-bookmark-check mr-2" style="color: #4ECDC4;"></i>Books Read
                        </div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-number"><%= userStats ? userStats.joinedDays : 0 %></div>
                        <div style="color: #b0b3b8; font-weight: 500;">
                            <i class="bi bi-calendar-heart mr-2" style="color: #FF6B6B;"></i>Days Member
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Profile Management Section -->
        <div class="row">
            <div class="col-12">
                <h3 class="section-title text-center mb-5" style="color: #fff; font-weight: 700;">
                    <i class="bi bi-person-gear mr-2" style="color: #3BB7FB;"></i>Profile Management
                </h3>
            </div>
        </div>
        
        <div class="row">
            <!-- Profile Settings -->
            <div class="col-lg-6">
                <div class="card-dark">
                    <div class="card-header">
                        <h4 class="card-title">
                            <i class="bi bi-gear"></i>Profile Settings
                        </h4>
                    </div>
                    <div class="card-body">
                        <form id="profile-form" enctype="multipart/form-data">
                            <div class="form-group">
                                <label for="fullname" style="color: #b0b3b8; margin-bottom: 0.5rem;">Full Name</label>
                                <input type="text" class="form-control" id="fullname" name="fullname" 
                                       value="<%= user ? (user.fullname || user.name) : '' %>"
                                       style="background: rgba(35, 36, 42, 0.8); border: 1px solid rgba(120,130,150,.15); color: #fff; border-radius: 8px;">
                            </div>
                            <div class="form-group">
                                <label for="email" style="color: #b0b3b8; margin-bottom: 0.5rem;">Email Address</label>
                                <input type="email" class="form-control" id="email" name="email" 
                                       value="<%= user ? user.email : '' %>" readonly
                                       style="background: rgba(35, 36, 42, 0.5); border: 1px solid rgba(120,130,150,.1); color: #888; border-radius: 8px;">
                            </div>
                            <div class="form-group">
                                <label for="bio" style="color: #b0b3b8; margin-bottom: 0.5rem;">Bio</label>
                                <textarea class="form-control" id="bio" name="bio" rows="4" placeholder="Tell us about yourself..."
                                         style="background: rgba(35, 36, 42, 0.8); border: 1px solid rgba(120,130,150,.15); color: #fff; border-radius: 8px;"><%= user ? (user.bio || '') : '' %></textarea>
                            </div>
                            <div class="mt-4">
                                <button type="submit" class="btn btn-gradient px-4 py-2">
                                    <i class="bi bi-check-circle mr-2"></i>Update Profile
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Recent Activity -->
            <div class="col-lg-6">
                <div class="card-dark">
                    <div class="card-header">
                        <h4 class="card-title">
                            <i class="bi bi-activity"></i>Recent Activity
                        </h4>
                    </div>
                    <div class="card-body">
                        <div class="activity-timeline">
                            <% if (recentActivity && recentActivity.length > 0) { %>
                                <% recentActivity.slice(0, 5).forEach(function(activity, index) { 
                                    let iconClass = 'info'; // default
                                    let iconName = 'bi-circle'; // default
                                    
                                    // First check if we have an actual action property
                                    if (activity.action) {
                                        switch(activity.action) {
                                            case 'ADD_BOOK':
                                                iconClass = 'success';
                                                iconName = 'bi-plus-lg';
                                                break;
                                            case 'UPDATE_BOOK':
                                                iconClass = 'info';
                                                iconName = 'bi-pencil-square';
                                                break;
                                            case 'DELETE_BOOK':
                                                iconClass = 'danger';
                                                iconName = 'bi-trash';
                                                break;
                                            case 'ADD_WISHLIST':
                                                iconClass = 'purple';
                                                iconName = 'bi-heart-fill';
                                                break;
                                            case 'REMOVE_WISHLIST':
                                                iconClass = 'info';
                                                iconName = 'bi-heart';
                                                break;
                                            case 'MATCH_SWAP':
                                            case 'COMPLETE_SWAP':
                                                iconClass = 'success';
                                                iconName = 'bi-arrow-left-right';
                                                break;
                                            case 'EARN_POINTS':
                                                iconClass = 'warning';
                                                iconName = 'bi-coin';
                                                break;
                                            case 'UPDATE_PROFILE':
                                                iconClass = 'info';
                                                iconName = 'bi-person-check';
                                                break;
                                            default:
                                                iconClass = 'info';
                                                iconName = 'bi-info-circle';
                                        }
                                    } 
                                    // If no action, analyze the message content to determine the correct icon
                                    else if (activity.message) {
                                        const msg = activity.message.toLowerCase();
                                        
                                        // Check for book-related activities
                                        if (msg.includes('added a new book') || msg.includes('added book') || msg.includes('new book added')) {
                                            iconClass = 'success';
                                            iconName = 'bi-plus-lg';
                                        }
                                        else if (msg.includes('updated book') || msg.includes('modified book') || msg.includes('edited book')) {
                                            iconClass = 'info';
                                            iconName = 'bi-pencil-square';
                                        }
                                        else if (msg.includes('deleted book') || msg.includes('removed book') || msg.includes('book deleted')) {
                                            iconClass = 'danger';
                                            iconName = 'bi-trash';
                                        }
                                        // Check for wishlist activities
                                        else if (msg.includes('added to wishlist') || msg.includes('wishlist added') || msg.includes('added.*wishlist')) {
                                            iconClass = 'purple';
                                            iconName = 'bi-heart-fill';
                                        }
                                        else if (msg.includes('removed from wishlist') || msg.includes('wishlist removed')) {
                                            iconClass = 'info';
                                            iconName = 'bi-heart';
                                        }
                                        // Check for swap activities
                                        else if (msg.includes('completed swap') || msg.includes('swap completed') || msg.includes('successful swap')) {
                                            iconClass = 'success';
                                            iconName = 'bi-arrow-left-right';
                                        }
                                        else if (msg.includes('swap match') || msg.includes('matched swap') || msg.includes('swap request')) {
                                            iconClass = 'success';
                                            iconName = 'bi-handshake';
                                        }
                                        // Check for profile activities
                                        else if (msg.includes('updated profile') || msg.includes('profile updated') || msg.includes('profile picture')) {
                                            iconClass = 'info';
                                            iconName = 'bi-person-check';
                                        }
                                        // Check for points/rewards
                                        else if (msg.includes('earned points') || msg.includes('points earned') || msg.includes('reward')) {
                                            iconClass = 'warning';
                                            iconName = 'bi-coin';
                                        }
                                        // Default fallback - try to use the existing icon if available
                                        else if (activity.icon) {
                                            iconName = activity.icon;
                                            // Try to guess color from icon type
                                            if (iconName.includes('heart')) {
                                                iconClass = 'purple';
                                            } else if (iconName.includes('plus') || iconName.includes('check')) {
                                                iconClass = 'success';
                                            } else if (iconName.includes('trash') || iconName.includes('delete')) {
                                                iconClass = 'danger';
                                            } else if (iconName.includes('coin') || iconName.includes('star')) {
                                                iconClass = 'warning';
                                            }
                                        }
                                    }
                                %>
                                    <div class="activity-item">
                                        <div class="activity-icon-wrapper <%= iconClass %>">
                                            <i class="bi <%= iconName %>"></i>
                                        </div>
                                        <div class="activity-content">
                                            <div class="activity-message">
                                                <%= activity.message %>
                                            </div>
                                            <div class="activity-time">
                                                <%= activity.time || 'Recently' %>
                                            </div>
                                        </div>
                                    </div>
                                <% }); %>
                            <% } else { %>
                                <div class="text-center" style="padding: 3rem 2rem; color: #666;">
                                    <div class="activity-icon-wrapper mx-auto mb-3" style="width: 60px; height: 60px; font-size: 1.5rem;">
                                        <i class="bi bi-activity" style="color: #3BB7FB; opacity: 0.7;"></i>
                                    </div>
                                    <h5 style="color: #fff; margin-bottom: 1rem;">No Recent Activity</h5>
                                    <p style="margin-bottom: 1.5rem;">Start by adding books to your library!</p>
                                    <a href="/library" class="btn btn-gradient px-4 py-2">
                                        <i class="bi bi-plus-circle mr-2"></i>Add Your First Book
                                    </a>
                                </div>
                            <% } %>
                        </div>
                        
                        <% if (recentActivity && recentActivity.length > 5) { %>
                            <div class="text-center mt-4">
                                <a href="/history" class="btn btn-outline-light px-4 py-2">
                                    <i class="bi bi-clock-history mr-2"></i>View All Activity
                                </a>
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

<!-- Scripts -->
<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.min.js"></script>
<script src="/js/navigation.js"></script>

<script>
    // Active page highlighting
    document.addEventListener('DOMContentLoaded', function() {
        // Highlight current page in navigation
        const currentPath = window.location.pathname;
        if (currentPath === '/me' || currentPath === '/profile') {
            // No specific nav item for profile page, but highlight profile dropdown
            const profileDropdown = document.getElementById('profileDropdown');
            if (profileDropdown) {
                profileDropdown.style.color = '#3BB7FB';
            }
        }
        
        // Add hover effects to cards
        $('.card-dark, .stat-item, .activity-item').hover(
            function() {
                $(this).css('transform', 'translateY(-5px)');
            },
            function() {
                $(this).css('transform', 'translateY(0)');
            }
        );
    });

    // Profile photo upload functionality
    document.getElementById('photo-upload').addEventListener('change', function(e) {
        const file = e.target.files[0];
        if (file) {
            const formData = new FormData();
            formData.append('profilePhoto', file);
            
            // Show loading state
            const overlay = document.querySelector('.upload-overlay');
            overlay.innerHTML = '<i class="bi bi-arrow-clockwise" style="animation: spin 1s linear infinite; color: #fff; font-size: 1.5rem;"></i>';
            
            fetch('/users/upload-photo', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Update the profile image
                    document.querySelector('.profile-avatar').src = data.photoUrl;
                    
                    // Show success message
                    showNotification('Profile photo updated successfully!', 'success');
                } else {
                    showNotification('Failed to update profile photo. Please try again.', 'error');
                }
                
                // Reset overlay
                overlay.innerHTML = '<i class="bi bi-camera" style="color: #fff; font-size: 1.5rem;"></i>';
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification('An error occurred. Please try again.', 'error');
                overlay.innerHTML = '<i class="bi bi-camera" style="color: #fff; font-size: 1.5rem;"></i>';
            });
        }
    });

    // Profile form submission
    document.getElementById('profile-form').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = new FormData(this);
        const submitBtn = this.querySelector('button[type="submit"]');
        const originalText = submitBtn.innerHTML;
        
        // Show loading state
        submitBtn.innerHTML = '<i class="bi bi-arrow-clockwise mr-2" style="animation: spin 1s linear infinite;"></i>Updating...';
        submitBtn.disabled = true;
        
        fetch('/users/update-profile', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showNotification('Profile updated successfully!', 'success');
                
                // Update the page title if name changed
                const newName = formData.get('fullname');
                if (newName) {
                    document.querySelector('.page-title').textContent = newName;
                }
            } else {
                showNotification(data.message || 'Failed to update profile. Please try again.', 'error');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showNotification('An error occurred. Please try again.', 'error');
        })
        .finally(() => {
            // Reset button
            submitBtn.innerHTML = originalText;
            submitBtn.disabled = false;
        });
    });

    // Edit profile modal
    function editProfile() {
        // Focus on the first input field
        document.getElementById('fullname').focus();
    }

    // Change password modal
    function changePassword() {
        // Create and show password change modal
        const modal = `
            <div class="modal fade" id="passwordModal" tabindex="-1" role="dialog">
                <div class="modal-dialog" role="document">
                    <div class="modal-content" style="background: #1E1F23; border: 1px solid #2A2D35;">
                        <div class="modal-header" style="border-bottom: 1px solid #2A2D35;">
                            <h5 class="modal-title" style="color: #fff;">Change Password</h5>
                            <button type="button" class="close" data-dismiss="modal" style="color: #fff;">
                                <span>&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <form id="password-form">
                                <div class="form-group">
                                    <label style="color: #b0b3b8;">Current Password</label>
                                    <input type="password" class="form-control" id="currentPassword" required
                                           style="background: rgba(35, 36, 42, 0.8); border: 1px solid rgba(120,130,150,.15); color: #fff;">
                                </div>
                                <div class="form-group">
                                    <label style="color: #b0b3b8;">New Password</label>
                                    <input type="password" class="form-control" id="newPassword" required
                                           style="background: rgba(35, 36, 42, 0.8); border: 1px solid rgba(120,130,150,.15); color: #fff;">
                                </div>
                                <div class="form-group">
                                    <label style="color: #b0b3b8;">Confirm New Password</label>
                                    <input type="password" class="form-control" id="confirmPassword" required
                                           style="background: rgba(35, 36, 42, 0.8); border: 1px solid rgba(120,130,150,.15); color: #fff;">
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer" style="border-top: 1px solid #2A2D35; padding: 20px;">
                            <button type="button" class="btn btn-secondary px-4 py-2 mr-3" data-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-gradient px-4 py-2" onclick="submitPasswordChange()">Change Password</button>
                        </div>
                    </div>
                </div>
            </div>
        `;
        
        // Remove existing modal if any
        $('#passwordModal').remove();
        
        // Add modal to body and show
        $('body').append(modal);
        $('#passwordModal').modal('show');
    }

    // Submit password change
    function submitPasswordChange() {
        const currentPassword = document.getElementById('currentPassword').value;
        const newPassword = document.getElementById('newPassword').value;
        const confirmPassword = document.getElementById('confirmPassword').value;
        
        if (newPassword !== confirmPassword) {
            showNotification('New passwords do not match!', 'error');
            return;
        }
        
        if (newPassword.length < 6) {
            showNotification('New password must be at least 6 characters long!', 'error');
            return;
        }
        
        fetch('/users/change-password', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                currentPassword: currentPassword,
                newPassword: newPassword
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showNotification('Password changed successfully!', 'success');
                $('#passwordModal').modal('hide');
            } else {
                showNotification(data.message || 'Failed to change password. Please try again.', 'error');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showNotification('An error occurred. Please try again.', 'error');
        });
    }

    // Notification function
    function showNotification(message, type) {
        const notification = `
            <div class="alert alert-${type === 'success' ? 'success' : 'danger'} alert-dismissible fade show" 
                 style="position: fixed; top: 20px; right: 20px; z-index: 9999; min-width: 300px;
                        background: ${type === 'success' ? 'rgba(40, 167, 69, 0.9)' : 'rgba(220, 53, 69, 0.9)'};
                        border: none; color: #fff; backdrop-filter: blur(10px);">
                ${message}
                <button type="button" class="close" data-dismiss="alert" style="color: #fff;">
                    <span>&times;</span>
                </button>
            </div>
        `;
        
        $('body').append(notification);
        
        // Auto remove after 5 seconds
        setTimeout(() => {
            $('.alert').fadeOut();
        }, 5000);
    }

    // Spin animation for loading icons
    const style = document.createElement('style');
    style.textContent = `
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    `;
    document.head.appendChild(style);
</script>

</body>
</html>
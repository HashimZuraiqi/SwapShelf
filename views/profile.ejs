<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Profile | BookSwap</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <style>
        body { 
            background: linear-gradient(135deg, #18191E, #15181D, #0D0E10); 
            color: #fff; 
        }
        .profile-page {
            min-height: 100vh;
            background: linear-gradient(135deg, #18191E, #15181D, #0D0E10);
            color: #fff;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 100px 20px 20px 20px;
        }
        .profile-header {
            text-align: center;
            margin-bottom: 40px;
        }
        .profile-photo-wrapper {
            margin-bottom: 20px;
            position: relative;
            display: inline-block;
        }
        .profile-photo {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            object-fit: cover;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
            transition: filter 0.3s ease;
        }
        .profile-photo-wrapper:hover .profile-photo {
            filter: brightness(0.7);
        }
        .photo-upload-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.7);
            border-radius: 50%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s ease;
            cursor: pointer;
            color: white;
        }
        .profile-photo-wrapper:hover .photo-upload-overlay {
            opacity: 1;
        }
        .photo-upload-overlay i {
            font-size: 24px;
            margin-bottom: 5px;
        }
        .photo-upload-overlay span {
            font-size: 12px;
            font-weight: 500;
        }
        .profile-title {
            font-size: 2.5rem;
            font-weight: bold;
            color: #fff;
            margin-bottom: 10px;
        }
        .profile-email {
            font-size: 1.2rem;
            color: #b0b3b8;
            margin-bottom: 0;
        }
        .profile-content {
            width: 100%;
            max-width: 1200px;
        }
        .profile-section {
            margin-top: 40px;
        }
        .profile-section-title {
            font-size: 1.8rem;
            margin-bottom: 20px;
            color: #F6B443;
        }
        .book-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
        }
        .book-card {
            text-decoration: none;
            color: #fff;
            background: #23242a;
            padding: 15px;
            border-radius: 10px;
            text-align: center;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            transition: transform 0.3s, box-shadow 0.3s;
        }
        .book-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);
        }
        .book-cover {
            width: 100%;
            height: auto;
            border-radius: 5px;
            margin-bottom: 10px;
        }
        .book-title {
            font-size: 1rem;
            font-weight: bold;
        }

        /* New Styles for Enhanced Profile */
        .settings-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        .setting-item {
            background: linear-gradient(135deg, #23242a 0%, #2c2d34 100%);
            padding: 25px;
            border-radius: 15px;
            display: flex;
            align-items: center;
            gap: 20px;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .setting-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 30px rgba(0, 0, 0, 0.4);
        }
        .setting-icon {
            font-size: 2.5rem;
            color: #3BB7FB;
            min-width: 60px;
            text-align: center;
        }
        .setting-content h5 {
            color: #fff;
            margin-bottom: 5px;
        }
        .setting-content p {
            color: #b0b0b0;
            margin-bottom: 15px;
            font-size: 0.9rem;
        }

        .stats-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        .stat-card {
            background: linear-gradient(135deg, #FF6B6B 0%, #FF8E8E 100%);
            padding: 25px;
            border-radius: 15px;
            text-align: center;
            box-shadow: 0 8px 20px rgba(255, 107, 107, 0.3);
            transition: transform 0.3s ease;
            position: relative;
            overflow: hidden;
        }
        .stat-card:nth-child(2) {
            background: linear-gradient(135deg, #4ECDC4 0%, #6ED5CD 100%);
            box-shadow: 0 8px 20px rgba(78, 205, 196, 0.3);
        }
        .stat-card:nth-child(3) {
            background: linear-gradient(135deg, #FFD93D 0%, #FFE066 100%);
            box-shadow: 0 8px 20px rgba(255, 217, 61, 0.3);
        }
        .stat-card:nth-child(4) {
            background: linear-gradient(135deg, #A8E6CF 0%, #B8EDD5 100%);
            box-shadow: 0 8px 20px rgba(168, 230, 207, 0.3);
        }
        .stat-card:hover {
            transform: translateY(-5px) scale(1.03);
        }
        .stat-icon {
            font-size: 2rem;
            margin-bottom: 10px;
            opacity: 0.9;
        }
        .stat-info h3 {
            font-size: 2.5rem;
            font-weight: bold;
            margin: 0;
            color: #fff;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        }
        .stat-info p {
            margin: 0;
            font-size: 1rem;
            color: rgba(255, 255, 255, 0.9);
        }

        .preferences-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 25px;
            margin-top: 20px;
        }
        .preference-category {
            background: linear-gradient(135deg, #23242a 0%, #2c2d34 100%);
            padding: 25px;
            border-radius: 15px;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
        }
        .preference-category h5 {
            color: #3BB7FB;
            margin-bottom: 15px;
            font-weight: 600;
        }
        .genre-tags {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }
        .genre-tag {
            background: #404040;
            color: #ccc;
            padding: 8px 15px;
            border-radius: 20px;
            font-size: 0.85rem;
            cursor: pointer;
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }
        .genre-tag.active {
            background: linear-gradient(135deg, #3BB7FB, #F6B443);
            color: #fff;
            font-weight: 500;
        }
        .genre-tag:hover {
            background: #555;
            transform: translateY(-2px);
        }
        .language-selection {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }
        .form-check-label {
            color: #ccc;
            margin-left: 10px;
        }

        .activity-feed {
            margin-top: 20px;
        }
        .activity-item {
            display: flex;
            align-items: center;
            gap: 20px;
            background: linear-gradient(135deg, #23242a 0%, #2c2d34 100%);
            padding: 20px;
            border-radius: 12px;
            margin-bottom: 15px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            transition: transform 0.2s ease;
        }
        .activity-item:hover {
            transform: translateX(5px);
        }
        .activity-icon {
            font-size: 1.5rem;
            min-width: 40px;
            text-align: center;
        }
        .activity-content p {
            margin: 0 0 5px 0;
            color: #fff;
        }
        .activity-content small {
            color: #888;
        }

        .form-select {
            background-color: #404040;
            border: 1px solid #555;
            color: #fff;
        }
        .form-select:focus {
            background-color: #404040;
            border-color: #3BB7FB;
            box-shadow: 0 0 0 0.2rem rgba(59, 183, 251, 0.25);
            color: #fff;
        }
        .form-check-input:checked {
            background-color: #3BB7FB;
            border-color: #3BB7FB;
        }
        .form-switch .form-check-input:focus {
            box-shadow: 0 0 0 0.2rem rgba(59, 183, 251, 0.25);
        }
        .reward-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
            gap: 25px;
            margin-top: 20px;
        }
        .reward-card {
            background: linear-gradient(135deg, #23242a 0%, #2c2d34 100%);
            padding: 25px;
            border-radius: 15px;
            text-align: center;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
            transition: all 0.4s ease;
            position: relative;
            overflow: hidden;
            border: 2px solid transparent;
        }
        .reward-card:hover {
            transform: translateY(-8px) scale(1.02);
            box-shadow: 0 12px 30px rgba(0, 0, 0, 0.4);
        }
        .reward-badge {
            position: relative;
            width: 80px;
            height: 80px;
            margin: 0 auto 15px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }
        .reward-gold {
            border-image: linear-gradient(45deg, #FFD700, #FFA500) 1;
        }
        .reward-gold .reward-badge {
            background: linear-gradient(135deg, #FFD700 0%, #FFA500 50%, #FF8C00 100%);
            box-shadow: 0 0 20px rgba(255, 215, 0, 0.5);
        }
        .reward-silver {
            border-image: linear-gradient(45deg, #C0C0C0, #A8A8A8) 1;
        }
        .reward-silver .reward-badge {
            background: linear-gradient(135deg, #E5E5E5 0%, #C0C0C0 50%, #A8A8A8 100%);
            box-shadow: 0 0 20px rgba(192, 192, 192, 0.5);
        }
        .reward-bronze {
            border-image: linear-gradient(45deg, #CD7F32, #B8860B) 1;
        }
        .reward-bronze .reward-badge {
            background: linear-gradient(135deg, #CD7F32 0%, #B8860B 50%, #8B6914 100%);
            box-shadow: 0 0 20px rgba(205, 127, 50, 0.5);
        }
        .reward-special {
            border-image: linear-gradient(45deg, #9D4EDD, #7209B7) 1;
        }
        .reward-special .reward-badge {
            background: linear-gradient(135deg, #9D4EDD 0%, #7209B7 50%, #5A189A 100%);
            box-shadow: 0 0 20px rgba(157, 78, 221, 0.5);
        }
        .reward-icon {
            font-size: 2.2rem;
            color: white;
            z-index: 2;
            position: relative;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        }
        .reward-shine {
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, transparent 30%, rgba(255, 255, 255, 0.3) 50%, transparent 70%);
            transform: rotate(45deg);
            animation: shine 3s infinite;
        }
        @keyframes shine {
            0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
            50% { transform: translateX(100%) translateY(100%) rotate(45deg); }
            100% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
        }
        .reward-text {
            font-size: 1.3rem;
            font-weight: bold;
            color: #fff;
            margin-bottom: 8px;
            text-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);
        }
        .reward-desc {
            font-size: 0.9rem;
            color: #b0b3b8;
            margin: 0;
            font-style: italic;
        }
        .crud-buttons {
            margin-top: 10px;
        }
        .crud-buttons .btn {
            margin: 2px;
            font-size: 0.8rem;
        }
        
        /* Mobile navigation - show profile items separately */
        @media (max-width: 991.98px) {
            /* Hide dropdown functionality on mobile */
            .dropdown-menu {
                display: none !important;
            }
            
            /* Show profile items as separate nav items */
            .mobile-profile-items {
                display: block !important;
            }
            
            /* Hide dropdown toggle arrow on mobile */
            .dropdown-toggle::after {
                display: none;
            }
            
            /* Style mobile profile nav items */
            .navbar-nav .nav-item {
                border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            }
            
            .navbar-nav .nav-item:last-child {
                border-bottom: none;
            }
            
            .navbar-nav .nav-link {
                padding: 0.75rem 1rem;
            }
        }
        
        /* Desktop - hide mobile profile items, show dropdown */
        @media (min-width: 992px) {
            .mobile-profile-items {
                display: none !important;
            }

        .btn-ghost { background: transparent; border: 1px solid rgba(255,255,255,0.18); color: #e6e9ee; }
        .btn-ghost:hover { background: rgba(255,255,255,0.06); color: #fff; }
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark custom-navbar">
        <div class="container-fluid">
            <!-- Logo on far left -->
            <a class="navbar-brand d-flex align-items-center" href="/">
                <span class="logo-icon mr-2" style="display:flex;align-items:center;">
                    <!-- Book SVG ICON -->
                    <svg width="32" height="32" viewBox="0 0 56 56" fill="none">
                      <defs>
                        <linearGradient id="navGrad" x1="0" y1="0" x2="56" y2="56" gradientUnits="userSpaceOnUse">
                          <stop stop-color="#3BB7FB"/>
                          <stop offset="1" stop-color="#F6B443"/>
                        </linearGradient>
                      </defs>
                      <circle cx="28" cy="28" r="28" fill="url(#navGrad)"/>
                      <g>
                        <rect x="17" y="20" width="10" height="16" rx="2" fill="#fff"/>
                        <rect x="29" y="20" width="10" height="16" rx="2" fill="#fff"/>
                        <line x1="27.5" y1="20" x2="27.5" y2="36" stroke="#3BB7FB" stroke-width="1.5"/>
                      </g>
                    </svg>
                </span>
                <span class="logo-text ml-2 gradient-text">Book<span class="swap">Swap</span></span>
            </a>
            
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            
            <div class="collapse navbar-collapse" id="navbarNav">
                <!-- Navigation options in the center with correct order -->
                <ul class="navbar-nav mx-auto">
                    <li class="nav-item <%= activePage === 'dashboard' ? 'active' : '' %>" data-page="dashboard">
                        <a class="nav-link" href="/dashboard"><i class="bi bi-speedometer2"></i> Dashboard</a>
                    </li>
                    <li class="nav-item <%= activePage === 'library' ? 'active' : '' %>" data-page="library">
                        <a class="nav-link" href="/library"><i class="bi bi-book"></i> My Library</a>
                    </li>
                    <li class="nav-item <%= activePage === 'wishlist' ? 'active' : '' %>" data-page="wishlist">
                        <a class="nav-link" href="/wishlist"><i class="bi bi-heart"></i> Wishlist</a>
                    </li>
                    <li class="nav-item <%= activePage === 'swap-matcher' ? 'active' : '' %>" data-page="swap-matcher">
                        <a class="nav-link" href="/swap-matcher"><i class="bi bi-arrow-left-right"></i> Swap Matcher</a>
                    </li>
                    <li class="nav-item <%= activePage === 'rewards' ? 'active' : '' %>" data-page="rewards">
                        <a class="nav-link" href="/rewards"><i class="bi bi-trophy"></i> Rewards</a>
                    </li>
                    
                    <!-- Mobile-only profile items (hidden on desktop) -->
                    <li class="nav-item mobile-profile-items <%= activePage === 'profile' ? 'active' : '' %>" style="display: none;">
                        <a class="nav-link" href="/me"><i class="bi bi-person"></i> Profile</a>
                    </li>
                    <li class="nav-item mobile-profile-items" style="display: none;">
                        <a class="nav-link" href="/logout"><i class="bi bi-box-arrow-right"></i> Logout</a>
                    </li>
                </ul>
                
                <!-- Profile dropdown on far right (desktop only) -->
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle <%= activePage === 'profile' ? 'active' : '' %>" href="#" id="profileDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="bi bi-person-circle"></i> Profile
                        </a>
                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="profileDropdown">
                            <a class="dropdown-item <%= activePage === 'profile' ? 'active' : '' %>" href="/me"><i class="bi bi-person"></i> My Profile</a>
                            <a class="dropdown-item" href="/logout"><i class="bi bi-box-arrow-right"></i> Logout</a>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Profile Page Content -->
    <div class="profile-page">
        <div class="profile-header">
            <div class="profile-photo-wrapper">
                <img src="<%= userPhoto %>" alt="Profile Photo" class="profile-photo" id="profilePhotoImg">
                <div class="photo-upload-overlay" onclick="document.getElementById('photoUpload').click()">
                    <i class="bi bi-camera-fill"></i>
                    <span>Change Photo</span>
                </div>
                <input type="file" id="photoUpload" accept="image/*" style="display: none;" onchange="uploadProfilePhoto(this)">
            </div>
            <div class="profile-info">
                <h1 class="profile-title"><%= user %></h1>
                <p class="profile-email"><i class="bi bi-envelope"></i> <%= userEmail %></p>
            </div>
        </div>

        <div class="profile-content">
            <div class="profile-section">
                <h2 class="profile-section-title">Achievement Badges</h2>
                <div class="reward-grid">
                    <div class="reward-card reward-gold">
                        <div class="reward-badge">
                            <i class="bi bi-trophy-fill reward-icon"></i>
                            <div class="reward-shine"></div>
                        </div>
                        <p class="reward-text">Top Reader</p>
                        <p class="reward-desc">Read 50+ books</p>
                    </div>
                    <div class="reward-card reward-silver">
                        <div class="reward-badge">
                            <i class="bi bi-arrow-left-right reward-icon"></i>
                            <div class="reward-shine"></div>
                        </div>
                        <p class="reward-text">Master Swapper</p>
                        <p class="reward-desc">Completed 25+ swaps</p>
                    </div>
                    <div class="reward-card reward-bronze">
                        <div class="reward-badge">
                            <i class="bi bi-people-fill reward-icon"></i>
                            <div class="reward-shine"></div>
                        </div>
                        <p class="reward-text">Community Helper</p>
                        <p class="reward-desc">Helped 10+ members</p>
                    </div>
                    <div class="reward-card reward-special">
                        <div class="reward-badge">
                            <i class="bi bi-star-fill reward-icon"></i>
                            <div class="reward-shine"></div>
                        </div>
                        <p class="reward-text">Early Adopter</p>
                        <p class="reward-desc">Joined in beta</p>
                    </div>
                </div>
            </div>

            <div class="profile-section">
                <h2 class="profile-section-title">
                    <i class="bi bi-gear-fill mr-2"></i>Account Settings
                </h2>
                <div class="settings-grid">
                    <div class="setting-item">
                        <div class="setting-icon">
                            <i class="bi bi-person-circle"></i>
                        </div>
                        <div class="setting-content">
                            <h5>Personal Information</h5>
                            <p>Update your name, email, and location</p>
                            <button class="btn btn-outline-light btn-sm">Edit Profile</button>
                        </div>
                    </div>
                    <div class="setting-item">
                        <div class="setting-icon">
                            <i class="bi bi-bell-fill"></i>
                        </div>
                        <div class="setting-content">
                            <h5>Notifications</h5>
                            <p>Manage email and push notifications</p>
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" id="emailNotifs" checked>
                                <label class="form-check-label" for="emailNotifs">Email alerts</label>
                            </div>
                        </div>
                    </div>
                    <div class="setting-item">
                        <div class="setting-icon">
                            <i class="bi bi-shield-lock-fill"></i>
                        </div>
                        <div class="setting-content">
                            <h5>Privacy & Security</h5>
                            <p>Control who can see your profile</p>
                            <select class="form-select form-select-sm">
                                <option value="public">Public</option>
                                <option value="friends" selected>Friends Only</option>
                                <option value="private">Private</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <div class="profile-section">
                <h2 class="profile-section-title">
                    <i class="bi bi-graph-up mr-2"></i>Reading Stats
                </h2>
                <div class="stats-container">
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="bi bi-book-fill"></i>
                        </div>
                        <div class="stat-info">
                            <h3>24</h3>
                            <p>Books Read</p>
                        </div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="bi bi-arrow-left-right"></i>
                        </div>
                        <div class="stat-info">
                            <h3>12</h3>
                            <p>Books Swapped</p>
                        </div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="bi bi-star-fill"></i>
                        </div>
                        <div class="stat-info">
                            <h3>4.8</h3>
                            <p>Swap Rating</p>
                        </div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="bi bi-people-fill"></i>
                        </div>
                        <div class="stat-info">
                            <h3>156</h3>
                            <p>Connections</p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="profile-section">
                <h2 class="profile-section-title">
                    <i class="bi bi-heart-fill mr-2"></i>Reading Preferences
                </h2>
                <div class="preferences-grid">
                    <div class="preference-category">
                        <h5>Favorite Genres</h5>
                        <div class="genre-tags">
                            <span class="genre-tag active">Fiction</span>
                            <span class="genre-tag active">Mystery</span>
                            <span class="genre-tag">Romance</span>
                            <span class="genre-tag active">Sci-Fi</span>
                            <span class="genre-tag">Biography</span>
                            <span class="genre-tag">History</span>
                        </div>
                    </div>
                    <div class="preference-category">
                        <h5>Languages</h5>
                        <div class="language-selection">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="english" id="lang-english" checked>
                                <label class="form-check-label" for="lang-english">English</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="arabic" id="lang-arabic" checked>
                                <label class="form-check-label" for="lang-arabic">العربية</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="french" id="lang-french">
                                <label class="form-check-label" for="lang-french">Français</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="profile-section">
                <div class="d-flex align-items-center justify-content-between">
                    <h2 class="profile-section-title mb-0">
                    <i class="bi bi-clock-history mr-2"></i>Recent Activity
                    </h2>

                    <!-- History button on the right -->
                    <a href="/history" class="btn btn-outline-light btn-sm" title="View full history">
                    <i class="bi bi-clock-history mr-1"></i> View All
                    </a>
            </div>

            <div class="activity-feed activity-list mt-3">
                    <% if (recentActivity && recentActivity.length > 0) { %>
                        <% recentActivity.forEach(activity => { %>
                            <div class="activity-item">
                                <div class="activity-icon <%= activity.iconClass %>">
                                    <i class="bi <%= activity.icon %>"></i>
                                </div>
                                <div class="activity-content">
                                    <p class="activity-text"><%= activity.message %></p>
                                    <small class="activity-time text-muted"><%= activity.time %></small>
                                </div>
                            </div>
                        <% }) %>
                    <% } else { %>
                        <div class="activity-item">
                            <div class="activity-icon text-info">
                                <i class="bi bi-info-circle"></i>
                            </div>
                            <div class="activity-content">
                                <p class="activity-text">No recent activity yet. Start by adding books to your library!</p>
                                <small class="activity-time text-muted">Get started</small>
                            </div>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.min.js"></script>
    <script src="/js/navigation.js"></script>
    
    <script>
        async function uploadProfilePhoto(input) {
            if (!input.files || !input.files[0]) {
                return;
            }

            const file = input.files[0];
            
            // Validate file type
            if (!file.type.startsWith('image/')) {
                alert('Please select an image file.');
                return;
            }

            // Validate file size (5MB max)
            if (file.size > 5 * 1024 * 1024) {
                alert('File size must be less than 5MB.');
                return;
            }

            const formData = new FormData();
            formData.append('profilePhoto', file);

            try {
                // Show loading state
                const profileImg = document.getElementById('profilePhotoImg');
                const overlay = document.querySelector('.photo-upload-overlay');
                overlay.innerHTML = '<i class="bi bi-hourglass-split"></i><span>Uploading...</span>';

                const response = await fetch('/profile/upload-photo', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                if (result.success) {
                    // Update the profile image
                    profileImg.src = result.photoUrl;
                    
                    // Reset overlay
                    overlay.innerHTML = '<i class="bi bi-camera-fill"></i><span>Change Photo</span>';
                    
                    // Show success message
                    alert('Profile photo updated successfully!');
                } else {
                    throw new Error(result.error || 'Upload failed');
                }
            } catch (error) {
                console.error('Upload error:', error);
                alert('Failed to upload photo: ' + error.message);
                
                // Reset overlay
                const overlay = document.querySelector('.photo-upload-overlay');
                overlay.innerHTML = '<i class="bi bi-camera-fill"></i><span>Change Photo</span>';
            }
        }

        // Load recent activity
        async function loadRecentActivity() {
            try {
                console.log('🔄 Loading recent activity...');
                const response = await fetch('/api/users/recent-activity');
                
                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                }
                
                const activities = await response.json();
                console.log(`📊 Received ${activities.length} activities from API`);
                
                if (activities && activities.length >= 0) {
                    updateActivityFeed(activities);
                } else {
                    console.warn('No activities returned from API');
                }
            } catch (error) {
                console.error('Failed to load recent activity:', error);
            }
        }

        function updateActivityFeed(activities) {
            const activityList = document.querySelector('.activity-list');
            if (!activityList) {
                console.error('Activity list container not found');
                return;
            }

            // Clear existing activities
            activityList.innerHTML = '';

            if (activities && activities.length > 0) {
                activities.forEach(activity => {
                    const activityItem = document.createElement('div');
                    activityItem.className = 'activity-item';
                    activityItem.innerHTML = `
                        <div class="activity-icon ${activity.iconClass}">
                            <i class="bi ${activity.icon}"></i>
                        </div>
                        <div class="activity-content">
                            <p class="activity-text">${activity.message}</p>
                            <small class="activity-time text-muted">${activity.time}</small>
                        </div>
                    `;
                    activityList.appendChild(activityItem);
                });
                console.log(`✅ Updated activity feed with ${activities.length} activities`);
            } else {
                // Show empty state
                const emptyItem = document.createElement('div');
                emptyItem.className = 'activity-item';
                emptyItem.innerHTML = `
                    <div class="activity-icon text-info">
                        <i class="bi bi-info-circle"></i>
                    </div>
                    <div class="activity-content">
                        <p class="activity-text">No recent activity yet. Start by adding books to your library!</p>
                        <small class="activity-time text-muted">Get started</small>
                    </div>
                `;
                activityList.appendChild(emptyItem);
                console.log('📝 Showing empty activity state');
            }
        }

        // Load activity when page loads
        document.addEventListener('DOMContentLoaded', function() {
            loadRecentActivity();
            
            // Refresh activity every 30 seconds
            setInterval(loadRecentActivity, 30000);
        });
    </script>
</body>
</html>

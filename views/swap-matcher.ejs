<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Swap Matcher | BookSwap</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/style.css">
    <!-- Navbar Chat System CSS -->
    <link rel="stylesheet" href="/css/navbar-chat.css">
    <link href="https://fonts.googleapis.com/css?family=Montserrat:700,600,400&display=swap" rel="stylesheet">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <style>
        /* Active navigation styling for dynamic page */
        .nav-item.active .nav-link {
            color: #3BB7FB !important;
            background: rgba(59, 183, 251, 0.1);
            border-radius: 5px;
            font-weight: 600;
        }

        /* Professional Swap Matcher Styles */
        .swap-hero {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 20px;
            padding: 40px;
            margin-bottom: 30px;
            color: white;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
        }

        .swap-stats {
            background: rgba(255,255,255,0.15);
            border-radius: 15px;
            padding: 20px;
            backdrop-filter: blur(10px);
        }

        .swap-section-card {
            background: #1E1E1E;
            border-radius: 20px;
            border: 1px solid rgba(59, 183, 251, 0.2);
            transition: all 0.3s ease;
            overflow: hidden;
        }

        .swap-section-card:hover {
            border-color: rgba(59, 183, 251, 0.4);
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0,0,0,0.3);
        }

        .swap-section-header {
            background: linear-gradient(135deg, #2A2D35, #23242a);
            padding: 20px;
            border-bottom: 1px solid rgba(59, 183, 251, 0.2);
        }

        .book-swap-item {
            background: #2A2D35;
            border-radius: 15px;
            padding: 15px;
            margin-bottom: 15px;
            border: 1px solid rgba(59, 183, 251, 0.1);
            transition: all 0.3s ease;
        }

        .book-swap-item:hover {
            border-color: rgba(59, 183, 251, 0.3);
            transform: translateX(5px);
            background: #2E3138;
        }

        .book-cover-small {
            width: 60px;
            height: 80px;
            object-fit: cover;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.3);
        }

        .match-indicator {
            background: linear-gradient(45deg, #FF6B6B, #FFE66D);
            color: white;
            padding: 5px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: bold;
            display: inline-block;
        }

        .swap-status-badge {
            padding: 6px 12px;
            border-radius: 15px;
            font-size: 12px;
            font-weight: 500;
        }

        .status-pending {
            background: rgba(255, 193, 7, 0.2);
            color: #FFC107;
            border: 1px solid rgba(255, 193, 7, 0.3);
        }

        .status-accepted {
            background: rgba(40, 167, 69, 0.2);
            color: #28A745;
            border: 1px solid rgba(40, 167, 69, 0.3);
        }

        .status-rejected {
            background: rgba(220, 53, 69, 0.2);
            color: #DC3545;
            border: 1px solid rgba(220, 53, 69, 0.3);
        }

        .swap-action-btn {
            background: linear-gradient(135deg, #3BB7FB, #667eea);
            border: none;
            border-radius: 10px;
            padding: 8px 16px;
            color: white;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .swap-action-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(59, 183, 251, 0.3);
            color: white;
        }

        .swap-tabs {
            background: #1E1E1E;
            border-radius: 15px;
            padding: 10px;
            margin-bottom: 30px;
        }

        .swap-tabs .nav-link {
            background: transparent;
            border: 1px solid rgba(59, 183, 251, 0.2);
            color: #CCCCCC;
            border-radius: 10px;
            margin: 0 5px;
            padding: 12px 20px;
            transition: all 0.3s ease;
        }

        .swap-tabs .nav-link.active {
            background: linear-gradient(135deg, #3BB7FB, #667eea);
            border-color: transparent;
            color: white;
        }

        .swap-tabs .nav-link:hover:not(.active) {
            background: rgba(59, 183, 251, 0.1);
            border-color: rgba(59, 183, 251, 0.3);
            color: #3BB7FB;
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #888;
        }

        .empty-state i {
            font-size: 4rem;
            margin-bottom: 20px;
            opacity: 0.5;
        }

        .quick-match-btn {
            background: linear-gradient(135deg, #FF6B6B, #FFE66D);
            border: none;
            color: white;
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: bold;
            transition: all 0.3s ease;
        }

        .quick-match-btn:hover {
            transform: scale(1.05);
            box-shadow: 0 5px 15px rgba(255, 107, 107, 0.3);
            color: white;
        }

        .matches-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
            gap: 12px;
            padding: 15px 0;
        }

        .match-card {
            background: linear-gradient(135deg, #23242a, #1E1F23);
            border-radius: 16px;
            overflow: hidden;
            border: 1px solid rgba(120,130,150,0.10);
            transition: all 0.3s ease;
            height: 320px;
            position: relative;
            display: flex;
            flex-direction: column;
        }

        .match-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.3);
            border-color: rgba(59, 183, 251, 0.2);
        }

        .book-cover-container {
            position: relative;
            text-align: center;
            margin-bottom: 0.75rem;
            flex-shrink: 0;
        }

        .book-cover-professional {
            width: 100%;
            max-width: 120px;
            height: 140px;
            object-fit: cover;
            border-radius: 10px;
            box-shadow: 0 6px 20px rgba(0,0,0,0.4);
            transition: transform 0.3s ease;
        }

        .book-cover-placeholder {
            width: 120px;
            height: 140px;
            background: linear-gradient(135deg, #3BB7FB, #34a0e0);
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto;
            box-shadow: 0 6px 20px rgba(0,0,0,0.4);
        }

        .match-card-content {
            padding: 0.75rem;
            display: flex;
            flex-direction: column;
            flex-grow: 1;
            justify-content: space-between;
        }

        .book-owner {
            margin-bottom: 0.25rem;
        }

        .book-owner i {
            margin-right: 3px;
            opacity: 0.7;
        }

        .book-title {
            font-size: 0.9rem;
            line-height: 1.2;
            margin-bottom: 0.25rem;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
            min-height: 2.4rem;
        }

        .book-author {
            font-size: 0.75rem;
            color: #888;
            margin-bottom: 0.5rem;
            display: -webkit-box;
            -webkit-line-clamp: 1;
            line-clamp: 1;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .book-badges {
            margin-bottom: 0.75rem;
        }

        .book-actions {
            margin-top: auto;
        }

        /* Preferences modal & selection clarity */
        .pref-section-title { color: #ffffff; font-weight: 600; margin-bottom: 0.5rem; }
        .pref-hint { color: #b0b3b8; font-size: 0.9rem; margin-bottom: 0.75rem; }
        .pref-chip { display:inline-flex; align-items:center; gap:.35rem; padding:.4rem .75rem; border:1px solid rgba(59,183,251,.25); color:#e4e6ea; border-radius:9999px; margin:.25rem; cursor:pointer; background:#1E1F23; transition:all .2s; font-size:.92rem; }
        .pref-chip:hover { border-color: rgba(59,183,251,.5); }
        .pref-chip.active { background: linear-gradient(135deg,#3BB7FB20,#F6B44320); border-color:#3BB7FB; color:#fff; box-shadow:0 6px 16px rgba(59,183,251,.15); }
        .pref-btn-group .btn { margin-right:.5rem; margin-bottom:.5rem; }
        .pref-range { width:100%; }
        .range-value { color:#E5E7EB; font-weight:600; margin-left:.5rem; }
        .book-swap-item.selected { border-color:#3BB7FB !important; background: rgba(59,183,251,.08); box-shadow:0 8px 24px rgba(59,183,251,.12); }

        /* Custom Pagination Styling */
        .pagination-custom {
            margin: 0;
        }

        .pagination-custom .page-item .page-link {
            background: #23242a;
            border: 1px solid rgba(120,130,150,0.2);
            color: #CCCCCC;
            padding: 0.5rem 0.75rem;
            margin: 0 2px;
            border-radius: 8px;
            transition: all 0.3s ease;
            font-size: 0.9rem;
        }

        .pagination-custom .page-item .page-link:hover {
            background: rgba(59, 183, 251, 0.1);
            border-color: rgba(59, 183, 251, 0.3);
            color: #3BB7FB;
            transform: translateY(-1px);
        }

        .pagination-custom .page-item.active .page-link {
            background: linear-gradient(135deg, #3BB7FB, #667eea);
            border-color: transparent;
            color: white;
            box-shadow: 0 4px 12px rgba(59, 183, 251, 0.3);
        }

        .pagination-custom .page-item.disabled .page-link {
            background: #1E1F23;
            border-color: rgba(120,130,150,0.1);
            color: #666;
            cursor: not-allowed;
        }

        .pagination-custom .page-item.disabled .page-link:hover {
            background: #1E1F23;
            border-color: rgba(120,130,150,0.1);
            color: #666;
            transform: none;
        }

        /* Advanced Filter Bar Styling */
        #matches-filter-bar {
            background: transparent;
            border: none;
            border-radius: 0;
            padding: 0;
            margin-bottom: 20px;
            position: relative;
        }

        /* Remove box animations and effects */

        /* Enhanced Form Controls */
        #matches-filter-bar .form-control {
            background: rgba(30, 30, 30, 0.8);
            border: 1px solid rgba(120, 130, 150, 0.2);
            border-radius: 8px;
            color: #ffffff;
            padding: 8px 12px;
            font-size: 0.875rem;
            height: auto;
            transition: all 0.3s ease;
            box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);
        }

        #matches-filter-bar .form-control:focus {
            background: rgba(30, 30, 30, 0.95) !important;
            border-color: #3BB7FB !important;
            box-shadow: 
                inset 0 1px 4px rgba(0, 0, 0, 0.3),
                0 0 0 2px rgba(59, 183, 251, 0.15),
                0 2px 8px rgba(59, 183, 251, 0.15) !important;
            color: #ffffff !important;
            outline: none;
        }

        #matches-filter-bar .form-control:hover {
            border-color: rgba(59, 183, 251, 0.3);
            background: rgba(30, 30, 30, 0.9);
        }

        /* Filter Labels */
        #matches-filter-bar label {
            color: #B0B3B8;
            font-size: 0.75rem;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.3px;
            margin-bottom: 4px;
            display: block;
        }

        /* Clear Filters Button */
        #clear-filters {
            background: linear-gradient(135deg, rgba(220, 53, 69, 0.15), rgba(220, 53, 69, 0.25));
            border: 1px solid rgba(220, 53, 69, 0.3);
            color: #DC3545;
            border-radius: 8px;
            padding: 8px 12px;
            font-size: 0.875rem;
            font-weight: 500;
            height: auto;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 4px;
        }

        #clear-filters:hover {
            background: linear-gradient(135deg, rgba(220, 53, 69, 0.25), rgba(220, 53, 69, 0.35));
            border-color: rgba(220, 53, 69, 0.5);
            color: #ffffff;
            transform: translateY(-1px);
            box-shadow: 0 3px 12px rgba(220, 53, 69, 0.25);
        }

        #clear-filters:active {
            transform: translateY(0);
            box-shadow: 0 2px 8px rgba(220, 53, 69, 0.2);
        }

        /* Matches Count Styling */
        #matches-count {
            color: #B0B3B8;
            font-size: 0.8rem;
            font-weight: 500;
            padding: 4px 12px;
            background: rgba(59, 183, 251, 0.1);
            border: 1px solid rgba(59, 183, 251, 0.2);
            border-radius: 15px;
            display: inline-flex;
            align-items: center;
            gap: 4px;
        }

        #matches-count::before {
            content: '🔍';
            font-size: 0.75rem;
        }

        /* Filter Row Spacing */
        #matches-filter-bar .row {
            margin-left: -6px;
            margin-right: -6px;
        }

        #matches-filter-bar .row > [class*="col-"] {
            padding-left: 6px;
            padding-right: 6px;
        }

        /* Filter Section Header */
        .filter-section-header {
            color: #ffffff;
            font-size: 0.95rem;
            font-weight: 600;
            margin-bottom: 12px;
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .filter-section-header i {
            color: #3BB7FB;
            font-size: 1rem;
        }

        /* Simplified Select Styling - Use browser default arrow */
        #matches-filter-bar select.form-control {
            background-color: rgba(30, 30, 30, 0.8) !important;
            color: #ffffff !important;
            /* Let browser handle the arrow */
        }

        #matches-filter-bar select.form-control:focus {
            background-color: rgba(30, 30, 30, 0.95) !important;
            color: #ffffff !important;
        }

        #matches-filter-bar select.form-control:hover {
            background-color: rgba(30, 30, 30, 0.9) !important;
            color: #ffffff !important;
        }

        /* Select Options Styling */
        #matches-filter-bar select.form-control option {
            background-color: #1E1E1E !important;
            color: #ffffff !important;
            padding: 8px 12px;
        }

        #matches-filter-bar select.form-control option:hover,
        #matches-filter-bar select.form-control option:checked {
            background-color: #3BB7FB !important;
            color: #ffffff !important;
        }

        /* ========== MODERN REDESIGN STYLES ========== */
        
        /* Discovery Section */
        .discovery-section .card-header {
            background: linear-gradient(135deg, #23242a, #1E1F23);
            border-bottom: 1px solid rgba(59, 183, 251, 0.1);
        }

        .discovery-controls {
            display: flex;
            gap: 8px;
        }

        /* Modern Button Styles */
        .btn-modern {
            background: linear-gradient(135deg, #3BB7FB, #667eea);
            border: none;
            color: white;
            padding: 8px 20px;
            border-radius: 10px;
            font-weight: 600;
            font-size: 0.875rem;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 6px;
        }

        .btn-modern:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(59, 183, 251, 0.3);
            color: white;
        }

        .btn-modern:disabled {
            background: #666;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .btn-modern-outline {
            background: transparent;
            border: 2px solid rgba(59, 183, 251, 0.3);
            color: #3BB7FB;
            padding: 6px 16px;
            border-radius: 10px;
            font-weight: 500;
            font-size: 0.875rem;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 6px;
        }

        .btn-modern-outline:hover {
            border-color: #3BB7FB;
            background: rgba(59, 183, 251, 0.1);
            color: #3BB7FB;
        }

        .btn-danger-outline {
            background: transparent;
            border: 2px solid rgba(220, 53, 69, 0.3);
            color: #DC3545;
            padding: 8px 16px;
            border-radius: 10px;
            font-weight: 500;
            font-size: 0.875rem;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 6px;
        }

        .btn-danger-outline:hover {
            border-color: #DC3545;
            background: rgba(220, 53, 69, 0.1);
            color: #DC3545;
        }

        /* Filter Panel */
        .filter-panel {
            animation: slideDown 0.3s ease;
        }

        @keyframes slideDown {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .filter-label {
            color: #B0B3B8;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 6px;
        }

        .form-control-modern {
            background: rgba(30, 30, 30, 0.8);
            border: 2px solid rgba(120, 130, 150, 0.2);
            border-radius: 10px;
            color: #ffffff;
            padding: 10px 16px;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }

        .form-control-modern:focus {
            background: rgba(30, 30, 30, 0.95);
            border-color: #3BB7FB;
            box-shadow: 0 0 0 3px rgba(59, 183, 251, 0.15);
            color: #ffffff;
            outline: none;
        }

        .results-info {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .matches-counter {
            background: linear-gradient(135deg, rgba(59, 183, 251, 0.15), rgba(102, 126, 234, 0.15));
            border: 1px solid rgba(59, 183, 251, 0.3);
            color: #3BB7FB;
            padding: 6px 16px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
        }

        /* Books Discovery Grid */
        .books-discovery-grid {
            margin-bottom: 30px;
        }

        .discovery-books-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
            padding: 20px 0;
            align-items: stretch;
        }

        .discovery-book-card {
            background: linear-gradient(135deg, #23242a, #1E1F23);
            border-radius: 16px;
            border: 1px solid rgba(120,130,150,0.1);
            transition: all 0.3s ease;
            overflow: hidden;
            cursor: pointer;
            position: relative;
            display: flex;
            flex-direction: column;
            height: 100%;
        }

        .discovery-book-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 15px 40px rgba(0,0,0,0.3);
            border-color: rgba(59, 183, 251, 0.3);
        }

        .discovery-book-cover {
            width: 100%;
            height: 160px;
            object-fit: cover;
            background: linear-gradient(135deg, #3BB7FB, #667eea);
            border-radius: 10px;
            box-shadow: 0 6px 20px rgba(0,0,0,0.4);
            transition: transform 0.3s ease;
        }

        .discovery-book-card:hover .discovery-book-cover {
            transform: scale(1.05);
        }

        .discovery-book-info {
            padding: 16px;
            display: flex;
            flex-direction: column;
            flex-grow: 1;
        }

        .discovery-book-title {
            font-size: 0.95rem;
            font-weight: 600;
            color: #ffffff;
            margin-bottom: 4px;
            line-height: 1.3;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .discovery-book-author {
            color: #B0B3B8;
            font-size: 0.8rem;
            margin-bottom: 8px;
        }

        .discovery-book-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 12px;
        }

        .discovery-genre-badge {
            background: rgba(59, 183, 251, 0.15);
            color: #3BB7FB;
            padding: 3px 8px;
            border-radius: 12px;
            font-size: 0.7rem;
            font-weight: 500;
        }

        .discovery-condition {
            color: #28A745;
            font-size: 0.75rem;
            font-weight: 500;
        }

        .discovery-owner {
            color: #B0B3B8;
            font-size: 0.75rem;
            margin-bottom: 8px;
        }

        .discovery-swap-btn {
            width: 100%;
            background: linear-gradient(135deg, #3BB7FB, #667eea);
            border: none;
            color: white;
            padding: 8px 16px;
            border-radius: 8px;
            font-weight: 600;
            font-size: 0.8rem;
            transition: all 0.3s ease;
            margin-top: auto;
        }

        .discovery-swap-btn:hover {
            background: linear-gradient(135deg, #2A9FE8, #5A6DD8);
            transform: translateY(-1px);
            color: white;
        }

        /* Loading State */
        .loading-state {
            text-align: center;
            padding: 80px 20px;
            color: #B0B3B8;
        }

        .loading-spinner {
            margin-bottom: 20px;
        }

        /* Location Filter Status */
        .location-filter-status {
            margin-bottom: 20px;
            border-radius: 12px;
            padding: 15px 20px;
            border: none;
            background: linear-gradient(135deg, #1a73e8 0%, #4285f4 100%);
            color: white;
            display: flex;
            align-items: center;
            justify-content: space-between;
            box-shadow: 0 4px 15px rgba(26, 115, 232, 0.3);
            transition: all 0.3s ease;
        }

        .location-filter-status.alert-info {
            background: linear-gradient(135deg, #17a2b8 0%, #20c997 100%);
            box-shadow: 0 4px 15px rgba(23, 162, 184, 0.3);
        }

        .location-filter-status .btn {
            background: rgba(255, 255, 255, 0.2);
            border: 1px solid rgba(255, 255, 255, 0.3);
            color: white;
            border-radius: 8px;
            padding: 8px 16px;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }

        .location-filter-status .btn:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
        }

        /* Modern Swap Request Modal */
        .modal-modern {
            background: #1E1E1E;
            border: 1px solid #3a3b40;
            border-radius: 16px;
            box-shadow: 0 25px 50px rgba(0,0,0,0.5);
        }

        .modal-header-modern {
            background: linear-gradient(135deg, #23242a, #1E1F23);
            border-bottom: 1px solid rgba(59, 183, 251, 0.2);
            padding: 24px 30px;
            border-radius: 16px 16px 0 0;
        }

        .modal-title-section h4 {
            color: #ffffff;
            font-weight: 700;
            margin: 0;
        }

        .modal-subtitle {
            color: #B0B3B8;
            font-size: 0.9rem;
            margin: 0;
        }

        .btn-close-modern {
            background: rgba(255, 255, 255, 0.1);
            border: none;
            color: #ffffff;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .btn-close-modern:hover {
            background: rgba(220, 53, 69, 0.2);
            color: #DC3545;
        }

        .modal-body-modern {
            padding: 30px;
        }

        /* Step Indicator */
        .swap-steps {
            margin-bottom: 30px;
        }

        .step-indicator {
            display: flex;
            align-items: center;
            justify-content: center;
            max-width: 600px;
            margin: 0 auto;
        }

        .step {
            display: flex;
            flex-direction: column;
            align-items: center;
            opacity: 0.5;
            transition: all 0.3s ease;
        }

        .step.active {
            opacity: 1;
        }

        .step-number {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: rgba(59, 183, 251, 0.2);
            border: 2px solid rgba(59, 183, 251, 0.3);
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 700;
            color: #3BB7FB;
            margin-bottom: 8px;
            transition: all 0.3s ease;
        }

        .step.active .step-number {
            background: linear-gradient(135deg, #3BB7FB, #667eea);
            border-color: transparent;
            color: white;
            box-shadow: 0 6px 20px rgba(59, 183, 251, 0.3);
        }

        .step-label {
            font-size: 0.8rem;
            color: #B0B3B8;
            font-weight: 500;
            text-align: center;
        }

        .step.active .step-label {
            color: #ffffff;
            font-weight: 600;
        }

        .step-line {
            flex: 1;
            height: 2px;
            background: rgba(59, 183, 251, 0.2);
            margin: 0 20px;
            position: relative;
            top: -16px;
        }

        /* Swap Steps */
        .swap-step {
            display: none;
        }

        .swap-step.active {
            display: block;
            animation: fadeIn 0.4s ease;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* Book Display Card */
        .book-display-card {
            background: linear-gradient(135deg, #23242a, #1E1F23);
            border-radius: 16px;
            border: 1px solid rgba(59, 183, 251, 0.2);
            padding: 20px;
            height: 100%;
        }

        .book-display-header h6 {
            color: #ffffff;
            font-weight: 600;
            margin-bottom: 16px;
        }

        /* Library Selection */
        .library-selection-card {
            background: linear-gradient(135deg, #23242a, #1E1F23);
            border-radius: 16px;
            border: 1px solid rgba(120,130,150,0.1);
            padding: 20px;
            height: 100%;
        }

        .library-header h6 {
            color: #ffffff;
            font-weight: 600;
            margin-bottom: 4px;
        }

        .search-input-group {
            position: relative;
        }

        .search-icon {
            position: absolute;
            left: 16px;
            top: 50%;
            transform: translateY(-50%);
            color: #B0B3B8;
        }

        .search-input-group .form-control-modern {
            padding-left: 45px;
        }

        /* User Books Grid */
        .user-books-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
            gap: 16px;
            max-height: 400px;
            overflow-y: auto;
            padding: 16px 0;
        }

        .user-book-card {
            background: rgba(30, 30, 30, 0.6);
            border: 2px solid rgba(120,130,150,0.1);
            border-radius: 12px;
            padding: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
        }

        .user-book-card:hover {
            border-color: rgba(59, 183, 251, 0.3);
            background: rgba(30, 30, 30, 0.8);
            transform: translateY(-2px);
        }

        .user-book-card.selected {
            border-color: #3BB7FB;
            background: linear-gradient(135deg, rgba(59, 183, 251, 0.15), rgba(102, 126, 234, 0.15));
            box-shadow: 0 6px 20px rgba(59, 183, 251, 0.2);
        }

        .book-cover-container {
            text-align: center;
            margin-bottom: 12px;
        }

        .user-book-cover {
            width: 100%;
            max-width: 80px;
            height: 100px;
            object-fit: cover;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
            transition: transform 0.3s ease;
        }

        .user-book-card:hover .user-book-cover {
            transform: scale(1.05);
        }

        /* Requested Book Display (You Want section) */
        #requested-book-display .book-cover-professional:hover {
            transform: scale(1.05);
        }

        .book-display-content {
            min-height: 300px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* Swap Preview Books Hover Effects */
        .swap-book-preview .book-cover-professional:hover {
            transform: scale(1.05);
        }

        .user-book-info {
            text-align: center;
        }

        .user-book-info .book-title {
            font-size: 0.85rem;
            color: #ffffff;
            font-weight: 600;
            margin-bottom: 4px;
            line-height: 1.2;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .user-book-info .book-author {
            font-size: 0.75rem;
            color: #B0B3B8;
            margin-bottom: 8px;
        }

        .book-meta {
            display: flex;
            flex-direction: column;
            gap: 4px;
        }

        .genre-badge {
            background: rgba(59, 183, 251, 0.15);
            color: #3BB7FB;
            padding: 2px 6px;
            border-radius: 8px;
            font-size: 0.65rem;
            font-weight: 500;
        }

        .condition-text {
            color: #28A745;
            font-size: 0.7rem;
            font-weight: 500;
        }

        .selection-indicator {
            position: absolute;
            top: -8px;
            right: -8px;
            width: 24px;
            height: 24px;
            background: #3BB7FB;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 0.7rem;
            opacity: 0;
            transform: scale(0.8);
            transition: all 0.3s ease;
        }

        .user-book-card.selected .selection-indicator {
            opacity: 1;
            transform: scale(1);
        }

        /* Step 2 Styles */
        .swap-preview-section {
            max-width: 800px;
            margin: 0 auto;
        }

        .swap-book-preview {
            text-align: center;
        }

        .preview-label {
            color: #B0B3B8;
            font-size: 0.9rem;
            font-weight: 600;
            margin-bottom: 16px;
        }

        .swap-arrow {
            font-size: 2rem;
            color: #3BB7FB;
        }

        .message-section {
            max-width: 600px;
            margin: 0 auto;
        }

        .form-label {
            color: #ffffff;
            font-weight: 600;
            margin-bottom: 8px;
        }

        /* Modal Footer */
        .modal-footer-modern {
            background: rgba(30, 30, 30, 0.5);
            border-top: 1px solid rgba(59, 183, 251, 0.2);
            padding: 24px 30px;
            border-radius: 0 0 16px 16px;
        }

        .footer-actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 100%;
        }

        .primary-actions {
            display: flex;
            gap: 12px;
            align-items: center;
        }

        .btn-outline-modern {
            background: transparent;
            border: 2px solid rgba(120,130,150,0.3);
            color: #B0B3B8;
            padding: 10px 20px;
            border-radius: 10px;
            font-weight: 600;
            font-size: 0.875rem;
            transition: all 0.3s ease;
        }

        .btn-outline-modern:hover {
            border-color: rgba(59, 183, 251, 0.5);
            color: #3BB7FB;
        }

        .btn-chat-modern {
            background: linear-gradient(135deg, #28A745, #20C997);
            border: none;
            color: white;
            padding: 10px 20px;
            border-radius: 10px;
            font-weight: 600;
            font-size: 0.875rem;
            transition: all 0.3s ease;
        }

        .btn-chat-modern:hover {
            background: linear-gradient(135deg, #218838, #1FA085);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(40, 167, 69, 0.3);
            color: white;
        }

        .btn-success-modern {
            background: linear-gradient(135deg, #28A745, #20C997);
            border: none;
            color: white;
            padding: 12px 24px;
            border-radius: 10px;
            font-weight: 700;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }

        .btn-success-modern:hover {
            background: linear-gradient(135deg, #218838, #1FA085);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(40, 167, 69, 0.4);
            color: white;
        }

        /* Empty States */
        .empty-library {
            text-align: center;
            padding: 60px 20px;
            color: #B0B3B8;
        }

        .empty-library i {
            font-size: 3rem;
            margin-bottom: 16px;
            opacity: 0.5;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .discovery-books-grid {
                grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
                gap: 16px;
            }
            
            .user-books-grid {
                grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
                gap: 12px;
            }
            
            .modal-header-modern,
            .modal-body-modern,
            .modal-footer-modern {
                padding: 20px;
            }
            
            .step-indicator {
                flex-direction: column;
                gap: 16px;
            }
            
            .step-line {
                display: none;
            }
            
            .footer-actions {
                flex-direction: column;
                gap: 16px;
            }
            
            .primary-actions {
                width: 100%;
                justify-content: space-between;
            }
        }

        /* Toast Notification Styles */
        .success-toast, .error-toast {
            position: fixed;
            top: 20px;
            right: 20px;
            background: #1E1E1E;
            border: 1px solid #28A745;
            border-left: 4px solid #28A745;
            border-radius: 12px;
            padding: 16px 20px;
            z-index: 10000;
            box-shadow: 0 8px 32px rgba(0,0,0,0.3);
            transform: translateX(400px);
            transition: all 0.4s ease;
            max-width: 400px;
        }

        .error-toast {
            border-color: #DC3545;
            border-left-color: #DC3545;
        }

        .success-toast.show, .error-toast.show {
            transform: translateX(0);
        }

        .toast-content {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .toast-icon {
            font-size: 24px;
            flex-shrink: 0;
        }

        .success-toast .toast-icon {
            color: #28A745;
        }

        .error-toast .toast-icon {
            color: #DC3545;
        }

        .toast-message h6 {
            color: #ffffff;
            margin: 0 0 4px 0;
            font-weight: 600;
        }

        .toast-message p {
            color: #B0B3B8;
            margin: 0;
            font-size: 0.9rem;
        }

        /* Chat Message Styles */
        .max-width-70 { 
            max-width: 70% !important; 
        }

        #chat-messages { 
            scrollbar-width: thin;
            scrollbar-color: #666 #2a2a2a;
        }

        #chat-messages::-webkit-scrollbar {
            width: 6px;
        }

        #chat-messages::-webkit-scrollbar-track {
            background: #2a2a2a;
        }

        #chat-messages::-webkit-scrollbar-thumb {
            background: #666;
            border-radius: 3px;
        }

        /* Swap Workflow Tracker Styles */
        .swap-workflow-tracker {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .workflow-step {
            display: flex;
            align-items: flex-start;
            gap: 15px;
            padding: 20px;
            border-radius: 12px;
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
        }

        .workflow-step.active {
            background: rgba(59, 183, 251, 0.1);
            border-color: #3BB7FB;
            box-shadow: 0 0 20px rgba(59, 183, 251, 0.2);
        }

        .workflow-step.completed {
            background: rgba(40, 167, 69, 0.1);
            border-color: #28A745;
        }

        .step-icon {
            font-size: 1.5rem;
            flex-shrink: 0;
            margin-top: 2px;
        }

        .step-content h6 {
            color: white;
            margin-bottom: 8px;
            font-weight: 600;
        }

        .step-content p {
            margin-bottom: 12px;
            font-size: 0.9rem;
        }

        .step-content .btn {
            font-size: 0.85rem;
            padding: 6px 12px;
        }

        /* Swap Status Badges */
        .swap-status-badge {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
        }

        .status-pending {
            background: rgba(255, 193, 7, 0.2);
            color: #FFC107;
            border: 1px solid #FFC107;
        }

        .status-accepted {
            background: rgba(23, 162, 184, 0.2);
            color: #17A2B8;
            border: 1px solid #17A2B8;
        }

        .status-in-progress {
            background: rgba(220, 53, 69, 0.2);
            color: #DC3545;
            border: 1px solid #DC3545;
        }

        .status-completed {
            background: rgba(40, 167, 69, 0.2);
            color: #28A745;
            border: 1px solid #28A745;
        }

        .status-cancelled {
            background: rgba(108, 117, 125, 0.2);
            color: #6C757D;
            border: 1px solid #6C757D;
        }

        /* Completion Animation */
        .completion-animation {
            animation: bounceIn 0.6s ease-out;
        }

        @keyframes bounceIn {
            0% {
                transform: scale(0.3);
                opacity: 0;
            }
            50% {
                transform: scale(1.05);
            }
            70% {
                transform: scale(0.9);
            }
            100% {
                transform: scale(1);
                opacity: 1;
            }
        }

        /* Enhanced swap action buttons */
        .swap-action-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            color: white;
            border-radius: 8px;
            padding: 10px 20px;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .swap-action-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
            color: white;
        }

        .swap-action-btn:active {
            transform: translateY(0);
        }

        /* Swap Request Message Display */
        .swap-request-message {
            background: linear-gradient(135deg, rgba(59, 183, 251, 0.1) 0%, rgba(102, 126, 234, 0.1) 100%);
            border-left: 4px solid #3BB7FB;
            border-radius: 8px;
            padding: 16px;
            margin-top: 12px;
        }

        .swap-request-message .message-header {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 10px;
            font-size: 0.9rem;
        }

        .swap-request-message .message-header i {
            font-size: 1.1rem;
        }

        .swap-request-message .message-content {
            color: #E0E0E0;
            font-size: 0.95rem;
            line-height: 1.6;
            padding: 12px;
            background: rgba(0, 0, 0, 0.2);
            border-radius: 6px;
            font-style: italic;
        }

        /* Meeting Notification Animations */
        @keyframes pulse {
            0% {
                transform: scale(1);
                opacity: 1;
            }
            50% {
                transform: scale(1.05);
                opacity: 0.8;
            }
            100% {
                transform: scale(1);
                opacity: 1;
            }
        }

        .animate__animated {
            animation-duration: 1s;
            animation-fill-mode: both;
        }

        .animate__pulse {
            animation-name: pulse;
        }

        .animate__infinite {
            animation-iteration-count: infinite;
        }

        /* Meeting Alert Badge Styles */
        .badge.animate__pulse {
            animation-duration: 2s;
        }
    </style>
</head>
<body>
    <!-- Include Standard Navbar -->
    <%- include('partials/navbar') %>

    <!-- Swap Matcher Main Content -->
    <main class="container-fluid py-4">
    <div class="dashboard-content">
    <!-- Swap Matcher Hero Section -->
    <section class="welcome-hero">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-8">
                    <h1 class="display-4 font-weight-bold mb-3">
                        <i class="bi bi-arrow-left-right"></i> Smart Book Swap Matcher
                    </h1>
                    <p class="lead mb-4">
                        Discover perfect matches for your books using our intelligent algorithm. 
                        Connect with readers in your area and expand your literary horizons.
                    </p>
                    <div class="d-flex flex-wrap gap-3">
                        <button class="btn-professional" onclick="quickMatchAll()">
                            <i class="bi bi-lightning-charge"></i> Quick Match All
                        </button>
                        <button class="btn-outline-professional" onclick="showMatchPreferences()">
                            <i class="bi bi-sliders"></i> Match Preferences
                        </button>
                    </div>
                </div>
                <div class="col-lg-4 text-center">
                    <div class="swap-stats">
                        <div class="row text-center">
                            <div class="col-6">
                                <h3 class="mb-1"><%= myPendingRequests || 0 %></h3>
                                <small>My Requests</small>
                            </div>
                            <div class="col-6">
                                <h3 class="mb-1"><%= incomingRequests || 0 %></h3>
                                <small>Incoming</small>
                            </div>
                        </div>
                        <hr class="bg-white my-3">
                        <div class="row text-center">
                            <div class="col-6">
                                <h3 class="mb-1"><%= activeSwaps || 0 %></h3>
                                <small>Active Swaps</small>
                            </div>
                            <div class="col-6">
                                <h3 class="mb-1"><%= userStats?.swapsCompleted || 0 %></h3>
                                <small>Completed</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Swap Navigation Tabs -->
    <div class="container">
        <div class="card-dark mb-4">
            <div class="card-body p-3">
            <ul class="nav nav-pills justify-content-center" id="swapTabs" role="tablist">
                <li class="nav-item">
                    <a class="nav-link active" id="find-matches-tab" data-toggle="pill" href="#find-matches" role="tab">
                        <i class="bi bi-search"></i> Find Matches
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="my-requests-tab" data-toggle="pill" href="#my-requests" role="tab">
                        <i class="bi bi-arrow-up-right"></i> My Requests 
                        <% if (myPendingRequests > 0) { %>
                            <span class="badge badge-warning ml-1"><%= myPendingRequests %></span>
                        <% } %>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="incoming-requests-tab" data-toggle="pill" href="#incoming-requests" role="tab">
                        <i class="bi bi-arrow-down-left"></i> Incoming Requests
                        <% if (incomingRequests > 0) { %>
                            <span class="badge badge-success ml-1"><%= incomingRequests %></span>
                        <% } %>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="active-swaps-tab" data-toggle="pill" href="#active-swaps" role="tab">
                        <i class="bi bi-hourglass-split"></i> Active Swaps
                        <% if (activeSwaps > 0) { %>
                            <span class="badge badge-info ml-1"><%= activeSwaps %></span>
                        <% } %>
                        <!-- Show notification badge if there are meetings awaiting confirmation -->
                        <% 
                        const meetingsNeedingConfirmation = userSwaps?.filter(swap => 
                            (swap.status === 'Accepted' || swap.status === 'In Progress') &&
                            swap.meetingDetails && 
                            swap.meetingDetails.datetime && 
                            !swap.meetingDetails.confirmed
                        ).length || 0;
                        %>
                        <% if (meetingsNeedingConfirmation > 0) { %>
                            <span class="badge badge-warning ml-1 animate__animated animate__pulse animate__infinite" 
                                  style="animation-duration: 2s;" 
                                  title="Meetings need your confirmation!">
                                <i class="bi bi-exclamation-circle"></i> <%= meetingsNeedingConfirmation %>
                            </span>
                        <% } %>
                    </a>
                </li>
            </ul>
            </div>
        </div>

        <!-- Tab Content -->
        <div class="tab-content" id="swapTabsContent">
            <!-- Find Matches Tab -->
            <div class="tab-pane fade show active" id="find-matches" role="tabpanel">
                <!-- Available Books Discovery Section -->
                <div class="discovery-section mb-4">
                    <div class="card-dark">
                        <div class="card-header border-0">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h5 class="mb-1 text-white">
                                        <i class="bi bi-compass text-primary"></i> Discover Books to Swap
                                    </h5>
                                    <p class="text-muted mb-0">Find amazing books available for swap in your area</p>
                                </div>
                                <div class="discovery-controls">
                                    <button class="btn-modern-outline btn-sm mr-2" onclick="showAdvancedFilters()">
                                        <i class="bi bi-funnel"></i> Filters
                                    </button>
                                    <button class="btn-modern btn-sm" onclick="refreshDiscovery()">
                                        <i class="bi bi-arrow-clockwise"></i> Refresh
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Advanced Filter Panel -->
                <div id="advanced-filters" class="filter-panel mb-4" style="display: none;">
                    <div class="card-dark">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-3 mb-3">
                                    <label class="filter-label">Genre</label>
                                    <select id="genre-filter" class="form-control-modern">
                                        <option value="">All Genres</option>
                                        <option value="Fiction">Fiction</option>
                                        <option value="Science Fiction">Science Fiction</option>
                                        <option value="Romance">Romance</option>
                                        <option value="Mystery">Mystery</option>
                                        <option value="Fantasy">Fantasy</option>
                                        <option value="Biography">Biography</option>
                                        <option value="History">History</option>
                                        <option value="Non-Fiction">Non-Fiction</option>
                                        <option value="Thriller">Thriller</option>
                                        <option value="Self-Help">Self-Help</option>
                                    </select>
                                </div>
                                <div class="col-md-3 mb-3">
                                    <label class="filter-label">Condition</label>
                                    <select id="condition-filter" class="form-control-modern">
                                        <option value="">All Conditions</option>
                                        <option value="New">New</option>
                                        <option value="Like New">Like New</option>
                                        <option value="Very Good">Very Good</option>
                                        <option value="Good">Good</option>
                                        <option value="Fair">Fair</option>
                                    </select>
                                </div>
                                <div class="col-md-3 mb-3">
                                    <label class="filter-label">Sort by</label>
                                    <select id="sort-filter" class="form-control-modern">
                                        <option value="title">Title A-Z</option>
                                        <option value="author">Author A-Z</option>
                                        <option value="condition">Best Condition First</option>
                                        <option value="newest">Recently Added</option>
                                    </select>
                                </div>
                                <div class="col-md-3 mb-3">
                                    <label class="filter-label">&nbsp;</label>
                                    <button id="clear-filters" class="btn-danger-outline form-control-modern" style="height: auto; padding: 10px 16px;">
                                        <i class="bi bi-x-circle"></i> Clear Filters
                                    </button>
                                </div>
                            </div>
                            <div class="row mt-3">
                                <div class="col-12">
                                    <div class="results-info">
                                        <span id="matches-count" class="matches-counter">Loading books...</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Books Discovery Grid -->
                <div class="books-discovery-grid">
                    <div class="card-dark">
                        <div class="card-body p-4">
                            <div id="books-container">
                                <div class="loading-state">
                                    <div class="loading-spinner">
                                        <div class="spinner-border text-primary" role="status"></div>
                                    </div>
                                    <h6 class="mt-3">Discovering Amazing Books...</h6>
                                    <p class="text-muted">Finding the perfect books for you to swap</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- My Requests Tab -->
            <div class="tab-pane fade" id="my-requests" role="tabpanel">
                <div class="card-dark">
                    <div class="card-header">
                        <h5 class="mb-0 text-white">
                            <i class="bi bi-arrow-up-right text-primary"></i> Your Swap Requests
                        </h5>
                        <small class="text-muted">Track the status of your swap proposals</small>
                    </div>
                    <div class="card-body">
                        <% const myRequests = userSwaps?.filter(swap => (swap.requester._id || swap.requester).toString() === user._id.toString()); %>
                        <% if (myRequests && myRequests.length > 0) { %>
                            <% myRequests.forEach(swap => { %>
                                <div class="book-swap-item">
                                    <div class="row align-items-center">
                                        <div class="col-md-2">
                                            <img src="<%= swap.requestedBook ? (swap.requestedBook.coverImage || '/images/placeholder-book.jpg') : '/images/placeholder-book.jpg' %>" 
                                                 alt="<%= swap.requestedBook ? swap.requestedBook.title : 'Book' %>" class="img-fluid rounded">
                                        </div>
                                        <div class="col-md-4">
                                            <h6 class="text-white">You want: <%= swap.requestedBook ? swap.requestedBook.title : 'Unknown Book' %></h6>
                                            <small class="text-muted">by <%= swap.requestedBook ? swap.requestedBook.author : 'Unknown Author' %></small>
                                            <br>
                                            <small class="text-info">From: <%= swap.owner ? (swap.owner.username || swap.owner.fullname) : 'Unknown User' %></small>
                                        </div>
                                        <div class="col-md-2 text-center">
                                            <i class="bi bi-arrow-left-right text-primary" style="font-size: 1.5rem;"></i>
                                        </div>
                                        <div class="col-md-2">
                                            <img src="<%= swap.offeredBook ? (swap.offeredBook.coverImage || '/images/placeholder-book.jpg') : '/images/placeholder-book.jpg' %>" 
                                                 alt="<%= swap.offeredBook ? swap.offeredBook.title : 'Book' %>" class="img-fluid rounded">
                                        </div>
                                        <div class="col-md-2 text-right">
                                            <span class="swap-status-badge status-<%= swap.status.toLowerCase().replace(' ', '-') %>">
                                                <%= swap.status %>
                                            </span>
                                            <% if (swap.status === 'Pending') { %>
                                                <br>
                                                <button class="btn btn-sm btn-info mt-2" onclick="openChat('<%= swap._id %>')" style="display: block; width: 100%; margin-bottom: 5px;">
                                                    <i class="bi bi-chat-dots"></i> Chat
                                                </button>
                                                <button class="btn btn-sm btn-outline-danger" onclick="cancelSwapRequest('<%= swap._id %>')">
                                                    Cancel
                                                </button>
                                            <% } else if (swap.status === 'Accepted' || swap.status === 'In Progress') { %>
                                                <br>
                                                <button class="btn btn-sm btn-info mt-2" onclick="openChat('<%= swap._id %>')" style="display: block; width: 100%;">
                                                    <i class="bi bi-chat-dots"></i> Chat
                                                </button>
                                            <% } %>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <div class="empty-state">
                                <i class="bi bi-arrow-up-right"></i>
                                <h6>No Requests Sent</h6>
                                <p class="text-muted">You haven't made any swap requests yet. Start browsing to find great books!</p>
                                <button class="btn btn-gradient" onclick="$('#find-matches-tab').tab('show')">Find Books to Swap</button>
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>

            <!-- Incoming Requests Tab -->
            <div class="tab-pane fade" id="incoming-requests" role="tabpanel">
                <div class="card-dark">
                    <div class="card-header">
                        <h5 class="mb-0 text-white">
                            <i class="bi bi-arrow-down-left text-success"></i> Incoming Swap Requests
                        </h5>
                        <small class="text-muted">Review and respond to swap proposals from other readers</small>
                    </div>
                    <div class="card-body">
                        <% const incomingRequestsFiltered = userSwaps?.filter(swap => (swap.owner._id || swap.owner).toString() === user._id.toString() && swap.status === 'Pending'); %>
                        <% if (incomingRequestsFiltered && incomingRequestsFiltered.length > 0) { %>
                            <% incomingRequestsFiltered.forEach(swap => { %>
                                <div class="book-swap-item">
                                    <div class="row align-items-center">
                                        <div class="col-md-2">
                                            <img src="<%= swap.requestedBook ? (swap.requestedBook.coverImage || '/images/placeholder-book.jpg') : '/images/placeholder-book.jpg' %>" 
                                                 alt="<%= swap.requestedBook ? swap.requestedBook.title : 'Book' %>" class="img-fluid rounded">
                                        </div>
                                        <div class="col-md-3">
                                            <h6 class="text-white">They want: <%= swap.requestedBook ? swap.requestedBook.title : 'Unknown Book' %></h6>
                                            <small class="text-muted">by <%= swap.requestedBook ? swap.requestedBook.author : 'Unknown Author' %></small>
                                            <br>
                                            <small class="text-success">Your book</small>
                                        </div>
                                        <div class="col-md-1 text-center">
                                            <i class="bi bi-arrow-left-right text-warning" style="font-size: 1.5rem;"></i>
                                        </div>
                                        <div class="col-md-2">
                                            <img src="<%= swap.offeredBook ? (swap.offeredBook.coverImage || '/images/placeholder-book.jpg') : '/images/placeholder-book.jpg' %>" 
                                                 alt="<%= swap.offeredBook ? swap.offeredBook.title : 'Book' %>" class="img-fluid rounded">
                                        </div>
                                        <div class="col-md-2">
                                            <h6 class="text-white">They offer: <%= swap.offeredBook ? swap.offeredBook.title : 'Unknown Book' %></h6>
                                            <small class="text-muted">by <%= swap.offeredBook ? swap.offeredBook.author : 'Unknown Author' %></small>
                                            <br>
                                            <small class="text-info">From: <%= swap.requester ? (swap.requester.username || swap.requester.fullname) : 'Unknown User' %></small>
                                        </div>
                                        <div class="col-md-2 text-right">
                                            <button class="btn btn-success btn-sm mb-2 d-block w-100" onclick="acceptSwapRequest('<%= swap._id %>')">
                                                <i class="bi bi-check-circle"></i> Accept
                                            </button>
                                            <button class="btn btn-outline-danger btn-sm mb-2 d-block w-100" onclick="rejectSwapRequest('<%= swap._id %>')">
                                                <i class="bi bi-x-circle"></i> Decline
                                            </button>
                                            <button class="btn btn-info btn-sm d-block w-100" onclick="openChat('<%= swap._id %>')">
                                                <i class="bi bi-chat-dots"></i> Chat
                                            </button>
                                        </div>
                                    </div>
                                    <% if (swap.message && swap.message.trim().length > 0) { %>
                                    <div class="row mt-3">
                                        <div class="col-12">
                                            <div class="swap-request-message">
                                                <div class="message-header">
                                                    <i class="bi bi-chat-quote-fill text-primary"></i>
                                                    <span class="font-weight-bold text-white">Message from <%= swap.requester ? (swap.requester.username || swap.requester.fullname) : 'requester' %>:</span>
                                                </div>
                                                <div class="message-content">
                                                    <%= swap.message %>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <% } %>
                                    </div>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <div class="empty-state">
                                <i class="bi bi-arrow-down-left"></i>
                                <h6>No Incoming Requests</h6>
                                <p class="text-muted">No one has requested your books yet. Make sure your library is visible to other readers!</p>
                                <a href="/library" class="btn btn-gradient">Manage My Library</a>
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>

            <!-- Active Swaps Tab -->
            <div class="tab-pane fade" id="active-swaps" role="tabpanel">
                <div class="card-dark">
                    <div class="card-header">
                        <h5 class="mb-0 text-white">
                            <i class="bi bi-hourglass-split text-warning"></i> Active Swaps
                        </h5>
                        <small class="text-muted">Track your ongoing book exchanges and confirm when you receive books</small>
                    </div>
                    <div class="card-body">
                        <!-- Quick Guide -->
                        <div class="alert alert-info mb-4" style="background: rgba(59, 183, 251, 0.1); border: 1px solid rgba(59, 183, 251, 0.3);">
                            <h6 class="text-primary mb-2">
                                <i class="bi bi-info-circle-fill"></i> How to Confirm Book Receipt
                            </h6>
                            <ol class="mb-0 text-muted" style="font-size: 0.9rem; padding-left: 20px;">
                                <li><strong>After accepting a swap</strong>, schedule a meeting with your partner</li>
                                <li><strong>Meet up and exchange books</strong> in person at the scheduled time</li>
                                <li><strong>Once you receive your book</strong>, come back here to the Active Swaps tab</li>
                                <li><strong>Find your swap</strong> with status "In Progress"</li>
                                <li><strong>Click "I Received My Book"</strong> button on the right side</li>
                                <li><strong>Both parties must confirm</strong> to complete the swap and earn 10 points!</li>
                            </ol>
                        </div>
                        <% 
                        // Check for meetings needing confirmation
                        const meetingsNeedingAction = userSwaps?.filter(swap => 
                            (swap.status === 'Accepted' || swap.status === 'In Progress') &&
                            swap.meetingDetails && 
                            swap.meetingDetails.datetime && 
                            !swap.meetingDetails.confirmed
                        ) || [];
                        %>
                        
                        <!-- Meeting Confirmation Alert -->
                        <% if (meetingsNeedingAction.length > 0) { %>
                            <div class="alert alert-warning animate__animated animate__pulse animate__infinite" 
                                 style="border: 2px solid #FFC107; background: rgba(255, 193, 7, 0.1); animation-duration: 2s; margin-bottom: 20px;">
                                <div class="d-flex align-items-center">
                                    <i class="bi bi-calendar-exclamation text-warning" style="font-size: 2rem; margin-right: 15px;"></i>
                                    <div>
                                        <h6 class="mb-1 text-warning" style="font-weight: 700;">
                                            <i class="bi bi-exclamation-triangle"></i> Action Required!
                                        </h6>
                                        <p class="mb-0" style="font-size: 0.95rem;">
                                            You have <strong><%= meetingsNeedingAction.length %></strong> meeting<%= meetingsNeedingAction.length > 1 ? 's' : '' %> 
                                            waiting for your confirmation. Please review and confirm below.
                                        </p>
                                    </div>
                                </div>
                            </div>
                        <% } %>
                        
                        <% const activeSwapsFiltered = userSwaps?.filter(swap => 
                            swap.status === 'Accepted' || 
                            swap.status === 'In Progress' || 
                            swap.status === 'Pending Confirmation'
                        ); %>
                        
                        <!-- Status Summary -->
                        <% if (activeSwapsFiltered && activeSwapsFiltered.length > 0) { %>
                            <div class="mb-3 p-3" style="background: rgba(255, 255, 255, 0.05); border-radius: 10px; border: 1px solid rgba(255, 255, 255, 0.1);">
                                <h6 class="text-white mb-2">
                                    <i class="bi bi-pie-chart"></i> Your Active Swaps Summary
                                </h6>
                                <div class="row text-center">
                                    <div class="col-4">
                                        <div class="badge badge-warning" style="font-size: 1.1rem; padding: 8px 12px;">
                                            <%= activeSwapsFiltered.filter(s => s.status === 'Accepted').length %>
                                        </div>
                                        <br>
                                        <small class="text-muted">Accepted<br>(Schedule Meeting)</small>
                                    </div>
                                    <div class="col-4">
                                        <div class="badge badge-primary" style="font-size: 1.1rem; padding: 8px 12px;">
                                            <%= activeSwapsFiltered.filter(s => s.status === 'In Progress').length %>
                                        </div>
                                        <br>
                                        <small class="text-muted">In Progress<br>(Confirm Receipt)</small>
                                    </div>
                                    <div class="col-4">
                                        <div class="badge badge-info" style="font-size: 1.1rem; padding: 8px 12px;">
                                            <%= activeSwapsFiltered.filter(s => s.status === 'Pending Confirmation').length %>
                                        </div>
                                        <br>
                                        <small class="text-muted">Pending Verification</small>
                                    </div>
                                </div>
                            </div>
                        <% } %>
                        
                        <% if (activeSwapsFiltered && activeSwapsFiltered.length > 0) { %>
                            <% activeSwapsFiltered.forEach(swap => { %>
                                <div class="book-swap-item">
                                    <div class="row align-items-center">
                                        <div class="col-md-8">
                                            <div class="row">
                                                <div class="col-6">
                                                    <div class="d-flex align-items-center">
                                                        <img src="<%= swap.requestedBook ? (swap.requestedBook.coverImage || '/images/placeholder-book.jpg') : '/images/placeholder-book.jpg' %>" 
                                                             alt="<%= swap.requestedBook ? swap.requestedBook.title : 'Book' %>" 
                                                             class="book-cover-small mr-3">
                                                        <div>
                                                            <h6 class="mb-1 text-white"><%= swap.requestedBook ? swap.requestedBook.title : 'Unknown Book' %></h6>
                                                            <small class="text-muted"><%= swap.requestedBook ? swap.requestedBook.author : 'Unknown Author' %></small>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-6">
                                                    <div class="d-flex align-items-center">
                                                        <img src="<%= swap.offeredBook ? (swap.offeredBook.coverImage || '/images/placeholder-book.jpg') : '/images/placeholder-book.jpg' %>" 
                                                             alt="<%= swap.offeredBook ? swap.offeredBook.title : 'Book' %>" 
                                                             class="book-cover-small mr-3">
                                                        <div>
                                                            <h6 class="mb-1 text-white"><%= swap.offeredBook ? swap.offeredBook.title : 'Unknown Book' %></h6>
                                                            <small class="text-muted"><%= swap.offeredBook ? swap.offeredBook.author : 'Unknown Author' %></small>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <hr class="bg-secondary">
                                            <div class="row">
                                                <div class="col-6">
                                                    <strong class="text-white">Partner:</strong> 
                                                    <span class="text-info">
                                                        <%= (swap.requester._id.toString() === user._id.toString()) ? (swap.owner.username || swap.owner.fullname) : (swap.requester.username || swap.requester.fullname) %>
                                                    </span>
                                                </div>
                                                <div class="col-6">
                                                    <strong class="text-white">Status:</strong> 
                                                    <span class="swap-status-badge status-<%= swap.status.toLowerCase().replace(' ', '-') %>">
                                                        <%= swap.status %>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-4 text-right">
                                            <% if (swap.status === 'Accepted') { %>
                                                <% if (swap.meetingDetails && swap.meetingDetails.datetime) { %>
                                                    <!-- Meeting scheduled -->
                                                    <% if (!swap.meetingDetails.confirmed) { %>
                                                        <!-- Pending confirmation - highlight it -->
                                                        <div class="alert alert-warning mb-2 animate__animated animate__pulse animate__infinite" style="font-size: 0.85rem; padding: 12px; border: 2px solid #FFC107; animation-duration: 2s;">
                                                            <i class="bi bi-calendar-exclamation"></i>
                                                            <strong>Action Required!</strong>
                                                            <br>
                                                            <small style="font-weight: 600;">Meeting Scheduled</small>
                                                            <br>
                                                            <small><%= new Date(swap.meetingDetails.datetime).toLocaleDateString('en-US', { month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' }) %></small>
                                                            <br>
                                                            <span class="badge badge-warning mt-1">⚠️ Awaiting Your Confirmation</span>
                                                        </div>
                                                        <button class="btn btn-success btn-block mb-2 animate__animated animate__heartBeat" style="font-weight: 600;" onclick="showMeetingDetails('<%= swap._id %>')">
                                                            <i class="bi bi-check-circle"></i> View & Confirm Meeting
                                                        </button>
                                                    <% } else { %>
                                                        <!-- Meeting confirmed -->
                                                        <div class="alert alert-success mb-2" style="font-size: 0.85rem; padding: 8px 12px;">
                                                            <i class="bi bi-calendar-check"></i>
                                                            <strong>Meeting Confirmed</strong>
                                                            <br>
                                                            <small><%= new Date(swap.meetingDetails.datetime).toLocaleDateString('en-US', { month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' }) %></small>
                                                            <br>
                                                            <span class="badge badge-success mt-1">✅ Both Parties Confirmed</span>
                                                        </div>
                                                        <button class="btn btn-outline-primary btn-sm btn-block mb-2" onclick="showMeetingDetails('<%= swap._id %>')">
                                                            <i class="bi bi-info-circle"></i> View Meeting Details
                                                        </button>
                                                    <% } %>
                                                    <button class="btn btn-outline-secondary btn-sm btn-block mb-2" onclick="startSwap('<%= swap._id %>')">
                                                        <i class="bi bi-play-circle"></i> View Swap Progress
                                                    </button>
                                                    <!-- Quick action to mark as In Progress -->
                                                    <button class="btn btn-warning btn-sm btn-block" onclick="quickMarkInProgress('<%= swap._id %>')">
                                                        <i class="bi bi-arrow-right-circle"></i> Mark as In Progress
                                                    </button>
                                                    <small class="text-muted d-block text-center mt-1">After exchanging books</small>
                                                <% } else { %>
                                                    <!-- No meeting scheduled yet -->
                                                    <button class="btn swap-action-btn btn-block mb-2" onclick="startSwap('<%= swap._id %>')">
                                                        <i class="bi bi-play-circle"></i> Start Swap Process
                                                    </button>
                                                    <button class="btn btn-outline-info btn-sm btn-block mb-2" onclick="scheduleMeeting('<%= swap._id %>')">
                                                        <i class="bi bi-calendar-event"></i> Schedule Meeting
                                                    </button>
                                                    <!-- Quick action to mark as In Progress -->
                                                    <button class="btn btn-warning btn-sm btn-block" onclick="quickMarkInProgress('<%= swap._id %>')">
                                                        <i class="bi bi-arrow-right-circle"></i> Mark as In Progress
                                                    </button>
                                                    <small class="text-muted">Ready to coordinate exchange</small>
                                                <% } %>
                                            <% } else if (swap.status === 'In Progress') { %>
                                                <!-- Book Receipt Confirmation Section -->
                                                <% 
                                                    const currentUserId = user._id.toString();
                                                    const isRequester = swap.requester._id.toString() === currentUserId;
                                                    const isOwner = swap.owner._id.toString() === currentUserId;
                                                    
                                                    const userConfirmed = swap.receivedConfirmation && (
                                                        (isRequester && swap.receivedConfirmation.requesterConfirmed) ||
                                                        (isOwner && swap.receivedConfirmation.ownerConfirmed)
                                                    );
                                                    
                                                    const partnerConfirmed = swap.receivedConfirmation && (
                                                        (isRequester && swap.receivedConfirmation.ownerConfirmed) ||
                                                        (isOwner && swap.receivedConfirmation.requesterConfirmed)
                                                    );
                                                    
                                                    const bothConfirmed = userConfirmed && partnerConfirmed;
                                                    
                                                    const partnerName = isRequester ? 
                                                        (swap.owner.fullname || swap.owner.username) : 
                                                        (swap.requester.fullname || swap.requester.username);
                                                %>
                                                
                                                <% if (bothConfirmed) { %>
                                                    <!-- Both parties confirmed - Ready for verification -->
                                                    <div class="alert alert-success mb-3 animate__animated animate__pulse" style="border: 2px solid #28A745; background: rgba(40, 167, 69, 0.1);">
                                                        <div class="d-flex align-items-center">
                                                            <i class="bi bi-check-circle-fill text-success" style="font-size: 2rem; margin-right: 12px;"></i>
                                                            <div>
                                                                <h6 class="mb-1 text-success" style="font-weight: 700;">
                                                                    <i class="bi bi-trophy"></i> Books Received!
                                                                </h6>
                                                                <p class="mb-0">
                                                                    Both parties confirmed receiving their books. Ready for verification!
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <button class="btn btn-success btn-block mb-2" onclick="showVerificationModal('<%= swap._id %>')">
                                                        <i class="bi bi-shield-check"></i> View Verification Details
                                                    </button>
                                                    <small class="text-success d-block text-center">
                                                        <i class="bi bi-star-fill"></i> You earned 10 reward points!
                                                    </small>
                                                <% } else if (userConfirmed && !partnerConfirmed) { %>
                                                    <!-- User confirmed, waiting for partner -->
                                                    <div class="alert alert-info mb-3" style="border: 2px solid #17A2B8; background: rgba(23, 162, 184, 0.1);">
                                                        <div class="d-flex align-items-center">
                                                            <i class="bi bi-check-circle text-info" style="font-size: 1.5rem; margin-right: 10px;"></i>
                                                            <div>
                                                                <h6 class="mb-1 text-info" style="font-weight: 600;">
                                                                    You Confirmed Receipt
                                                                </h6>
                                                                <p class="mb-0">
                                                                    <small>Waiting for <%= partnerName %> to confirm their receipt</small>
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <button class="btn btn-outline-secondary btn-sm btn-block" disabled>
                                                        <i class="bi bi-hourglass-split"></i> Waiting for Partner
                                                    </button>
                                                    <small class="text-muted d-block text-center mt-2">
                                                        Swap will complete when both parties confirm
                                                    </small>
                                                <% } else if (!userConfirmed && partnerConfirmed) { %>
                                                    <!-- Partner confirmed, user needs to confirm -->
                                                    <div class="alert alert-warning mb-3 animate__animated animate__pulse animate__infinite" style="border: 2px solid #FFC107; background: rgba(255, 193, 7, 0.1);">
                                                        <div class="d-flex align-items-center">
                                                            <i class="bi bi-exclamation-triangle text-warning" style="font-size: 1.5rem; margin-right: 10px;"></i>
                                                            <div>
                                                                <h6 class="mb-1 text-warning" style="font-weight: 700;">
                                                                    Action Required!
                                                                </h6>
                                                                <p class="mb-0">
                                                                    <small><%= partnerName %> confirmed. Have you received your book?</small>
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <button class="btn swap-action-btn btn-block mb-2 animate__animated animate__heartBeat" onclick="confirmBookReceived('<%= swap._id %>')">
                                                        <i class="bi bi-check-circle"></i> I Received My Book
                                                    </button>
                                                    <small class="text-muted d-block text-center">
                                                        Only confirm if you physically received the book
                                                    </small>
                                                <% } else { %>
                                                    <!-- Neither confirmed yet -->
                                                    <div class="alert alert-primary mb-3" style="border: 2px solid #3BB7FB; background: rgba(59, 183, 251, 0.1);">
                                                        <div class="d-flex align-items-center">
                                                            <i class="bi bi-box-seam text-primary" style="font-size: 1.5rem; margin-right: 10px;"></i>
                                                            <div>
                                                                <h6 class="mb-1 text-primary" style="font-weight: 600;">
                                                                    Exchange In Progress
                                                                </h6>
                                                                <p class="mb-0">
                                                                    <small>Confirm when you physically receive your book</small>
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <button class="btn swap-action-btn btn-block mb-2" onclick="confirmBookReceived('<%= swap._id %>')">
                                                        <i class="bi bi-check-circle"></i> I Received My Book
                                                    </button>
                                                    <small class="text-muted d-block text-center">
                                                        Swap completes when both parties confirm
                                                    </small>
                                                <% } %>
                                                
                                                <!-- Additional Actions -->
                                                <button class="btn btn-outline-info btn-sm btn-block mt-2" onclick="showMeetingDetails('<%= swap._id %>')">
                                                    <i class="bi bi-calendar-event"></i> View Meeting Details
                                                </button>
                                            <% } else if (swap.status === 'Pending Confirmation') { %>
                                                <div class="alert alert-info mb-2">
                                                    <i class="bi bi-hourglass"></i>
                                                    <small>Waiting for partner confirmation...</small>
                                                </div>
                                                <button class="btn btn-outline-success btn-sm btn-block" onclick="rateSwapPartner('<%= swap._id %>', '<%= swap.requester._id.toString() === user._id.toString() ? swap.owner._id : swap.requester._id %>')">
                                                    <i class="bi bi-star"></i> Rate Partner
                                                </button>
                                            <% } %>
                                            
                                            <!-- Progress Tracker Button -->
                                            <button class="btn btn-outline-secondary btn-sm btn-block mt-2" onclick="showSwapProgressModal('<%= swap._id %>', 'view')">
                                                <i class="bi bi-diagram-2"></i> View Progress
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <div class="empty-state">
                                <i class="bi bi-hourglass-split"></i>
                                <h6>No Active Swaps</h6>
                                <p class="text-muted">You don't have any active swaps at the moment. Start by finding books you'd like to read!</p>
                                <button class="btn btn-gradient" onclick="$('#find-matches-tab').tab('show')">Start Swapping</button>
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</main>

<!-- Modern Swap Request Modal -->
<div class="modal fade" id="swapRequestModal" tabindex="-1">
    <div class="modal-dialog modal-xl">
        <div class="modal-content modal-modern">
            <div class="modal-header modal-header-modern">
                <div class="modal-title-section">
                    <h4 class="modal-title mb-1">
                        <i class="bi bi-arrow-left-right text-primary"></i> Complete Your Swap
                    </h4>
                    <p class="modal-subtitle">Choose a book from your library to offer in exchange</p>
                </div>
                <button type="button" class="btn-close-modern" data-dismiss="modal">
                    <i class="bi bi-x"></i>
                </button>
            </div>
            
            <div class="modal-body modal-body-modern">
                <!-- Step Indicator -->
                <div class="swap-steps mb-4">
                    <div class="step-indicator">
                        <div class="step active" data-step="1">
                            <div class="step-number">1</div>
                            <div class="step-label">Select Your Book</div>
                        </div>
                        <div class="step-line"></div>
                        <div class="step" data-step="2">
                            <div class="step-number">2</div>
                            <div class="step-label">Review & Send</div>
                        </div>
                        <div class="step-line"></div>
                        <div class="step" data-step="3">
                            <div class="step-number">3</div>
                            <div class="step-label">Chat & Arrange</div>
                        </div>
                    </div>
                </div>

                <!-- Step 1: Book Selection -->
                <div id="step-1" class="swap-step active">
                    <div class="row">
                        <!-- Requested Book Display -->
                        <div class="col-lg-4">
                            <div class="book-display-card">
                                <div class="book-display-header">
                                    <h6><i class="bi bi-star text-warning"></i> You Want</h6>
                                </div>
                                <div id="requested-book-display" class="book-display-content">
                                    <!-- Will be populated by JavaScript -->
                                </div>
                            </div>
                        </div>

                        <!-- Your Library -->
                        <div class="col-lg-8">
                            <div class="library-selection-card">
                                <div class="library-header">
                                    <h6><i class="bi bi-book text-primary"></i> Choose from Your Library</h6>
                                    <p class="text-muted mb-0">Select a book to offer in exchange</p>
                                </div>
                                <div class="library-search mb-3">
                                    <div class="search-input-group">
                                        <i class="bi bi-search search-icon"></i>
                                        <input type="text" id="library-search" class="form-control-modern" placeholder="Search your books...">
                                    </div>
                                </div>
                                <div id="user-books-grid" class="user-books-grid">
                                    <% if (user.books && user.books.length > 0) { %>
                                        <% user.books.forEach(book => { %>
                                            <div class="user-book-card" data-book-id="<%= book._id %>" onclick="selectUserBook('<%= book._id %>')">
                                                <div class="book-cover-container">
                                                    <img src="<%= book.image || book.coverImage || '/images/placeholder-book.jpg' %>" 
                                                         alt="<%= book.title %>" class="book-cover-professional user-book-cover"
                                                         style="width: 100%; height: 120px; object-fit: cover; border-radius: 8px; box-shadow: 0 4px 15px rgba(0,0,0,0.3); transition: transform 0.3s ease;"
                                                         onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                                    <div class="user-book-cover" style="display: none; align-items: center; justify-content: center; height: 120px; background: linear-gradient(135deg, #3BB7FB, #667eea); border-radius: 8px;">
                                                        <i class="bi bi-book text-white" style="font-size: 1.5rem;"></i>
                                                    </div>
                                                </div>
                                                <div class="user-book-info">
                                                    <h6 class="book-title"><%= book.title %></h6>
                                                    <p class="book-author">by <%= book.author %></p>
                                                    <div class="book-meta">
                                                        <span class="genre-badge"><%= book.genre %></span>
                                                        <span class="condition-text"><%= book.condition || 'Good' %></span>
                                                    </div>
                                                </div>
                                                <div class="selection-indicator">
                                                    <i class="bi bi-check-circle"></i>
                                                </div>
                                            </div>
                                        <% }); %>
                                    <% } else { %>
                                        <div class="empty-library">
                                            <i class="bi bi-book"></i>
                                            <h6>No Books Available</h6>
                                            <p class="text-muted">Add books to your library to start swapping</p>
                                            <a href="/library" class="btn-modern">Add Books</a>
                                        </div>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Step 2: Review & Message -->
                <div id="step-2" class="swap-step">
                    <div class="swap-preview-section">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="swap-book-preview">
                                    <h6 class="preview-label">You're Offering</h6>
                                    <div id="selected-book-preview"></div>
                                </div>
                            </div>
                            <div class="col-md-2 text-center d-flex align-items-center justify-content-center">
                                <div class="swap-arrow">
                                    <i class="bi bi-arrow-left-right text-primary"></i>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="swap-book-preview">
                                    <h6 class="preview-label">You're Getting</h6>
                                    <div id="target-book-preview"></div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="message-section mt-4">
                            <label class="form-label">Personal Message <span class="text-danger">*</span></label>
                            <textarea id="swap-message" class="form-control-modern" rows="4" 
                                      placeholder="Introduce yourself and let them know why you're interested in this book..."
                                      maxlength="500" required></textarea>
                            <div class="form-text-wrapper">
                                <small class="text-muted">A friendly message is required and increases your chances of a successful swap!</small>
                                <small id="message-counter" class="text-muted float-right">0/500</small>
                            </div>
                            <div id="message-validation" class="invalid-feedback d-none"></div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="modal-footer modal-footer-modern">
                <div class="footer-actions">
                    <button type="button" class="btn-outline-modern" data-dismiss="modal">Cancel</button>
                    
                    <div class="primary-actions">
                        <button type="button" id="chat-before-swap" class="btn-chat-modern" onclick="startChatConversation()" style="display: none;">
                            <i class="bi bi-chat-dots"></i> Chat First
                        </button>
                        
                        <button type="button" id="prev-step-btn" class="btn-outline-modern" onclick="previousStep()" style="display: none;">
                            <i class="bi bi-arrow-left"></i> Previous
                        </button>
                        
                        <button type="button" id="next-step-btn" class="btn-modern" onclick="nextStep()" disabled>
                            Next <i class="bi bi-arrow-right"></i>
                        </button>
                        
                        <button type="button" id="send-request-btn" class="btn-success-modern" onclick="submitSwapRequest()" style="display: none;">
                            <i class="bi bi-send"></i> Send Swap Request
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Match Preferences Modal -->
<div class="modal fade" id="matchPreferencesModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content card-dark">
            <div class="modal-header card-header">
                <h5 class="modal-title">
                    <i class="bi bi-sliders text-primary"></i> Match Preferences
                </h5>
                <button type="button" class="close text-white" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body card-body">
                <div class="form-group">
                    <div class="pref-section-title">Preferred Genres</div>
                    <div class="pref-hint">Pick a few genres you enjoy</div>
                    <div id="genre-chips" class="d-flex flex-wrap"></div>
                </div>
                <hr class="bg-secondary">
                <div class="form-group">
                    <div class="pref-section-title">Match Distance <span id="distanceValue" class="range-value"></span></div>
                    <input type="range" min="5" max="100" step="5" id="match-distance-range" class="pref-range">
                    <div class="pref-hint">Set maximum distance for matches</div>
                </div>
                <hr class="bg-secondary">
                <div class="form-group">
                    <div class="pref-section-title">Book Condition</div>
                    <div class="pref-btn-group" id="condition-group">
                        <button type="button" data-cond="Any" class="btn btn-outline-professional btn-sm">Any</button>
                        <button type="button" data-cond="Excellent" class="btn btn-outline-professional btn-sm">Excellent</button>
                        <button type="button" data-cond="Good" class="btn btn-outline-professional btn-sm">Good</button>
                        <button type="button" data-cond="Fair" class="btn btn-outline-professional btn-sm">Fair</button>
                    </div>
                </div>
            </div>
            <div class="modal-footer card-header" style="border-top:1px solid #2A2D35">
                <button type="button" class="btn btn-outline-professional" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-professional" onclick="saveMatchPreferences()">Save Preferences</button>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.bundle.min.js"></script>
<script>
// ========== MODERN SWAP MATCHER JAVASCRIPT ==========

let selectedUserBook = null;
let targetBook = null;
let targetBookData = null;
let currentStep = 1;
let allBooks = [];
let filteredBooks = [];
let discoveryState = { items: [], page: 1, pageSize: 12 };

// Initialize the page
function initializeSwapMatcher() {
    console.log('🚀 Initializing Modern Swap Matcher with location-based filtering');
    loadAllAvailableBooks();
    setupEventListeners();
}

// Load all available books for swapping
function loadAllAvailableBooks() {
    showBooksLoadingState();
    
    // Load available books with location filtering enabled by default
    $.get('/api/books/search', {
        limit: 100, // Get more books initially
        sortBy: 'createdAt',
        enableLocationFilter: 'true' // Enable location-based filtering
    })
        .done(function(response) {
            console.log('📚 Available books loaded:', response);
            const books = response.books || response || [];
            displayAvailableBooks(books);
            
            // Show location filter status
            if (books.length > 0) {
                showLocationFilterStatus(true, books.length);
            } else {
                // If no local books found, try loading all books
                loadAllBooksWithoutLocationFilter();
            }
        })
        .fail(function(xhr) {
            console.error('❌ Failed to load books:', xhr);
            showBooksErrorState();
        });
}

// Show loading state for books
function showBooksLoadingState() {
    $('#books-container').html(`
        <div class="loading-state">
            <div class="loading-spinner">
                <div class="spinner-border text-primary" role="status"></div>
            </div>
            <h6 class="mt-3">Discovering Amazing Books...</h6>
            <p class="text-muted">Finding the perfect books for you to swap</p>
        </div>
    `);
}

// Show error state for books
function showBooksErrorState() {
    $('#books-container').html(`
        <div class="loading-state">
            <i class="bi bi-exclamation-triangle text-warning" style="font-size: 3rem; margin-bottom: 20px;"></i>
            <h6>Unable to Load Books</h6>
            <p class="text-muted">Please check your connection and try again</p>
            <button class="btn-modern" onclick="loadAllAvailableBooks()">
                <i class="bi bi-arrow-clockwise"></i> Retry
            </button>
        </div>
    `);
}

// Load books without location filtering (fallback)
function loadAllBooksWithoutLocationFilter() {
    console.log('🌍 No local books found, loading all available books...');
    
    $.get('/api/books/search', {
        limit: 100,
        sortBy: 'createdAt'
        // No location filter
    })
        .done(function(response) {
            console.log('📚 All books loaded:', response);
            const books = response.books || response || [];
            displayAvailableBooks(books);
            showLocationFilterStatus(false, books.length);
        })
        .fail(function(xhr) {
            console.error('❌ Failed to load all books:', xhr);
            showBooksErrorState();
        });
}

// Show location filter status to user
function showLocationFilterStatus(isFiltered, bookCount) {
    // Remove existing status
    $('.location-filter-status').remove();
    
    const statusHtml = isFiltered 
        ? `<div class="location-filter-status alert alert-success">
             <i class="bi bi-geo-alt"></i>
             <span>Showing ${bookCount} books in your area</span>
             <button class="btn btn-sm btn-outline-primary ml-2" onclick="loadAllBooksWithoutLocationFilter()">
                 <i class="bi bi-globe"></i> Show All Books
             </button>
           </div>`
        : `<div class="location-filter-status alert alert-info">
             <i class="bi bi-globe"></i>
             <span>Showing ${bookCount} books from all locations</span>
             <button class="btn btn-sm btn-outline-success ml-2" onclick="loadAllAvailableBooks()">
                 <i class="bi bi-geo-alt"></i> Show Local Books Only
             </button>
           </div>`;
    
    // Add the status before the books container
    $('#books-container').before(statusHtml);
}

// Display available books in the discovery grid
function displayAvailableBooks(books) {
    allBooks = books;
    filteredBooks = [...books];
    
    updateBooksCount();
    renderBooksGrid();
}

// Render the books grid
function renderBooksGrid() {
    const start = (discoveryState.page - 1) * discoveryState.pageSize;
    const end = start + discoveryState.pageSize;
    const pageBooks = filteredBooks.slice(start, end);
    
    if (pageBooks.length === 0) {
        $('#books-container').html(`
            <div class="loading-state">
                <i class="bi bi-search text-muted" style="font-size: 3rem; margin-bottom: 20px;"></i>
                <h6>No Books Found</h6>
                <p class="text-muted">Try adjusting your filters or check back later for new books</p>
            </div>
        `);
        return;
    }
    
    let html = '<div class="discovery-books-grid">';
    
    pageBooks.forEach(book => {
        const imageSrc = getBookImageSrc(book);
        const ownerName = book.owner?.username || book.owner?.fullname || 'Unknown User';
        
        html += `
            <div class="discovery-book-card" onclick="selectBookForSwap('${book._id}')">
                <img src="${imageSrc}" class="book-cover-professional discovery-book-cover" alt="${book.title}" 
                     style="width: 100%; height: 160px; object-fit: cover; border-radius: 10px; box-shadow: 0 6px 20px rgba(0,0,0,0.4); transition: transform 0.3s ease;"
                     onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                <div class="discovery-book-cover" style="display: none; align-items: center; justify-content: center; height: 160px; background: linear-gradient(135deg, #3BB7FB, #667eea); border-radius: 10px;">
                    <i class="bi bi-book text-white" style="font-size: 2rem;"></i>
                </div>
                <div class="discovery-book-info">
                    <h6 class="discovery-book-title">${book.title}</h6>
                    <p class="discovery-book-author">by ${book.author}</p>
                    <div class="discovery-book-meta">
                        <span class="discovery-genre-badge">${book.genre}</span>
                        <span class="discovery-condition">${book.condition || 'Good'}</span>
                    </div>
                    <p class="discovery-owner">
                        <i class="bi bi-person"></i> ${ownerName}
                    </p>
                    <button class="discovery-swap-btn" onclick="event.stopPropagation(); selectBookForSwap('${book._id}')">
                        <i class="bi bi-arrow-left-right"></i> Start Swap
                    </button>
                </div>
            </div>
        `;
    });
    
    html += '</div>';
    html += renderBooksPagination();
    
    $('#books-container').html(html);
}

// Get book image source with fallback
function getBookImageSrc(book) {
    // Priority order: Google Books API image, custom image, cover image, fallback
    const hasImage = book.image || book.coverImage || book.imageUrl || book.coverUrl;
    let imageSrc = '/images/placeholder-book.jpg';
    
    if (hasImage) {
        if (hasImage.startsWith('http')) {
            // Google Books API URLs or other external images
            imageSrc = hasImage;
        } else if (hasImage.startsWith('/')) {
            // Local server images
            imageSrc = hasImage;
        } else {
            // Relative paths
            imageSrc = '/' + hasImage;
        }
    }
    
    return imageSrc;
}

// Render pagination for books
function renderBooksPagination() {
    const total = filteredBooks.length;
    const totalPages = Math.max(1, Math.ceil(total / discoveryState.pageSize));
    
    if (totalPages <= 1) return '';
    
    let html = '<div class="d-flex justify-content-center mt-4">';
    html += '<nav aria-label="Books pagination"><ul class="pagination pagination-custom">';
    
    const prevDisabled = discoveryState.page === 1 ? 'disabled' : '';
    const nextDisabled = discoveryState.page === totalPages ? 'disabled' : '';
    
    html += `<li class="page-item ${prevDisabled}">
                <a class="page-link" href="#" onclick="changeBooksPage(${discoveryState.page - 1}); return false;">
                    <i class="bi bi-chevron-left"></i> Prev
                </a>
             </li>`;
    
    for (let p = 1; p <= totalPages; p++) {
        const active = discoveryState.page === p ? 'active' : '';
        html += `<li class="page-item ${active}">
                    <a class="page-link" href="#" onclick="changeBooksPage(${p}); return false;">${p}</a>
                 </li>`;
    }
    
    html += `<li class="page-item ${nextDisabled}">
                <a class="page-link" href="#" onclick="changeBooksPage(${discoveryState.page + 1}); return false;">
                    Next <i class="bi bi-chevron-right"></i>
                </a>
             </li>`;
    
    html += '</ul></nav></div>';
    return html;
}

// Change books page
function changeBooksPage(page) {
    const totalPages = Math.max(1, Math.ceil(filteredBooks.length / discoveryState.pageSize));
    if (page < 1 || page > totalPages) return;
    
    discoveryState.page = page;
    renderBooksGrid();
}

// Select a book for swap (opens the modal)
function selectBookForSwap(bookId) {
    console.log('📖 Selected book for swap:', bookId);
    
    // Store the target book
    targetBook = bookId;
    
    // Get book details
    $.get(`/api/books/${bookId}`)
        .done(function(response) {
            targetBookData = response.book || response;
            console.log('📚 Target book data:', targetBookData);
            
            // Reset modal state
            currentStep = 1;
            selectedUserBook = null;
            
            // Show the swap modal
            showSwapModal();
        })
        .fail(function(xhr) {
            console.error('❌ Failed to load book details:', xhr);
            showErrorMessage('Failed to load book details. Please try again.');
        });
}

// Show the modern swap modal
function showSwapModal() {
    // Reset step state
    updateStepIndicator(1);
    showStep(1);
    
    // Display the requested book
    displayRequestedBook();
    
    // Reset user book selection
    $('.user-book-card').removeClass('selected');
    $('#next-step-btn').prop('disabled', true);
    
    // Show the modal
    $('#swapRequestModal').modal('show');
}

// Display the requested book in the modal
function displayRequestedBook() {
    if (!targetBookData) return;
    
    const imageSrc = getBookImageSrc(targetBookData);
    const ownerName = targetBookData.owner?.username || targetBookData.owner?.fullname || 'Unknown User';
    
    const bookHtml = `
        <div class="text-center">
            <img src="${imageSrc}" class="book-cover-professional img-fluid mb-3" 
                 alt="${targetBookData.title}" 
                 style="max-height: 180px; width: 100%; max-width: 140px; object-fit: cover; border-radius: 12px; box-shadow: 0 8px 25px rgba(0,0,0,0.3); transition: transform 0.3s ease;"
                 onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
            <div style="display: none; align-items: center; justify-content: center; height: 180px; width: 100%; max-width: 140px; background: linear-gradient(135deg, #3BB7FB, #667eea); border-radius: 12px; margin: 0 auto 1rem; box-shadow: 0 8px 25px rgba(0,0,0,0.3);">
                <i class="bi bi-book text-white" style="font-size: 2rem;"></i>
            </div>
            <h5 class="text-white mb-2">${targetBookData.title}</h5>
            <p class="text-muted mb-2">by ${targetBookData.author}</p>
            <div class="d-flex justify-content-center gap-2 mb-2">
                <span class="badge badge-info">${targetBookData.genre}</span>
                <span class="badge badge-success">${targetBookData.condition || 'Good'}</span>
            </div>
            <small class="text-muted">
                <i class="bi bi-person"></i> Available from ${ownerName}
            </small>
        </div>
    `;
    
    $('#requested-book-display').html(bookHtml);
}

// Select user book in the modal
function selectUserBook(bookId) {
    selectedUserBook = bookId;
    
    // Update visual selection
    $('.user-book-card').removeClass('selected');
    $(`.user-book-card[data-book-id="${bookId}"]`).addClass('selected');
    
    // Enable next button
    $('#next-step-btn').prop('disabled', false);
    
    console.log('✅ Selected user book:', bookId);
}

function renderPagination() {
    const total = matchesState.items.length;
    const totalPages = Math.max(1, Math.ceil(total / matchesState.pageSize));
    if (totalPages <= 1) return '';
    let pager = '<div class="d-flex justify-content-center mt-4">';
    pager += `<nav aria-label="Matches pagination"><ul class="pagination pagination-custom">`;
    const prevDisabled = matchesState.page === 1 ? 'disabled' : '';
    const nextDisabled = matchesState.page === totalPages ? 'disabled' : '';
    pager += `<li class="page-item ${prevDisabled}"><a class="page-link" href="#" onclick="changeMatchesPage(${matchesState.page - 1}); return false;"><i class="bi bi-chevron-left"></i> Prev</a></li>`;
    for (let p = 1; p <= totalPages; p++) {
        const active = matchesState.page === p ? 'active' : '';
        pager += `<li class="page-item ${active}"><a class="page-link" href="#" onclick="changeMatchesPage(${p}); return false;">${p}</a></li>`;
    }
    pager += `<li class="page-item ${nextDisabled}"><a class="page-link" href="#" onclick="changeMatchesPage(${matchesState.page + 1}); return false;">Next <i class="bi bi-chevron-right"></i></a></li>`;
    pager += `</ul></nav>`;
    pager += '</div>';
    return pager;
}

function changeMatchesPage(p) {
    const totalPages = Math.max(1, Math.ceil(matchesState.items.length / matchesState.pageSize));
    if (p < 1 || p > totalPages) return;
    matchesState.page = p;
    renderMatchesPage();
}

// Step navigation functions
function nextStep() {
    if (currentStep === 1) {
        if (!selectedUserBook) {
            showErrorMessage('Please select a book from your library first');
            return;
        }
        
        // Load selected book data and move to step 2
        $.get(`/api/books/${selectedUserBook}`)
            .done(function(response) {
                const selectedBookData = response.book || response;
                displaySwapPreview(selectedBookData, targetBookData);
                
                currentStep = 2;
                updateStepIndicator(2);
                showStep(2);
            })
            .fail(function() {
                showErrorMessage('Failed to load book details');
            });
    }
}

function previousStep() {
    if (currentStep === 2) {
        currentStep = 1;
        updateStepIndicator(1);
        showStep(1);
    }
}

// Update step indicator
function updateStepIndicator(step) {
    $('.step').removeClass('active');
    $(`.step[data-step="${step}"]`).addClass('active');
}

// Show specific step
function showStep(step) {
    $('.swap-step').removeClass('active');
    $(`#step-${step}`).addClass('active');
    
    // Update button visibility
    $('#prev-step-btn').toggle(step > 1);
    $('#next-step-btn').toggle(step === 1);
    $('#send-request-btn').toggle(step === 2);
    $('#chat-before-swap').toggle(step === 2);
}

// Display swap preview in step 2
function displaySwapPreview(offeredBook, requestedBook) {
    const offeredImageSrc = getBookImageSrc(offeredBook);
    const requestedImageSrc = getBookImageSrc(requestedBook);
    
    $('#selected-book-preview').html(`
        <div class="text-center">
            <img src="${offeredImageSrc}" class="book-cover-professional img-fluid mb-3" 
                 alt="${offeredBook.title}"
                 style="max-height: 150px; width: 100%; max-width: 120px; object-fit: cover; border-radius: 12px; box-shadow: 0 6px 20px rgba(0,0,0,0.3); transition: transform 0.3s ease;"
                 onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
            <div style="display: none; align-items: center; justify-content: center; height: 150px; width: 100%; max-width: 120px; background: linear-gradient(135deg, #3BB7FB, #667eea); border-radius: 12px; margin: 0 auto 1rem; box-shadow: 0 6px 20px rgba(0,0,0,0.3);">
                <i class="bi bi-book text-white" style="font-size: 1.5rem;"></i>
            </div>
            <h6 class="text-white mb-2">${offeredBook.title}</h6>
            <p class="text-muted mb-2">by ${offeredBook.author}</p>
            <div class="d-flex justify-content-center gap-2">
                <span class="badge badge-info">${offeredBook.genre}</span>
                <span class="badge badge-success">${offeredBook.condition || 'Good'}</span>
            </div>
        </div>
    `);
    
    $('#target-book-preview').html(`
        <div class="text-center">
            <img src="${requestedImageSrc}" class="book-cover-professional img-fluid mb-3" 
                 alt="${requestedBook.title}"
                 style="max-height: 150px; width: 100%; max-width: 120px; object-fit: cover; border-radius: 12px; box-shadow: 0 6px 20px rgba(0,0,0,0.3); transition: transform 0.3s ease;"
                 onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
            <div style="display: none; align-items: center; justify-content: center; height: 150px; width: 100%; max-width: 120px; background: linear-gradient(135deg, #3BB7FB, #667eea); border-radius: 12px; margin: 0 auto 1rem; box-shadow: 0 6px 20px rgba(0,0,0,0.3);">
                <i class="bi bi-book text-white" style="font-size: 1.5rem;"></i>
            </div>
            <h6 class="text-white mb-2">${requestedBook.title}</h6>
            <p class="text-muted mb-2">by ${requestedBook.author}</p>
            <div class="d-flex justify-content-center gap-2">
                <span class="badge badge-info">${requestedBook.genre}</span>
                <span class="badge badge-success">${requestedBook.condition || 'Good'}</span>
            </div>
        </div>
    `);
}

// Filter and search functionality
function showAdvancedFilters() {
    $('#advanced-filters').slideToggle(300);
}

function applyFilters() {
    const genreFilter = $('#genre-filter').val();
    const conditionFilter = $('#condition-filter').val();
    const sortBy = $('#sort-filter').val();
    
    // Start with all books
    filteredBooks = [...allBooks];
    
    // Apply genre filter
    if (genreFilter) {
        filteredBooks = filteredBooks.filter(book => book.genre === genreFilter);
    }
    
    // Apply condition filter
    if (conditionFilter) {
        filteredBooks = filteredBooks.filter(book => book.condition === conditionFilter);
    }
    
    // Apply sorting
    switch (sortBy) {
        case 'title':
            filteredBooks.sort((a, b) => a.title.localeCompare(b.title));
            break;
        case 'author':
            filteredBooks.sort((a, b) => a.author.localeCompare(b.author));
            break;
        case 'condition':
            const conditionOrder = ['New', 'Like New', 'Very Good', 'Good', 'Fair'];
            filteredBooks.sort((a, b) => {
                const aIndex = conditionOrder.indexOf(a.condition || 'Good');
                const bIndex = conditionOrder.indexOf(b.condition || 'Good');
                return aIndex - bIndex;
            });
            break;
        case 'newest':
            filteredBooks.sort((a, b) => new Date(b.createdAt || 0) - new Date(a.createdAt || 0));
            break;
        default:
            filteredBooks.sort((a, b) => a.title.localeCompare(b.title));
            break;
    }
    
    // Reset page and re-render
    discoveryState.page = 1;
    updateBooksCount();
    renderBooksGrid();
}

function clearFilters() {
    $('#genre-filter').val('');
    $('#condition-filter').val('');
    $('#sort-filter').val('title');
    applyFilters();
}

function updateBooksCount() {
    const count = filteredBooks.length;
    const total = allBooks.length;
    $('#matches-count').text(`${count} of ${total} books available`);
}

function refreshDiscovery() {
    loadAllAvailableBooks();
}

// Setup event listeners
function setupEventListeners() {
    // Filter change events
    $('#genre-filter, #condition-filter, #sort-filter').on('change', applyFilters);
    $('#clear-filters').on('click', clearFilters);
    
    // Library search
    $('#library-search').on('input', function() {
        const searchTerm = $(this).val().toLowerCase();
        $('.user-book-card').each(function() {
            const title = $(this).find('.book-title').text().toLowerCase();
            const author = $(this).find('.book-author').text().toLowerCase();
            const isVisible = title.includes(searchTerm) || author.includes(searchTerm);
            $(this).toggle(isVisible);
        });
    });
}

// Start chat conversation before sending swap request
function startChatConversation() {
    if (!targetBookData || !targetBookData.owner) {
        showErrorMessage('Unable to find book owner information');
        return;
    }
    
    console.log('💬 Starting chat conversation with book owner');
    
    // Close the swap modal first
    $('#swapRequestModal').modal('hide');
    
    // Get owner information
    const ownerUserId = targetBookData.owner._id || targetBookData.owner.id;
    const ownerUsername = targetBookData.owner.username || targetBookData.owner.fullname || targetBookData.owner.email || 'Book Owner';
    
    // First try to use the real-time chat system from navbar
    if (window.realTimeChat) {
        try {
            // Expand chat widget if minimized
            const chatWidget = document.getElementById('real-chat-widget');
            if (chatWidget && chatWidget.classList.contains('minimized')) {
                chatWidget.classList.remove('minimized');
            }
            
            // Start the chat
            window.realTimeChat.startChat(ownerUserId, ownerUsername);
            
            showSuccessMessage('Chat started! You can now discuss the book swap.');
            return;
            
        } catch (error) {
            console.error('❌ Real-time chat failed:', error);
        }
    }
    
    // Fallback: Use the navbar chat system directly
    if (typeof openUserChat === 'function') {
        try {
            openUserChat(ownerUserId, ownerUsername);
            showSuccessMessage('Chat opened! You can now discuss the book swap.');
            return;
        } catch (error) {
            console.error('❌ Navbar chat failed:', error);
        }
    }
    
    // Final fallback: Show the built-in chat modal with book context
    try {
        $('#chat-title').text(`Chat with ${ownerUsername}`);
        $('#chat-swap-summary').html(`
            <div class="d-flex align-items-center">
                <img src="${getBookImageSrc(targetBookData)}" style="width: 40px; height: 40px; object-fit: cover; border-radius: 8px;" class="me-3">
                <div>
                    <h6 class="mb-1">About: ${targetBookData.title}</h6>
                    <small class="text-muted">by ${targetBookData.author}</small>
                </div>
            </div>
        `);
        $('#chat-messages').html(`
            <div class="text-center text-muted py-4">
                <i class="bi bi-chat-dots text-primary" style="font-size: 2rem;"></i>
                <h6 class="mt-2">Start Your Conversation</h6>
                <p>Discuss the book swap with ${ownerUsername}</p>
            </div>
        `);
        $('#chatModal').modal('show');
        
        // Focus on input
        setTimeout(() => {
            $('#chat-message-input').focus();
        }, 500);
        
        showSuccessMessage('Chat opened! Start the conversation below.');
        
    } catch (error) {
        console.error('❌ All chat methods failed:', error);
        showErrorMessage('Chat system temporarily unavailable. Please try sending a swap request with a message instead.');
    }
}

// Submit swap request
function submitSwapRequest() {
    if (!selectedUserBook || !targetBook) {
        showErrorMessage('Please complete all steps before sending the request');
        return;
    }
    
    const message = $('#swap-message').val().trim();
    
    // Validate that a message is provided (make it required)
    if (!message) {
        showErrorMessage('Please write a message to introduce yourself and explain why you want this book. This helps build trust with other users.');
        $('#swap-message').focus();
        return;
    }
    
    if (message.length < 10) {
        showErrorMessage('Please write a more detailed message (at least 10 characters) to help the book owner understand your interest.');
        $('#swap-message').focus();
        return;
    }
    
    if (message.length > 500) {
        showErrorMessage('Message is too long. Please keep it under 500 characters.');
        $('#swap-message').focus();
        return;
    }
    
    const sendButton = $('#send-request-btn');
    
    // Show loading state
    sendButton.prop('disabled', true).html('<div class="spinner-border spinner-border-sm me-2"></div>Sending...');
    
    $.post('/api/swaps', {
        offeredBookId: selectedUserBook,
        requestedBookId: targetBook,
        message: message
    })
    .done(function(response) {
        console.log('✅ Swap request sent successfully:', response);
        $('#swapRequestModal').modal('hide');
        
        // Show professional success confirmation modal
        showSwapRequestSuccessModal();
    })
    .fail(function(xhr) {
        console.error('❌ Failed to send swap request:', xhr);
        const errorMessage = xhr.responseJSON?.message || xhr.responseText || 'Unknown error';
        showErrorMessage('Failed to send swap request: ' + errorMessage);
    })
    .always(function() {
        // Reset button state
        sendButton.prop('disabled', false).html('<i class="bi bi-send"></i> Send Swap Request');
    });
}

// Professional Success Modal for Swap Requests
function showSwapRequestSuccessModal() {
    const modalHtml = `
        <div class="modal fade" id="swapSuccessModal" tabindex="-1" data-backdrop="static" data-keyboard="false">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content" style="background: linear-gradient(135deg, #1E1E1E 0%, #2A2D35 100%); border: 1px solid rgba(59, 183, 251, 0.2); border-radius: 20px;">
                    <div class="modal-body text-center p-5">
                        <!-- Success Animation -->
                        <div class="success-animation mb-4">
                            <div class="checkmark-container">
                                <svg class="checkmark" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52">
                                    <circle class="checkmark-circle" cx="26" cy="26" r="25" fill="none"/>
                                    <path class="checkmark-check" fill="none" d="m14.1 27.2l7.1 7.2 16.7-16.8"/>
                                </svg>
                            </div>
                        </div>
                        
                        <!-- Success Content -->
                        <h3 class="text-white mb-3">
                            <i class="bi bi-check-circle-fill text-success me-2"></i>
                            Swap Request Sent Successfully!
                        </h3>
                        <p class="text-muted mb-4 lead">
                            Your request has been delivered to the book owner. You'll be notified when they respond.
                        </p>
                        
                        <!-- Status Info -->
                        <div class="status-info p-3 mb-4" style="background: rgba(59, 183, 251, 0.1); border-radius: 12px; border: 1px solid rgba(59, 183, 251, 0.2);">
                            <h6 class="text-info mb-2"><i class="bi bi-info-circle me-1"></i> What happens next?</h6>
                            <ul class="list-unstyled text-left text-muted small mb-0">
                                <li class="mb-1">• The book owner will receive your message</li>
                                <li class="mb-1">• They can accept, decline, or start a chat</li>
                                <li class="mb-1">• You'll get notified of their response</li>
                                <li>• Check "My Swaps" to track progress</li>
                            </ul>
                        </div>
                        
                        <!-- Action Buttons -->
                        <div class="d-flex gap-3 justify-content-center">
                            <button type="button" class="btn btn-outline-light" onclick="viewMySwaps()">
                                <i class="bi bi-list-check me-1"></i> My Swaps
                            </button>
                            <button type="button" class="btn btn-success" onclick="closeSuccessModal()">
                                <i class="bi bi-check me-1"></i> Got it!
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `;
    
    // Remove existing modal if any
    $('#swapSuccessModal').remove();
    
    // Add new modal to body
    $('body').append(modalHtml);
    
    // Show modal with animation
    $('#swapSuccessModal').modal('show');
    
    // Add CSS for animations
    if (!$('#success-modal-styles').length) {
        $('head').append(`
            <style id="success-modal-styles">
                .success-animation {
                    margin: 0 auto;
                }
                
                .checkmark-container {
                    width: 80px;
                    height: 80px;
                    margin: 0 auto;
                }
                
                .checkmark {
                    width: 80px;
                    height: 80px;
                    border-radius: 50%;
                    display: block;
                    stroke-width: 2;
                    stroke: #28A745;
                    stroke-miterlimit: 10;
                    animation: checkmark-fill 0.4s ease-in-out 0.4s forwards, checkmark-scale 0.3s ease-in-out 0.9s both;
                }
                
                .checkmark-circle {
                    stroke-dasharray: 166;
                    stroke-dashoffset: 166;
                    stroke-width: 2;
                    stroke-miterlimit: 10;
                    stroke: #28A745;
                    fill: none;
                    animation: checkmark-stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;
                }
                
                .checkmark-check {
                    transform-origin: 50% 50%;
                    stroke-dasharray: 48;
                    stroke-dashoffset: 48;
                    animation: checkmark-stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards;
                }
                
                @keyframes checkmark-stroke {
                    100% { stroke-dashoffset: 0; }
                }
                
                @keyframes checkmark-scale {
                    0%, 100% { transform: none; }
                    50% { transform: scale3d(1.1, 1.1, 1); }
                }
                
                @keyframes checkmark-fill {
                    100% { box-shadow: inset 0px 0px 0px 30px #28A745; }
                }
            </style>
        `);
    }
}

function closeSuccessModal() {
    $('#swapSuccessModal').modal('hide');
    // Refresh page to show updated swap status
    setTimeout(() => {
        location.reload();
    }, 500);
}

function viewMySwaps() {
    closeSuccessModal();
    // Scroll to the user swaps section
    $('html, body').animate({
        scrollTop: $('#user-swaps-section').offset().top - 100
    }, 800);
}

// Setup message validation for swap request
function setupMessageValidation() {
    $(document).on('input', '#swap-message', function() {
        const textarea = $(this);
        const message = textarea.val();
        const counter = $('#message-counter');
        const validation = $('#message-validation');
        const sendButton = $('#send-request-btn');
        
        // Update character counter
        counter.text(`${message.length}/500`);
        
        // Reset validation state
        textarea.removeClass('is-invalid is-valid');
        validation.addClass('d-none');
        
        // Validate message
        if (message.length === 0) {
            // Don't show error for empty - let them start typing
            sendButton.prop('disabled', true);
        } else if (message.length < 10) {
            textarea.addClass('is-invalid');
            validation.removeClass('d-none').text('Message should be at least 10 characters long to help the book owner understand your interest.');
            sendButton.prop('disabled', true);
        } else if (message.length > 500) {
            textarea.addClass('is-invalid');
            validation.removeClass('d-none').text('Message is too long. Please keep it under 500 characters.');
            sendButton.prop('disabled', true);
        } else {
            textarea.addClass('is-valid');
            sendButton.prop('disabled', false);
        }
        
        // Update character counter color
        if (message.length > 450) {
            counter.removeClass('text-muted text-warning').addClass('text-danger');
        } else if (message.length > 350) {
            counter.removeClass('text-muted text-danger').addClass('text-warning');
        } else {
            counter.removeClass('text-warning text-danger').addClass('text-muted');
        }
    });
    
    // Also validate on focus out
    $(document).on('blur', '#swap-message', function() {
        const message = $(this).val().trim();
        if (message.length > 0 && message.length < 10) {
            showNotification('Please write a more detailed message to help the book owner understand your interest.', 'warning');
        }
    });
}

// Enhanced notification system
function showNotification(message, type = 'info') {
    const types = {
        success: { icon: 'bi-check-circle-fill', color: '#28A745' },
        error: { icon: 'bi-exclamation-triangle-fill', color: '#DC3545' },
        warning: { icon: 'bi-exclamation-circle-fill', color: '#FFC107' },
        info: { icon: 'bi-info-circle-fill', color: '#17A2B8' }
    };
    
    const config = types[type] || types.info;
    
    const toast = $(`
        <div class="custom-toast ${type}-toast">
            <div class="toast-content">
                <i class="bi ${config.icon}" style="color: ${config.color}"></i>
                <span>${message}</span>
            </div>
            <button class="toast-close" onclick="$(this).parent().remove()">
                <i class="bi bi-x"></i>
            </button>
        </div>
    `);
    
    // Add toast styles if not already added
    if (!$('#custom-toast-styles').length) {
        $('head').append(`
            <style id="custom-toast-styles">
                .custom-toast {
                    position: fixed;
                    top: 20px;
                    right: 20px;
                    background: rgba(30, 30, 30, 0.95);
                    backdrop-filter: blur(10px);
                    border-radius: 12px;
                    padding: 16px 20px;
                    z-index: 10000;
                    box-shadow: 0 8px 32px rgba(0,0,0,0.3);
                    transform: translateX(400px);
                    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
                    max-width: 400px;
                    border: 1px solid rgba(255, 255, 255, 0.1);
                }
                
                .custom-toast.show {
                    transform: translateX(0);
                }
                
                .toast-content {
                    display: flex;
                    align-items: center;
                    gap: 10px;
                    color: white;
                    font-size: 14px;
                    line-height: 1.4;
                }
                
                .toast-content i {
                    font-size: 18px;
                    flex-shrink: 0;
                }
                
                .toast-close {
                    position: absolute;
                    top: 8px;
                    right: 8px;
                    background: none;
                    border: none;
                    color: rgba(255, 255, 255, 0.6);
                    cursor: pointer;
                    padding: 4px;
                    border-radius: 4px;
                    transition: all 0.2s ease;
                }
                
                .toast-close:hover {
                    background: rgba(255, 255, 255, 0.1);
                    color: white;
                }
            </style>
        `);
    }
    
    $('body').append(toast);
    
    // Show with animation
    setTimeout(() => toast.addClass('show'), 100);
    
    // Auto-hide after 5 seconds
    setTimeout(() => {
        toast.removeClass('show');
        setTimeout(() => toast.remove(), 400);
    }, 5000);
}

function showErrorMessage(message) {
    // Create error toast
    const toast = $(`
        <div class="error-toast">
            <div class="toast-content">
                <i class="bi bi-exclamation-triangle-fill text-danger"></i>
                <span>${message}</span>
            </div>
        </div>
    `);
    
    $('body').append(toast);
    
    // Animate in
    setTimeout(() => toast.addClass('show'), 100);
    
    // Remove after delay
    setTimeout(() => {
        toast.removeClass('show');
        setTimeout(() => toast.remove(), 400);
    }, 5000);
}

// Real-time chat integration function
function openSimpleChat() {
    console.log('🔵 openSimpleChat called');
    console.log('📚 selectedUserBook:', selectedUserBook);
    console.log('📖 targetBook:', targetBook);
    
    if (!selectedUserBook || !targetBook) {
        console.error('❌ Missing book selection');
        showErrorMessage('Please select books for the swap first');
        return;
    }
    
    console.log('🔄 Loading book information...');
    // Get book information for the chat
    Promise.all([
        $.get(`/api/books/${selectedUserBook}`),
        $.get(`/api/books/${targetBook}`)
    ]).then(([offeredBookData, requestedBookData]) => {
        console.log('📋 Book data loaded:', { offeredBookData, requestedBookData });
        const offeredBook = offeredBookData.book || offeredBookData;
        const requestedBook = requestedBookData.book || requestedBookData;
        
        // Hide the swap modal
        $('#swapRequestModal').modal('hide');
        
        // Get the book owner's user ID and username
        const ownerUserId = requestedBook.owner?._id || requestedBook.owner?.id;
        const ownerUsername = requestedBook.owner?.username || requestedBook.owner?.fullname || requestedBook.owner?.name || 'Book Owner';
        
        if (!ownerUserId) {
            console.error('❌ Missing owner user ID');
            showErrorMessage('Unable to find book owner information');
            return;
        }
        
        console.log('📋 Starting direct chat with owner:', ownerUserId, ownerUsername);
        console.log('🔧 realTimeChat available:', !!window.realTimeChat);
        
        // Use the real-time chat widget to create and open the conversation directly
        if (window.realTimeChat) {
            try {
                // Expand the chat widget if minimized
                const chatWidget = document.getElementById('real-chat-widget');
                if (chatWidget && chatWidget.classList.contains('minimized')) {
                    chatWidget.classList.remove('minimized');
                }
                
                // Start chat with the book owner directly
                window.realTimeChat.startChat(ownerUserId, ownerUsername);
                
                console.log('✅ Direct chat opened with', ownerUsername);
                
            } catch (error) {
                console.error('❌ Failed to start chat:', error);
                showErrorMessage('Failed to start chat conversation. Please try again.');
            }
        } else {
            console.error('❌ Real-time chat widget not available');
            showErrorMessage('Chat system not available. Please refresh the page.');
        }
        
    }).catch((error) => {
        console.error('❌ Failed to load book information:', error);
        showErrorMessage('Failed to load book information for chat');
    });
}

// Test chat system function
function testChatSystem() {
    console.log('🧪 Testing chat system...');
    console.log('📊 Chat system status:');
    console.log('  - realTimeChat available:', !!window.realTimeChat);
    console.log('  - Socket available:', !!window.io);
    console.log('  - jQuery available:', !!window.$);
    
    if (window.realTimeChat) {
        console.log('  - Chat widget:', document.getElementById('real-chat-widget'));
        console.log('  - Current room:', window.realTimeChat.currentRoom);
        console.log('  - Current user:', window.realTimeChat.currentUser);
        
        // Test API endpoint
        $.get('/api/chat/rooms')
            .done(function(response) {
                console.log('✅ Chat API working:', response);
            })
            .fail(function(xhr, status, error) {
                console.error('❌ Chat API failed:', { status, error, response: xhr.responseText });
            });
    } else {
        console.error('❌ realTimeChat not available - check if realTimeChat.js is loaded');
    }
    
    // Check if books are selected
    console.log('📚 Book selection status:');
    console.log('  - selectedUserBook:', selectedUserBook);
    console.log('  - targetBook:', targetBook);
    
    alert('Check console for chat system debug info');
}

// Test authentication function
function testAuth() {
    console.log('🔐 Testing authentication...');
    $.get('/api/users/profile')
        .done(function(response) {
            console.log('✅ Auth test success:', response);
        })
        .fail(function(xhr) {
            console.error('❌ Auth test failed:', {
                status: xhr.status,
                response: xhr.responseJSON,
                responseText: xhr.responseText
            });
        });
}

// Legacy functions for compatibility (some might be referenced elsewhere)
function quickMatchAll() {
    showSuccessMessage('🔍 Smart discovery is already active! All available books are shown above.');
}

function showMatchPreferences() {
    // Toggle the advanced filters instead
    showAdvancedFilters();
}

function loadMatchPreferences() {
    // Legacy compatibility - no longer needed with new design
    return { genres: [], distance: 10, condition: 'Any' };
}

// Legacy function for old modal system - redirect to new flow
function proposeSwap(bookId, ownerId) {
    selectBookForSwap(bookId);
}

// Accept swap request
function acceptSwapRequest(swapId) {
    if (confirm('Accept this swap request?')) {
        $.ajax({
            url: `/api/swaps/${swapId}/accept`,
            method: 'PUT'
        })
        .done(function(response) {
            showSuccessMessage(response.message || 'Swap request accepted!');
            setTimeout(() => location.reload(), 1500);
        })
        .fail(function(xhr) {
            const errorMessage = xhr.responseJSON?.error || xhr.responseJSON?.message || xhr.responseText || 'Unknown error';
            console.error('❌ Accept swap failed:', xhr.status, errorMessage);
            showErrorMessage('Failed to accept swap: ' + errorMessage);
        });
    }
}

// Reject swap request
function rejectSwapRequest(swapId) {
    if (confirm('Reject this swap request?')) {
        $.ajax({
            url: `/api/swaps/${swapId}/reject`,
            method: 'PUT'
        })
        .done(function(response) {
            showSuccessMessage(response.message || 'Swap request rejected');
            setTimeout(() => location.reload(), 1500);
        })
        .fail(function(xhr) {
            const errorMessage = xhr.responseJSON?.error || xhr.responseJSON?.message || xhr.responseText || 'Unknown error';
            console.error('❌ Reject swap failed:', xhr.status, errorMessage);
            showErrorMessage('Failed to reject swap: ' + errorMessage);
        });
    }
}

// Cancel swap request
function cancelSwapRequest(swapId) {
    if (confirm('Cancel this swap request?')) {
        $.ajax({
            url: `/api/swaps/${swapId}`,
            method: 'DELETE'
        })
        .done(function(response) {
            showSuccessMessage(response.message || 'Swap request cancelled');
            setTimeout(() => location.reload(), 1500);
        })
        .fail(function(xhr) {
            const errorMessage = xhr.responseJSON?.error || xhr.responseJSON?.message || xhr.responseText || 'Unknown error';
            console.error('❌ Cancel swap failed:', xhr.status, errorMessage);
            showErrorMessage('Failed to cancel swap: ' + errorMessage);
        });
    }
}

// Confirm swap completion
function confirmSwapCompletion(swapId) {
    if (confirm('Have you received the book and want to confirm completion?')) {
        $.post(`/api/swaps/${swapId}/confirm`)
            .done(function(response) {
                if (response.completed) {
                    showSwapCompletionModal('Swap completed! You earned 10 reward points!');
                } else {
                    showSuccessMessage('Completion confirmed! Waiting for other party.');
                }
                setTimeout(() => location.reload(), 2000);
            })
            .fail(function(xhr) {
                const errorMessage = xhr.responseJSON?.error || xhr.responseJSON?.message || xhr.responseText || 'Unknown error';
                console.error('❌ Confirm completion failed:', xhr.status, errorMessage);
                showErrorMessage('Failed to confirm completion: ' + errorMessage);
            });
    }
}

// Confirm book received - NEW FUNCTION
function confirmBookReceived(swapId) {
    // Show confirmation modal first
    const modal = $(`
        <div class="modal fade" id="confirmReceiptModal" tabindex="-1">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content" style="background: linear-gradient(135deg, #1E1E1E 0%, #2A2D35 100%); border: 1px solid rgba(59, 183, 251, 0.2); border-radius: 20px;">
                    <div class="modal-header" style="border-bottom: 1px solid rgba(59, 183, 251, 0.2);">
                        <h5 class="modal-title text-white">
                            <i class="bi bi-box-seam text-primary"></i> Confirm Book Receipt
                        </h5>
                        <button type="button" class="close text-white" data-dismiss="modal">&times;</button>
                    </div>
                    <div class="modal-body">
                        <div class="text-center mb-4">
                            <i class="bi bi-check-circle" style="font-size: 4rem; color: #28A745;"></i>
                        </div>
                        <h6 class="text-white text-center mb-3">Have you physically received the book?</h6>
                        <p class="text-muted text-center mb-4">
                            Please confirm only if you have received the book in good condition from your swap partner.
                        </p>
                        
                        <div class="alert alert-warning" style="background: rgba(255, 193, 7, 0.1); border: 1px solid rgba(255, 193, 7, 0.3);">
                            <div class="d-flex">
                                <i class="bi bi-shield-exclamation text-warning me-2"></i>
                                <div>
                                    <strong class="text-warning">Important:</strong>
                                    <ul class="mb-0 mt-2 text-muted" style="font-size: 0.9rem;">
                                        <li>Verify the book condition matches the description</li>
                                        <li>Check that you received the correct book</li>
                                        <li>Once both parties confirm, the swap completes automatically</li>
                                        <li>You'll earn 10 reward points upon completion</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer" style="border-top: 1px solid rgba(59, 183, 251, 0.2);">
                        <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">
                            <i class="bi bi-x"></i> Not Yet
                        </button>
                        <button type="button" class="btn btn-success" onclick="executeConfirmBookReceived('${swapId}')">
                            <i class="bi bi-check-circle"></i> Yes, I Received It
                        </button>
                    </div>
                </div>
            </div>
        </div>
    `);
    
    $('body').append(modal);
    $('#confirmReceiptModal').modal('show');
    
    $('#confirmReceiptModal').on('hidden.bs.modal', function () {
        $(this).remove();
    });
}

// Execute the confirmation
function executeConfirmBookReceived(swapId) {
    console.log('📦 Confirming book received for swap:', swapId);
    
    // Close the confirmation modal
    $('#confirmReceiptModal').modal('hide');
    
    // Show loading state
    const loadingToast = showNotification('Processing confirmation...', 'info');
    
    $.ajax({
        url: `/api/swaps/${swapId}/received`,
        method: 'PUT'
    })
    .done(function(response) {
        console.log('✅ Book receipt confirmed:', response);
        
        if (response.bothConfirmed && response.completed) {
            // Both parties confirmed - show celebration modal
            showSwapCompletionModal('🎉 Swap Completed! Both parties confirmed receiving their books. You earned 10 reward points!');
        } else {
            // Waiting for other party
            showSuccessMessage(response.message || 'Receipt confirmed! Waiting for your swap partner to confirm.');
        }
        
        // Reload after a short delay
        setTimeout(() => location.reload(), 2000);
    })
    .fail(function(xhr) {
        console.error('❌ Failed to confirm book receipt:', xhr);
        const errorMsg = xhr.responseJSON?.error || xhr.responseJSON?.message || 'Failed to confirm book receipt';
        showErrorMessage(errorMsg);
    });
}

// Show verification modal when both parties have confirmed
function showVerificationModal(swapId) {
    const modal = $(`
        <div class="modal fade" id="verificationModal" tabindex="-1">
            <div class="modal-dialog modal-lg modal-dialog-centered">
                <div class="modal-content" style="background: linear-gradient(135deg, #1E1E1E 0%, #2A2D35 100%); border: 1px solid rgba(40, 167, 69, 0.3); border-radius: 20px;">
                    <div class="modal-header" style="background: linear-gradient(135deg, rgba(40, 167, 69, 0.1), rgba(40, 167, 69, 0.05)); border-bottom: 1px solid rgba(40, 167, 69, 0.2);">
                        <h5 class="modal-title text-white">
                            <i class="bi bi-trophy-fill text-warning"></i> Swap Completed Successfully!
                        </h5>
                        <button type="button" class="close text-white" data-dismiss="modal">&times;</button>
                    </div>
                    <div class="modal-body p-4">
                        <!-- Success Animation -->
                        <div class="text-center mb-4">
                            <div class="success-circle" style="width: 100px; height: 100px; margin: 0 auto; background: linear-gradient(135deg, #28A745, #20C997); border-radius: 50%; display: flex; align-items: center; justify-content: center; animation: bounceIn 1s;">
                                <i class="bi bi-check2" style="font-size: 3rem; color: white;"></i>
                            </div>
                        </div>
                        
                        <h4 class="text-white text-center mb-3">🎉 Congratulations!</h4>
                        <p class="text-center text-muted mb-4">
                            Both parties have confirmed receiving their books. Your swap is now complete!
                        </p>
                        
                        <!-- Verification Status -->
                        <div class="card mb-4" style="background: rgba(40, 167, 69, 0.1); border: 1px solid rgba(40, 167, 69, 0.2); border-radius: 12px;">
                            <div class="card-body">
                                <h6 class="text-success mb-3">
                                    <i class="bi bi-shield-check"></i> Verification Complete
                                </h6>
                                <div class="d-flex align-items-center mb-3">
                                    <i class="bi bi-check-circle-fill text-success" style="font-size: 1.5rem; margin-right: 12px;"></i>
                                    <div>
                                        <strong class="text-white">You confirmed receipt</strong>
                                        <br>
                                        <small class="text-muted">Books received and verified</small>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center">
                                    <i class="bi bi-check-circle-fill text-success" style="font-size: 1.5rem; margin-right: 12px;"></i>
                                    <div>
                                        <strong class="text-white">Partner confirmed receipt</strong>
                                        <br>
                                        <small class="text-muted">Exchange verified by both parties</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Rewards -->
                        <div class="card mb-4" style="background: linear-gradient(135deg, rgba(255, 193, 7, 0.1), rgba(255, 152, 0, 0.1)); border: 1px solid rgba(255, 193, 7, 0.3); border-radius: 12px;">
                            <div class="card-body text-center">
                                <i class="bi bi-star-fill text-warning" style="font-size: 2rem;"></i>
                                <h5 class="text-warning mt-2 mb-1">+10 Reward Points</h5>
                                <p class="text-muted mb-0">Added to your account!</p>
                            </div>
                        </div>
                        
                        <!-- Next Steps -->
                        <div class="card" style="background: rgba(59, 183, 251, 0.1); border: 1px solid rgba(59, 183, 251, 0.2); border-radius: 12px;">
                            <div class="card-body">
                                <h6 class="text-primary mb-3">
                                    <i class="bi bi-lightbulb"></i> What's Next?
                                </h6>
                                <ul class="text-muted mb-0" style="font-size: 0.9rem;">
                                    <li class="mb-2">Rate your swap partner to help the community</li>
                                    <li class="mb-2">Share your reading experience</li>
                                    <li class="mb-2">Find your next book swap!</li>
                                    <li class="mb-0">Use your reward points for exclusive benefits</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer" style="border-top: 1px solid rgba(40, 167, 69, 0.2);">
                        <button type="button" class="btn btn-success" data-dismiss="modal" onclick="location.reload()">
                            <i class="bi bi-check-circle"></i> Awesome!
                        </button>
                    </div>
                </div>
            </div>
        </div>
    `);
    
    $('body').append(modal);
    $('#verificationModal').modal('show');
    
    $('#verificationModal').on('hidden.bs.modal', function () {
        $(this).remove();
    });
}

// Enhanced Swap Workflow Functions

// Start active swap (move from accepted to in-progress)
function startSwap(swapId) {
    showSwapProgressModal(swapId, 'start');
}

// Schedule meeting for swap
function scheduleMeeting(swapId) {
    showMeetingScheduleModal(swapId);
}

// Mark swap as in-progress
function markSwapInProgress(swapId) {
    if (confirm('Mark this swap as in progress? This means you are ready to meet and exchange books.')) {
        $.ajax({
            url: `/api/swaps/${swapId}/progress`,
            method: 'PUT',
            data: { status: 'In Progress' }
        })
        .done(function(response) {
            showSuccessMessage(response.message || 'Swap marked as in progress! Coordinate with your swap partner.');
            setTimeout(() => location.reload(), 1500);
        })
        .fail(function(xhr) {
            const errorMessage = xhr.responseJSON?.error || xhr.responseJSON?.message || xhr.responseText || 'Unknown error';
            console.error('❌ Mark swap in progress failed:', xhr.status, errorMessage);
            showErrorMessage('Failed to update swap: ' + errorMessage);
        });
    }
}

// Quick mark as In Progress (simpler version without confirmation for testing)
function quickMarkInProgress(swapId) {
    if (confirm('📦 Mark this swap as "In Progress"?\n\nThis will allow you to confirm book receipt after exchanging books with your partner.')) {
        $.ajax({
            url: `/api/swaps/${swapId}/progress`,
            method: 'PUT',
            data: { status: 'In Progress' }
        })
        .done(function(response) {
            showSuccessMessage('✅ Swap marked as In Progress! Now you can confirm when you receive the book.');
            setTimeout(() => location.reload(), 1500);
        })
        .fail(function(xhr) {
            const errorMessage = xhr.responseJSON?.error || xhr.responseJSON?.message || xhr.responseText || 'Unknown error';
            console.error('❌ Quick mark failed:', xhr.status, errorMessage);
            showErrorMessage('Failed to update swap: ' + errorMessage);
        });
    }
}

// Upload swap photos for verification
function uploadSwapPhotos(swapId) {
    showPhotoUploadModal(swapId);
}

// Rate swap partner after completion
function rateSwapPartner(swapId, partnerId) {
    showRatingModal(swapId, partnerId);
}

// Show swap progress modal with workflow steps
function showSwapProgressModal(swapId, action) {
    const modal = $(`
        <div class="modal fade" id="swapProgressModal" tabindex="-1">
            <div class="modal-dialog modal-lg modal-dialog-centered">
                <div class="modal-content" style="background: linear-gradient(135deg, #1E1E1E 0%, #2A2D35 100%); border: 1px solid rgba(59, 183, 251, 0.2); border-radius: 20px; overflow: hidden;">
                    <div class="modal-header" style="background: linear-gradient(135deg, rgba(59, 183, 251, 0.1), rgba(102, 126, 234, 0.1)); border-bottom: 1px solid rgba(59, 183, 251, 0.2); padding: 24px 32px;">
                        <h5 class="modal-title" style="color: #fff; font-size: 1.5rem; font-weight: 600;">
                            <i class="bi bi-diagram-2 text-primary" style="font-size: 1.75rem; margin-right: 12px;"></i> 
                            Swap Progress Tracker
                        </h5>
                        <button type="button" class="close text-white" data-dismiss="modal" style="opacity: 0.8; font-size: 2rem;">&times;</button>
                    </div>
                    <div class="modal-body" style="padding: 32px;">
                        <!-- Progress Bar -->
                        <div class="mb-4" style="background: rgba(59, 183, 251, 0.1); border-radius: 12px; padding: 16px;">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="text-white font-weight-bold">Overall Progress</span>
                                <span class="text-primary font-weight-bold">20%</span>
                            </div>
                            <div style="background: rgba(255,255,255,0.1); border-radius: 20px; height: 12px; overflow: hidden;">
                                <div style="background: linear-gradient(90deg, #3BB7FB, #667eea); width: 20%; height: 100%; border-radius: 20px; transition: width 0.5s ease;"></div>
                            </div>
                        </div>
                        
                        <!-- Workflow Steps -->
                        <div class="swap-workflow-tracker">
                            <!-- Step 1: Accepted -->
                            <div class="workflow-step completed" style="background: rgba(40, 167, 69, 0.15); border: 2px solid rgba(40, 167, 69, 0.4); border-radius: 16px; padding: 20px; margin-bottom: 16px; transition: all 0.3s ease;">
                                <div class="d-flex align-items-center">
                                    <div class="step-icon" style="width: 56px; height: 56px; background: linear-gradient(135deg, #28A745, #20c997); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin-right: 20px; box-shadow: 0 4px 12px rgba(40, 167, 69, 0.4);">
                                        <i class="bi bi-check-circle-fill" style="font-size: 28px; color: white;"></i>
                                    </div>
                                    <div class="step-content flex-grow-1">
                                        <h6 class="text-white mb-1" style="font-size: 1.1rem; font-weight: 600;">✅ Request Accepted</h6>
                                        <p class="text-muted mb-0" style="font-size: 0.9rem;">Both parties agreed to the swap</p>
                                    </div>
                                    <div>
                                        <span class="badge" style="background: rgba(40, 167, 69, 0.3); color: #28A745; padding: 6px 12px; border-radius: 20px;">Completed</span>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Step 2: Schedule Meeting -->
                            <div class="workflow-step ${action === 'start' ? 'active' : ''}" style="background: rgba(59, 183, 251, 0.15); border: 2px solid rgba(59, 183, 251, 0.4); border-radius: 16px; padding: 20px; margin-bottom: 16px; transition: all 0.3s ease;">
                                <div class="d-flex align-items-center">
                                    <div class="step-icon" style="width: 56px; height: 56px; background: linear-gradient(135deg, #3BB7FB, #667eea); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin-right: 20px; box-shadow: 0 4px 12px rgba(59, 183, 251, 0.4);">
                                        <i class="bi bi-calendar-event" style="font-size: 26px; color: white;"></i>
                                    </div>
                                    <div class="step-content flex-grow-1">
                                        <h6 class="text-white mb-1" style="font-size: 1.1rem; font-weight: 600;">📅 Schedule Meeting</h6>
                                        <p class="text-muted mb-2" style="font-size: 0.9rem;">Coordinate time and place for exchange</p>
                                        <button class="btn btn-sm swap-action-btn" onclick="scheduleMeeting('${swapId}')" style="background: linear-gradient(135deg, #3BB7FB, #667eea); color: white; border: none; padding: 8px 20px; border-radius: 20px; font-weight: 600; box-shadow: 0 4px 12px rgba(59, 183, 251, 0.3);">
                                            <i class="bi bi-calendar-plus me-1"></i> Schedule Now
                                        </button>
                                    </div>
                                    <div>
                                        <span class="badge" style="background: rgba(59, 183, 251, 0.3); color: #3BB7FB; padding: 6px 12px; border-radius: 20px;">Current</span>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Step 3: Exchange Books -->
                            <div class="workflow-step" style="background: rgba(255, 255, 255, 0.05); border: 2px solid rgba(255, 255, 255, 0.1); border-radius: 16px; padding: 20px; margin-bottom: 16px; transition: all 0.3s ease;">
                                <div class="d-flex align-items-center">
                                    <div class="step-icon" style="width: 56px; height: 56px; background: rgba(255, 193, 7, 0.2); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin-right: 20px;">
                                        <i class="bi bi-arrow-left-right" style="font-size: 26px; color: #FFC107;"></i>
                                    </div>
                                    <div class="step-content flex-grow-1">
                                        <h6 class="text-white mb-1" style="font-size: 1.1rem; font-weight: 600;">📚 Exchange Books</h6>
                                        <p class="text-muted mb-2" style="font-size: 0.9rem;">Meet and exchange your books</p>
                                        <button class="btn btn-sm btn-outline-warning" onclick="markSwapInProgress('${swapId}')" style="border-radius: 20px; padding: 8px 20px; font-weight: 600;" disabled>
                                            <i class="bi bi-play-circle me-1"></i> Mark In Progress
                                        </button>
                                    </div>
                                    <div>
                                        <span class="badge badge-secondary" style="padding: 6px 12px; border-radius: 20px;">Pending</span>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Step 4: Verify Exchange -->
                            <div class="workflow-step" style="background: rgba(255, 255, 255, 0.05); border: 2px solid rgba(255, 255, 255, 0.1); border-radius: 16px; padding: 20px; margin-bottom: 16px; transition: all 0.3s ease;">
                                <div class="d-flex align-items-center">
                                    <div class="step-icon" style="width: 56px; height: 56px; background: rgba(23, 162, 184, 0.2); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin-right: 20px;">
                                        <i class="bi bi-camera" style="font-size: 26px; color: #17A2B8;"></i>
                                    </div>
                                    <div class="step-content flex-grow-1">
                                        <h6 class="text-white mb-1" style="font-size: 1.1rem; font-weight: 600;">📸 Verify Exchange</h6>
                                        <p class="text-muted mb-2" style="font-size: 0.9rem;">Upload photos to verify book condition</p>
                                        <button class="btn btn-sm btn-outline-info" onclick="uploadSwapPhotos('${swapId}')" style="border-radius: 20px; padding: 8px 20px; font-weight: 600;" disabled>
                                            <i class="bi bi-upload me-1"></i> Upload Photos
                                        </button>
                                    </div>
                                    <div>
                                        <span class="badge badge-secondary" style="padding: 6px 12px; border-radius: 20px;">Pending</span>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Step 5: Complete & Rate -->
                            <div class="workflow-step" style="background: rgba(255, 255, 255, 0.05); border: 2px solid rgba(255, 255, 255, 0.1); border-radius: 16px; padding: 20px; transition: all 0.3s ease;">
                                <div class="d-flex align-items-center">
                                    <div class="step-icon" style="width: 56px; height: 56px; background: rgba(255, 193, 7, 0.2); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin-right: 20px;">
                                        <i class="bi bi-star" style="font-size: 26px; color: #FFC107;"></i>
                                    </div>
                                    <div class="step-content flex-grow-1">
                                        <h6 class="text-white mb-1" style="font-size: 1.1rem; font-weight: 600;">⭐ Complete & Rate</h6>
                                        <p class="text-muted mb-2" style="font-size: 0.9rem;">Confirm receipt and rate your partner</p>
                                        <button class="btn btn-sm btn-outline-success" onclick="confirmSwapCompletion('${swapId}')" style="border-radius: 20px; padding: 8px 20px; font-weight: 600;" disabled>
                                            <i class="bi bi-check-circle me-1"></i> Complete Swap
                                        </button>
                                    </div>
                                    <div>
                                        <span class="badge badge-secondary" style="padding: 6px 12px; border-radius: 20px;">Pending</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Help Text -->
                        <div class="mt-4 p-3" style="background: rgba(59, 183, 251, 0.1); border-left: 4px solid #3BB7FB; border-radius: 8px;">
                            <small class="text-muted">
                                <i class="bi bi-info-circle text-primary me-2"></i>
                                Complete each step in order. You can communicate with your swap partner anytime using the chat feature.
                            </small>
                        </div>
                    </div>
                    <div class="modal-footer" style="background: rgba(255, 255, 255, 0.03); border-top: 1px solid rgba(59, 183, 251, 0.2); padding: 20px 32px;">
                        <button type="button" class="btn btn-outline-light" data-dismiss="modal" style="border-radius: 20px; padding: 10px 24px; font-weight: 600;">Close</button>
                        <button type="button" class="btn" style="background: linear-gradient(135deg, #3BB7FB, #667eea); color: white; border: none; border-radius: 20px; padding: 10px 24px; font-weight: 600;" onclick="openChat('${swapId}')">
                            <i class="bi bi-chat-dots me-2"></i>Chat with Partner
                        </button>
                    </div>
                </div>
            </div>
        </div>
    `);
    
    $('body').append(modal);
    $('#swapProgressModal').modal('show');
    
    // Remove modal when hidden
    $('#swapProgressModal').on('hidden.bs.modal', function () {
        $(this).remove();
    });
}

// Show meeting details and confirmation option
function showMeetingDetails(swapId) {
    console.log('📅 Showing meeting details for swap:', swapId);
    
    // Get swap details
    $.get(`/api/swaps/${swapId}/details`)
        .done(function(response) {
            const swap = response.swap;
            const meetingDetails = swap.meetingDetails;
            
            if (!meetingDetails || !meetingDetails.datetime) {
                showErrorMessage('No meeting scheduled yet');
                return;
            }
            
            const meetingDate = new Date(meetingDetails.datetime);
            const formattedDate = meetingDate.toLocaleDateString('en-US', { 
                weekday: 'long', 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
            
            const isConfirmed = meetingDetails.confirmed === true;
            
            const modal = $(`
                <div class="modal fade" id="meetingDetailsModal" tabindex="-1">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content" style="background: linear-gradient(135deg, #1E1E1E 0%, #2A2D35 100%); border: 1px solid rgba(59, 183, 251, 0.2); border-radius: 20px;">
                            <div class="modal-header" style="background: linear-gradient(135deg, rgba(59, 183, 251, 0.1), rgba(102, 126, 234, 0.1)); border-bottom: 1px solid rgba(59, 183, 251, 0.2); padding: 24px 32px;">
                                <h5 class="modal-title" style="color: #fff; font-size: 1.35rem; font-weight: 600;">
                                    <i class="bi bi-calendar-check text-primary" style="font-size: 1.5rem; margin-right: 12px;"></i> 
                                    Meeting Details
                                </h5>
                                <button type="button" class="close text-white" data-dismiss="modal" style="opacity: 0.8; font-size: 2rem;">&times;</button>
                            </div>
                            <div class="modal-body" style="padding: 32px;">
                                ${isConfirmed ? `
                                    <div class="alert alert-success mb-4" style="border-radius: 12px; border: 1px solid #28A745;">
                                        <i class="bi bi-check-circle-fill me-2"></i>
                                        <strong>Meeting Confirmed!</strong> Both parties have confirmed this meeting.
                                    </div>
                                ` : `
                                    <div class="alert alert-warning mb-4" style="border-radius: 12px; border: 1px solid #FFC107;">
                                        <i class="bi bi-hourglass-half me-2"></i>
                                        <strong>Pending Confirmation</strong>
                                    </div>
                                `}
                                
                                <div class="meeting-info-card mb-3" style="background: rgba(59, 183, 251, 0.05); border: 1px solid rgba(59, 183, 251, 0.2); border-radius: 12px; padding: 20px;">
                                    <div class="mb-3">
                                        <div class="d-flex align-items-center mb-2">
                                            <i class="bi bi-geo-alt text-primary me-3" style="font-size: 1.25rem;"></i>
                                            <div>
                                                <small class="text-muted d-block" style="font-size: 0.8rem;">Location</small>
                                                <strong class="text-white" style="font-size: 1.05rem;">${meetingDetails.location}</strong>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="mb-3">
                                        <div class="d-flex align-items-center mb-2">
                                            <i class="bi bi-clock text-primary me-3" style="font-size: 1.25rem;"></i>
                                            <div>
                                                <small class="text-muted d-block" style="font-size: 0.8rem;">Date & Time</small>
                                                <strong class="text-white" style="font-size: 1.05rem;">${formattedDate}</strong>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    ${meetingDetails.notes ? `
                                        <div>
                                            <div class="d-flex align-items-start mb-2">
                                                <i class="bi bi-chat-text text-primary me-3" style="font-size: 1.25rem;"></i>
                                                <div>
                                                    <small class="text-muted d-block" style="font-size: 0.8rem;">Notes</small>
                                                    <p class="text-white mb-0" style="font-size: 0.95rem;">${meetingDetails.notes}</p>
                                                </div>
                                            </div>
                                        </div>
                                    ` : ''}
                                </div>
                                
                                ${!isConfirmed ? `
                                    <div class="p-3 mb-3" style="background: rgba(59, 183, 251, 0.1); border-left: 4px solid #3BB7FB; border-radius: 8px;">
                                        <p class="mb-0 text-info" style="font-size: 0.9rem;">
                                            <i class="bi bi-info-circle me-2"></i>
                                            Please confirm that you can attend this meeting. This helps your swap partner know you're committed.
                                        </p>
                                    </div>
                                ` : ''}
                                
                                <!-- Safety Tips -->
                                <div class="p-3" style="background: rgba(255, 193, 7, 0.1); border-left: 4px solid #FFC107; border-radius: 8px;">
                                    <h6 class="text-warning mb-2" style="font-size: 0.95rem; font-weight: 600;">
                                        <i class="bi bi-shield-check me-2"></i>Safety Reminders
                                    </h6>
                                    <ul class="mb-0 text-muted" style="font-size: 0.85rem; padding-left: 20px;">
                                        <li>Meet in a public, well-lit location</li>
                                        <li>Let someone know where you're going</li>
                                        <li>Inspect the book condition before exchanging</li>
                                    </ul>
                                </div>
                            </div>
                            <div class="modal-footer" style="background: rgba(255, 255, 255, 0.03); border-top: 1px solid rgba(59, 183, 251, 0.2); padding: 20px 32px;">
                                <button type="button" class="btn btn-outline-light" data-dismiss="modal" style="border-radius: 20px; padding: 10px 24px; font-weight: 600;">Close</button>
                                ${!isConfirmed ? `
                                    <button type="button" class="btn" onclick="confirmMeeting('${swapId}')" style="background: linear-gradient(135deg, #28A745, #20C997); color: white; border: none; border-radius: 20px; padding: 10px 24px; font-weight: 600; box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);">
                                        <i class="bi bi-check-circle me-2"></i>Confirm Meeting
                                    </button>
                                ` : ''}
                            </div>
                        </div>
                    </div>
                </div>
            `);
            
            $('body').append(modal);
            $('#meetingDetailsModal').modal('show');
            
            // Remove modal when hidden
            $('#meetingDetailsModal').on('hidden.bs.modal', function () {
                $(this).remove();
            });
        })
        .fail(function(xhr) {
            console.error('❌ Failed to load meeting details:', xhr);
            showErrorMessage('Failed to load meeting details');
        });
}

// Confirm meeting attendance
function confirmMeeting(swapId) {
    console.log('✅ Confirming meeting for swap:', swapId);
    
    $.ajax({
        url: `/api/swaps/${swapId}/meeting/confirm`,
        method: 'PUT'
    })
    .done(function(response) {
        console.log('✅ Meeting confirmed:', response);
        $('#meetingDetailsModal').modal('hide');
        showSuccessMessage('Meeting confirmed! Your swap partner has been notified.');
        
        // Reload to show updated status
        setTimeout(() => location.reload(), 1500);
    })
    .fail(function(xhr) {
        console.error('❌ Failed to confirm meeting:', xhr);
        const errorMsg = xhr.responseJSON?.message || xhr.responseJSON?.error || 'Failed to confirm meeting';
        showErrorMessage(errorMsg);
    });
}

// Show meeting schedule modal
function showMeetingScheduleModal(swapId) {
    const modal = $(`
        <div class="modal fade" id="meetingModal" tabindex="-1">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content" style="background: linear-gradient(135deg, #1E1E1E 0%, #2A2D35 100%); border: 1px solid rgba(59, 183, 251, 0.2); border-radius: 20px;">
                    <div class="modal-header" style="background: linear-gradient(135deg, rgba(59, 183, 251, 0.1), rgba(102, 126, 234, 0.1)); border-bottom: 1px solid rgba(59, 183, 251, 0.2); padding: 24px 32px;">
                        <h5 class="modal-title" style="color: #fff; font-size: 1.35rem; font-weight: 600;">
                            <i class="bi bi-calendar-event text-primary" style="font-size: 1.5rem; margin-right: 12px;"></i> 
                            Schedule Meeting
                        </h5>
                        <button type="button" class="close text-white" data-dismiss="modal" style="opacity: 0.8; font-size: 2rem;">&times;</button>
                    </div>
                    <form id="meetingForm">
                        <div class="modal-body" style="padding: 32px;">
                            <div class="mb-4">
                                <label class="form-label text-white mb-2" style="font-weight: 600;">
                                    <i class="bi bi-geo-alt text-primary me-2"></i>Meeting Location
                                </label>
                                <input type="text" id="meeting-location" name="location" class="form-control" 
                                       style="background: rgba(255, 255, 255, 0.05); border: 2px solid rgba(59, 183, 251, 0.2); color: white; border-radius: 12px; padding: 12px 16px; font-size: 1rem;"
                                       placeholder="e.g., Central Library, Coffee Shop, Park..." required>
                                <small class="text-muted mt-1 d-block">
                                    <i class="bi bi-info-circle me-1"></i>Choose a public, safe location
                                </small>
                            </div>
                            <div class="mb-4">
                                <label class="form-label text-white mb-2" style="font-weight: 600;">
                                    <i class="bi bi-clock text-primary me-2"></i>Date & Time
                                </label>
                                <input type="datetime-local" id="meeting-datetime" name="datetime" class="form-control" 
                                       style="background: rgba(255, 255, 255, 0.05); border: 2px solid rgba(59, 183, 251, 0.2); color: white; border-radius: 12px; padding: 12px 16px; font-size: 1rem; color-scheme: dark;"
                                       required>
                            </div>
                            <div class="mb-4">
                                <label class="form-label text-white mb-2" style="font-weight: 600;">
                                    <i class="bi bi-chat-text text-primary me-2"></i>Additional Notes
                                </label>
                                <textarea id="meeting-notes" name="notes" class="form-control" rows="4"
                                          style="background: rgba(255, 255, 255, 0.05); border: 2px solid rgba(59, 183, 251, 0.2); color: white; border-radius: 12px; padding: 12px 16px; font-size: 1rem; resize: none;"
                                          placeholder="Any specific instructions, parking info, or meeting details..."></textarea>
                            </div>
                            
                            <!-- Safety Tips -->
                            <div class="p-3" style="background: rgba(255, 193, 7, 0.1); border-left: 4px solid #FFC107; border-radius: 8px;">
                                <h6 class="text-warning mb-2" style="font-size: 0.95rem; font-weight: 600;">
                                    <i class="bi bi-shield-check me-2"></i>Safety Tips
                                </h6>
                                <ul class="mb-0 text-muted" style="font-size: 0.85rem; padding-left: 20px;">
                                    <li>Meet in a public, well-lit location</li>
                                    <li>Bring a friend or let someone know where you're going</li>
                                    <li>Check the book condition before finalizing</li>
                                </ul>
                            </div>
                        </div>
                        <div class="modal-footer" style="background: rgba(255, 255, 255, 0.03); border-top: 1px solid rgba(59, 183, 251, 0.2); padding: 20px 32px;">
                            <button type="button" class="btn btn-outline-light" data-dismiss="modal" style="border-radius: 20px; padding: 10px 24px; font-weight: 600;">Cancel</button>
                            <button type="submit" class="btn" id="schedule-meeting-btn" style="background: linear-gradient(135deg, #3BB7FB, #667eea); color: white; border: none; border-radius: 20px; padding: 10px 24px; font-weight: 600; box-shadow: 0 4px 12px rgba(59, 183, 251, 0.3);">
                                <i class="bi bi-calendar-check me-2"></i>Schedule Meeting
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    `);
    
    $('body').append(modal);
    $('#meetingModal').modal('show');
    
    // Set minimum datetime to now
    const now = new Date();
    now.setMinutes(now.getMinutes() - now.getTimezoneOffset());
    document.getElementById('meeting-datetime').min = now.toISOString().slice(0, 16);
    
    // Handle form submission
    $('#meetingForm').on('submit', function(e) {
        e.preventDefault();
        
        const submitBtn = $('#schedule-meeting-btn');
        const originalHtml = submitBtn.html();
        
        // Show loading state
        submitBtn.prop('disabled', true).html('<span class="spinner-border spinner-border-sm me-2"></span>Scheduling...');
        
        const meetingData = {
            location: $('#meeting-location').val().trim(),
            datetime: $('#meeting-datetime').val(),
            notes: $('#meeting-notes').val().trim()
        };
        
        console.log('📅 Scheduling meeting for swap:', swapId, meetingData);
        
        // Save meeting details to the swap
        $.ajax({
            url: `/api/swaps/${swapId}/meeting`,
            method: 'PUT',
            contentType: 'application/json',
            data: JSON.stringify(meetingData)
        })
        .done(function(response) {
            console.log('✅ Meeting scheduled successfully:', response);
            $('#meetingModal').modal('hide');
            
            // Show success message with details
            const meetingDate = new Date(meetingData.datetime);
            const formattedDate = meetingDate.toLocaleDateString('en-US', { 
                weekday: 'long', 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
            
            showSuccessMessage(`Meeting scheduled for ${formattedDate} at ${meetingData.location}! Your swap partner will be notified.`);
            
            // Reload after 2 seconds to show updated swap status
            setTimeout(() => location.reload(), 2000);
        })
        .fail(function(xhr) {
            console.error('❌ Failed to schedule meeting:', xhr);
            const errorMsg = xhr.responseJSON?.message || xhr.responseJSON?.error || 'Failed to schedule meeting';
            showErrorMessage(errorMsg);
            submitBtn.prop('disabled', false).html(originalHtml);
        });
    });
    
    // Remove modal when hidden
    $('#meetingModal').on('hidden.bs.modal', function () {
        $(this).remove();
    });
}

// Show swap completion modal with celebration
function showSwapCompletionModal(message) {
    const modal = $(`
        <div class="modal fade" id="completionModal" tabindex="-1">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content" style="background: linear-gradient(135deg, #1E1E1E 0%, #2A2D35 100%); border: 1px solid rgba(40, 167, 69, 0.3); border-radius: 20px; overflow: hidden;">
                    <div class="modal-body text-center" style="padding: 48px 32px;">
                        <!-- Animated Success Icon -->
                        <div class="completion-animation mb-4" style="animation: bounceIn 0.6s ease-out;">
                            <div style="width: 120px; height: 120px; margin: 0 auto; background: linear-gradient(135deg, #28A745, #20c997); border-radius: 50%; display: flex; align-items: center; justify-content: center; box-shadow: 0 8px 32px rgba(40, 167, 69, 0.4); position: relative;">
                                <i class="bi bi-check-circle-fill" style="font-size: 64px; color: white;"></i>
                                <!-- Pulse Effect -->
                                <div style="position: absolute; width: 100%; height: 100%; border-radius: 50%; border: 3px solid rgba(40, 167, 69, 0.5); animation: pulse 2s infinite;"></div>
                            </div>
                        </div>
                        
                        <!-- Success Message -->
                        <h3 class="text-white mb-3" style="font-size: 2rem; font-weight: 700;">
                            Swap Completed! 🎉
                        </h3>
                        <p class="mb-4" style="color: rgba(255, 255, 255, 0.8); font-size: 1.1rem; line-height: 1.6;">
                            ${message}
                        </p>
                        
                        <!-- Reward Badge -->
                        <div class="mb-4 p-4" style="background: rgba(40, 167, 69, 0.15); border: 2px solid rgba(40, 167, 69, 0.3); border-radius: 16px;">
                            <div class="d-flex align-items-center justify-content-center mb-2">
                                <i class="bi bi-trophy-fill text-warning" style="font-size: 2rem; margin-right: 12px;"></i>
                                <div class="text-left">
                                    <h5 class="text-white mb-0" style="font-weight: 700;">+10 Points Earned!</h5>
                                    <small class="text-muted">Keep swapping to earn more rewards</small>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Action Buttons -->
                        <div class="d-flex justify-content-center gap-3 flex-wrap">
                            <button class="btn btn-outline-light" onclick="location.reload()" style="border-radius: 20px; padding: 12px 28px; font-weight: 600; border-width: 2px;">
                                <i class="bi bi-arrow-clockwise me-2"></i>View My Swaps
                            </button>
                            <button class="btn" onclick="location.href='/swap-matcher'" style="background: linear-gradient(135deg, #3BB7FB, #667eea); color: white; border: none; border-radius: 20px; padding: 12px 28px; font-weight: 600; box-shadow: 0 4px 12px rgba(59, 183, 251, 0.3);">
                                <i class="bi bi-book me-2"></i>Find More Books
                            </button>
                        </div>
                        
                        <!-- Share Achievement -->
                        <div class="mt-4">
                            <small class="text-muted d-block mb-2">Share your achievement:</small>
                            <div class="d-flex justify-content-center gap-2">
                                <button class="btn btn-sm" style="background: rgba(59, 130, 246, 0.2); color: #3B82F6; border: none; border-radius: 12px; padding: 8px 16px;">
                                    <i class="bi bi-facebook"></i>
                                </button>
                                <button class="btn btn-sm" style="background: rgba(29, 161, 242, 0.2); color: #1DA1F2; border: none; border-radius: 12px; padding: 8px 16px;">
                                    <i class="bi bi-twitter"></i>
                                </button>
                                <button class="btn btn-sm" style="background: rgba(37, 211, 102, 0.2); color: #25D366; border: none; border-radius: 12px; padding: 8px 16px;">
                                    <i class="bi bi-whatsapp"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <style>
            @keyframes pulse {
                0%, 100% { transform: scale(1); opacity: 1; }
                50% { transform: scale(1.1); opacity: 0.5; }
            }
            
            @keyframes bounceIn {
                0% { transform: scale(0); opacity: 0; }
                50% { transform: scale(1.1); }
                70% { transform: scale(0.9); }
                100% { transform: scale(1); opacity: 1; }
            }
        </style>
    `);
    
    $('body').append(modal);
    $('#completionModal').modal('show');
    
    // Auto-remove after 5 seconds
    setTimeout(() => {
        $('#completionModal').modal('hide');
    }, 5000);
    
    // Remove modal when hidden
    $('#completionModal').on('hidden.bs.modal', function () {
        $(this).remove();
    });
}

// Utility functions for messages
function showSuccessMessage(message) {
    showNotification(message, 'success');
}

function showErrorMessage(message) {
    showNotification(message, 'error');
}

// Initialize when document is ready
$(document).ready(function() {
    console.log('🚀 Modern Swap Matcher - Page Ready');
    console.log('jQuery version:', $.fn.jquery);
    
    // Initialize the swap matcher
    initializeSwapMatcher();
    
    // Initialize tooltips
    $('[data-toggle="tooltip"]').tooltip();
    
    // Setup message validation for swap request
    setupMessageValidation();
    
    // Modal event handlers
    $('#swapRequestModal').on('hidden.bs.modal', function() {
        // Reset modal state when closed
        currentStep = 1;
        selectedUserBook = null;
        targetBook = null;
        targetBookData = null;
        $('.user-book-card').removeClass('selected');
        $('#swap-message').val('');
    });
    
    // Debug: Test authentication
    console.log('🔐 Testing user authentication...');
    $.get('/api/users/profile')
        .done(function(data) {
            console.log('✅ User authenticated:', data);
        })
        .fail(function(xhr) {
            console.error('❌ Authentication failed:', xhr.status, xhr.responseText);
            if (xhr.status === 401) {
                console.log('🚨 User not logged in - redirecting to login');
                window.location.href = '/login';
            }
        });
});

// Chat functionality - Use navbar chat system
function openChat(swapId) {
    console.log('� Opening chat for swap:', swapId);
    
    // Get swap details to find the other user
    $.get(`/api/swaps/${swapId}`)
        .done(function(response) {
            const swap = response.swap || response;
            const currentUserId = '<%= user._id %>';
            
            // Determine the other user
            const isRequester = swap.requester._id === currentUserId || swap.requester === currentUserId;
            const otherUser = isRequester ? swap.owner : swap.requester;
            const otherUserId = otherUser._id || otherUser;
            const otherUserName = otherUser.fullname || otherUser.username || 'User';
            
            console.log('📋 Opening chat with:', otherUserName, otherUserId);
            
            // Use navbar chat system
            if (window.realTimeChat && typeof window.realTimeChat.startChat === 'function') {
                try {
                    console.log('✅ Using realTimeChat system');
                    // Expand chat widget if minimized
                    const chatWidget = document.getElementById('real-chat-widget');
                    if (chatWidget && chatWidget.classList.contains('minimized')) {
                        chatWidget.classList.remove('minimized');
                    }
                    
                    // Start chat with the other user
                    window.realTimeChat.startChat(otherUserId, otherUserName);
                    showSuccessMessage(`Chat with ${otherUserName} opened!`);
                } catch (error) {
                    console.error('❌ Failed to open chat:', error);
                    showErrorMessage('Failed to open chat. Please try again.');
                }
            } else if (typeof openUserChat === 'function') {
                // Fallback to direct navbar chat function
                try {
                    console.log('✅ Using openUserChat fallback');
                    openUserChat(otherUserId, otherUserName);
                    showSuccessMessage(`Chat with ${otherUserName} opened!`);
                } catch (error) {
                    console.error('❌ Navbar chat failed:', error);
                    showErrorMessage('Chat system not available. Please refresh the page.');
                }
            } else {
                console.error('❌ No chat system available');
                console.log('🔍 Debug info:');
                console.log('  - window.realTimeChat:', window.realTimeChat);
                console.log('  - typeof openUserChat:', typeof openUserChat);
                console.log('  - Other user ID:', otherUserId);
                console.log('  - Other user name:', otherUserName);
                
                // Last resort: Show helpful message with contact info
                showErrorMessage(`Unable to open chat automatically. Please use the chat icon in the navbar to contact ${otherUserName}.`);
            }
        })
        .fail(function(xhr) {
            console.error('❌ Failed to load swap details:', xhr);
            showErrorMessage('Failed to load swap information. Please try again.');
        });
}

// Show Active Swap Process Guide
function showSwapProcessGuide() {
    const modal = $(`
        <div class="modal fade" id="swapGuideModal" tabindex="-1">
            <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
                <div class="modal-content" style="background: linear-gradient(135deg, #1E1E1E 0%, #2A2D35 100%); border: 1px solid rgba(59, 183, 251, 0.2); border-radius: 20px;">
                    <div class="modal-header" style="background: linear-gradient(135deg, rgba(59, 183, 251, 0.1), rgba(102, 126, 234, 0.1)); border-bottom: 1px solid rgba(59, 183, 251, 0.2); padding: 24px 32px;">
                        <h4 class="modal-title" style="color: #fff; font-weight: 700;">
                            <i class="bi bi-info-circle text-primary me-2"></i>
                            Complete Swap Process Guide
                        </h4>
                        <button type="button" class="close text-white" data-dismiss="modal" style="opacity: 0.8; font-size: 2rem;">&times;</button>
                    </div>
                    <div class="modal-body" style="padding: 32px;">
                        <!-- Step 1 -->
                        <div class="swap-guide-step mb-4">
                            <div class="d-flex align-items-start mb-3">
                                <div class="step-number" style="width: 48px; height: 48px; background: linear-gradient(135deg, #3BB7FB, #667eea); border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 1.5rem; font-weight: 700; color: white; flex-shrink: 0; margin-right: 16px;">1</div>
                                <div>
                                    <h5 class="text-white mb-2" style="font-weight: 600;">Send Swap Request</h5>
                                    <p class="text-muted mb-2">Browse available books and click "Start Swap". Select a book from your library and write a personal message explaining why you want the book.</p>
                                    <span class="badge" style="background: rgba(59, 183, 251, 0.2); color: #3BB7FB; padding: 6px 12px; border-radius: 8px;">
                                        <i class="bi bi-clock-history me-1"></i>Status: Pending
                                    </span>
                                </div>
                            </div>
                        </div>

                        <!-- Step 2 -->
                        <div class="swap-guide-step mb-4">
                            <div class="d-flex align-items-start mb-3">
                                <div class="step-number" style="width: 48px; height: 48px; background: linear-gradient(135deg, #28A745, #20C997); border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 1.5rem; font-weight: 700; color: white; flex-shrink: 0; margin-right: 16px;">2</div>
                                <div>
                                    <h5 class="text-white mb-2" style="font-weight: 600;">Request Accepted</h5>
                                    <p class="text-muted mb-2">The book owner reviews your request and accepts it. You'll receive a notification. Now you can chat with your swap partner to coordinate details.</p>
                                    <span class="badge" style="background: rgba(40, 167, 69, 0.2); color: #28A745; padding: 6px 12px; border-radius: 8px;">
                                        <i class="bi bi-check-circle me-1"></i>Status: Accepted
                                    </span>
                                </div>
                            </div>
                        </div>

                        <!-- Step 3 -->
                        <div class="swap-guide-step mb-4">
                            <div class="d-flex align-items-start mb-3">
                                <div class="step-number" style="width: 48px; height: 48px; background: linear-gradient(135deg, #FFC107, #FF9800); border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 1.5rem; font-weight: 700; color: white; flex-shrink: 0; margin-right: 16px;">3</div>
                                <div>
                                    <h5 class="text-white mb-2" style="font-weight: 600;">Schedule Meeting</h5>
                                    <p class="text-muted mb-3">Click "Schedule Meeting" to set up when and where to exchange books. Choose a public, safe location like a library or coffee shop.</p>
                                    <div class="alert" style="background: rgba(255, 193, 7, 0.1); border-left: 4px solid #FFC107; border-radius: 8px; padding: 12px 16px;">
                                        <strong class="text-warning">
                                            <i class="bi bi-shield-check me-2"></i>Safety First:
                                        </strong>
                                        <ul class="mb-0 mt-2 text-muted" style="font-size: 0.9rem;">
                                            <li>Meet in public places during daylight</li>
                                            <li>Bring a friend or tell someone where you're going</li>
                                            <li>Check book condition before finalizing</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Step 4 -->
                        <div class="swap-guide-step mb-4">
                            <div class="d-flex align-items-start mb-3">
                                <div class="step-number" style="width: 48px; height: 48px; background: linear-gradient(135deg, #667eea, #764ba2); border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 1.5rem; font-weight: 700; color: white; flex-shrink: 0; margin-right: 16px;">4</div>
                                <div>
                                    <h5 class="text-white mb-2" style="font-weight: 600;">Exchange Books</h5>
                                    <p class="text-muted mb-2">Meet at the scheduled time and location. Inspect the books to ensure they match the description and condition. Exchange books and enjoy your new reading material!</p>
                                    <span class="badge" style="background: rgba(102, 126, 234, 0.2); color: #667eea; padding: 6px 12px; border-radius: 8px;">
                                        <i class="bi bi-arrow-left-right me-1"></i>Status: In Progress
                                    </span>
                                </div>
                            </div>
                        </div>

                        <!-- Step 5 -->
                        <div class="swap-guide-step">
                            <div class="d-flex align-items-start mb-3">
                                <div class="step-number" style="width: 48px; height: 48px; background: linear-gradient(135deg, #17A2B8, #138496); border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 1.5rem; font-weight: 700; color: white; flex-shrink: 0; margin-right: 16px;">5</div>
                                <div>
                                    <h5 class="text-white mb-2" style="font-weight: 600;">Confirm Completion</h5>
                                    <p class="text-muted mb-3">After successfully exchanging books, both parties confirm the swap completion. You'll earn reward points and can leave a review for your swap partner!</p>
                                    <div class="d-flex gap-3 align-items-center">
                                        <span class="badge" style="background: rgba(23, 162, 184, 0.2); color: #17A2B8; padding: 6px 12px; border-radius: 8px;">
                                            <i class="bi bi-check-all me-1"></i>Status: Completed
                                        </span>
                                        <span class="badge" style="background: linear-gradient(135deg, #FFD700, #FFA500); color: white; padding: 6px 12px; border-radius: 8px;">
                                            <i class="bi bi-trophy me-1"></i>+10 Reward Points
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Quick Actions -->
                        <div class="mt-5 p-4" style="background: rgba(59, 183, 251, 0.05); border: 2px solid rgba(59, 183, 251, 0.2); border-radius: 12px;">
                            <h6 class="text-primary mb-3" style="font-weight: 600;">
                                <i class="bi bi-lightning-charge me-2"></i>Quick Actions
                            </h6>
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <button class="btn btn-block" style="background: rgba(255, 255, 255, 0.05); border: 1px solid rgba(255, 255, 255, 0.1); color: white; border-radius: 12px; padding: 12px; width: 100%; text-align: left;" onclick="$('#swapGuideModal').modal('hide'); $('#chatToggle').click();">
                                        <i class="bi bi-chat-dots text-primary me-2"></i>
                                        Open Chat
                                    </button>
                                </div>
                                <div class="col-md-6">
                                    <button class="btn btn-block" style="background: rgba(255, 255, 255, 0.05); border: 1px solid rgba(255, 255, 255, 0.1); color: white; border-radius: 12px; padding: 12px; width: 100%; text-align: left;" onclick="$('#swapGuideModal').modal('hide'); $('a[href=\\\'#active-swaps\\\']').click();">
                                        <i class="bi bi-arrow-left-right text-success me-2"></i>
                                        View Active Swaps
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer" style="background: rgba(255, 255, 255, 0.03); border-top: 1px solid rgba(59, 183, 251, 0.2); padding: 20px 32px;">
                        <button type="button" class="btn btn-primary" data-dismiss="modal" style="background: linear-gradient(135deg, #3BB7FB, #667eea); border: none; border-radius: 20px; padding: 10px 24px; font-weight: 600;">
                            <i class="bi bi-check-lg me-2"></i>Got It!
                        </button>
                    </div>
                </div>
            </div>
        </div>
    `);
    
    $('body').append(modal);
    $('#swapGuideModal').modal('show');
    
    // Remove modal when hidden
    $('#swapGuideModal').on('hidden.bs.modal', function () {
        $(this).remove();
    });
}
</script>

<!-- Chat System Integration -->
<script src="/js/navbar-chat.js"></script>

</body>
</html>

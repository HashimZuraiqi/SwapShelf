<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>

  <!-- Bootstrap -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
  <!-- Bootstrap Icons -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">

  <!-- Your site styles -->
  <link rel="stylesheet" href="/css/style.css">

  <title>Register</title>

  <style>
    :root{
      --bg:#0f141a; --card:#151a21; --field:#111418; --field-focus:#12161b;
      --text:#e9ecef; --muted:rgba(255,255,255,.68); --border:rgba(255,255,255,.14);
      --focus:#56b2ff; --ok:#28a745; --bad:#dc3545; --shadow:0 12px 40px rgba(0,0,0,.35);
      --grad-start:#3BB7FB; --grad-end:#F6B443;
    }

    body.register-page{
      background:var(--bg); color:var(--text); min-height:100vh;
      display:grid; grid-template-rows:auto 1fr;
    }

    .auth-shell{display:grid;place-items:center;padding:36px 16px 48px;}
    .auth-card{
      width:100%; max-width:760px; background:var(--card);
      border:1px solid var(--border); border-radius:18px; padding:28px; box-shadow:var(--shadow);
    }

    /* Brand */
    .brand{display:flex;flex-direction:column;align-items:center;gap:.55rem;margin-bottom:.5rem;}
    .brand-badge{
      /* bigger badge */
      width:72px;height:72px;border-radius:50%;
      background:linear-gradient(135deg,var(--grad-start),var(--grad-end));
      display:grid;place-items:center;
      box-shadow:0 8px 22px rgba(0,0,0,.28);
    }
    .brand-badge svg{
      /* bigger book */
      width:65px;height:65px;display:block
    }
    .brand-title{
      font-weight:800;font-size:1.9rem;line-height:1;
      background:linear-gradient(90deg,#69c0ff 0%, #6fbfff 35%, #ffd274 100%);
      -webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent;
      margin:0;
    }
    .brand-sub{margin:0;color:var(--muted);text-align:center}

    /* Inputs with left icon + right eye */
    .form-group{margin-bottom:18px;}
    .input-icon{position:relative}
    .input-icon .input-icon-left{
      position:absolute; left:12px; top:70%; transform:translateY(-50%); /* lowered */
      color:#9aa0a6; pointer-events:none;
      font-size:1.05rem;
    }
    .form-control{
      background:var(--field)!important; background-image:none!important;
      color:var(--text); border-color:var(--border); border-radius:.5rem; height:48px;
      padding-left:42px; padding-right:46px;
    }
    .form-control::placeholder{color:#8693a1}
    .form-control:focus{
      background:var(--field-focus)!important; border-color:var(--focus)!important;
      box-shadow:0 0 0 .2rem rgba(86,178,255,.14);
    }
    .toggle-pass{
      position:absolute; right:6px; top:60%; transform:translateY(-50%); /* lowered */
      width:36px;height:36px;display:grid;place-items:center;
      border:0;background:transparent!important;color:#9aa0a6;cursor:pointer;outline:none
    }

    /* Checklist */
    .req-card{background:#1f2126;border:1px solid rgba(255,255,255,.08);border-radius:12px;padding:12px 14px;margin-top:10px;}
    .req-list{list-style:none;margin:0;padding:0}
    .req-list li{display:flex;align-items:center;gap:8px;padding:4px 0;line-height:1.25;color:var(--muted)}
    .req-list li.text-success{color:var(--ok)!important}
    .req-list li.text-danger{color:var(--bad)!important}
    .req-list li i{font-size:1rem}

    .valid-msg,.invalid-msg{font-size:.9rem;margin-top:6px}
    .valid-msg{color:var(--ok)}
    .invalid-msg{color:var(--bad)}

    /* CTA */
    .btn-gradient{width:100%;height:52px;border-radius:999px;border:0;font-weight:700;letter-spacing:.2px}

    /* Small navbar brand on top */
    .navbar-brand .brand-mini{display:flex;align-items:center}
    .navbar-brand .brand-mini .badge{
      width:28px;height:28px;border-radius:50%;
      background:linear-gradient(135deg,var(--grad-start),var(--grad-end));
      display:grid;place-items:center;margin-right:.5rem;
    }
    .navbar-brand .brand-mini svg{width:24px;height:24px}
    .navbar-brand .brand-mini .text{
      font-weight:800;font-size:1.1rem;
      background:linear-gradient(90deg,#69c0ff 0%, #ffd274 100%);
      -webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent;
    }

    .auth-footer{text-align:center;margin-top:14px;color:var(--muted)}
    .auth-footer a{color:#4ca3ff}
  </style>
</head>
<body class="register-page">

  <!-- Minimal nav with book logo -->
  <nav class="navbar navbar-expand-lg navbar-dark custom-navbar">
    <div class="container">
      <a class="navbar-brand" href="/">
        <span class="brand-mini">
          <span class="badge">
            <!-- Book glyph (small) -->
            <svg viewBox="0 0 56 56" fill="none" aria-hidden="true">
              <g>
                <rect x="17" y="20" width="10" height="16" rx="2" fill="#ffffff"/>
                <rect x="29" y="20" width="10" height="16" rx="2" fill="#ffffff"/>
                <line x1="27.5" y1="20" x2="27.5" y2="36" stroke="#3BB7FB" stroke-width="1.5"/>
              </g>
            </svg>
          </span>
          <span class="text">BookSwap</span>
        </span>
      </a>
    </div>
  </nav>

  <main class="auth-shell">
    <section class="auth-card">

      <!-- Centered brand header with bigger book badge -->
      <div class="brand">
        <div class="brand-badge" aria-hidden="true">
          <!-- Book glyph (large) -->
          <svg viewBox="0 0 56 56" fill="none">
            <g>
              <rect x="17" y="20" width="12" height="18" rx="2" fill="#ffffff"/>
              <rect x="29" y="20" width="12" height="18" rx="2" fill="#ffffff"/>
              <line x1="28" y1="20" x2="28" y2="38" stroke="#3BB7FB" stroke-width="1.8"/>
            </g>
          </svg>
        </div>
        <h1 class="brand-title">Join BookSwap</h1>
        <p class="brand-sub">Create your account and start swapping books today</p>
      </div>

      <!-- Server error (EJS) -->
      <% if (error) { %>
        <div class="alert alert-danger" role="alert"><%= error %></div>
      <% } %>

      <form id="registerForm" action="/auth/register" method="post" novalidate>

        <!-- Full Name with icon -->
        <div class="form-group input-icon">
          <label for="name">Full Name</label>
          <span class="input-icon-left"><i class="bi bi-person"></i></span>
          <input id="name" name="name" type="text" class="form-control" placeholder="Enter your full name" value="<%= name %>" required>
        </div>

        <!-- Email with icon -->
        <div class="form-group input-icon">
          <label for="email">Email Address</label>
          <span class="input-icon-left"><i class="bi bi-envelope"></i></span>
          <input id="email" name="email" type="email" class="form-control" placeholder="Enter your email" value="<%= email %>" required>
        </div>

        <!-- Location with icon -->
        <div class="form-group input-icon">
          <label for="location">Location</label>
          <span class="input-icon-left"><i class="bi bi-geo-alt"></i></span>
          <input id="location" name="location" type="text" class="form-control" placeholder="Country" autocomplete="off" required>
          <ul id="country-list" style="position:absolute;z-index:1000;list-style:none;padding-left:0;margin-top:4px;width:100%;background:#1f2126;border-radius:10px;border:1px solid rgba(255,255,255,.08);display:none;"></ul>
        </div>

        <!-- Password -->
        <div class="form-group">
          <label for="password" class="mb-1">Password</label>
          <div class="input-icon">
            <span class="input-icon-left"><i class="bi bi-lock"></i></span>
            <input id="password" name="password" type="password" class="form-control" placeholder="Enter your password" aria-describedby="passwordHelp" required>
            <button class="toggle-pass" type="button" aria-label="Show/Hide password" data-target="#password"><i class="bi bi-eye"></i></button>
          </div>

          <!-- Checklist (opens every focus, hides on blur if empty) -->
          <div id="passwordHelp" class="req-card" aria-live="polite" style="display:none;">
            <small class="d-block mb-1" style="opacity:.85;">Password must include:</small>
            <ul class="req-list small">
              <li id="req-length"><i class="bi bi-dot"></i> At least <strong>6 characters</strong></li>
              <li id="req-upper"><i class="bi bi-dot"></i> At least <strong>one uppercase</strong> letter (A–Z)</li>
              <li id="req-number"><i class="bi bi-dot"></i> At least <strong>one number</strong> (0–9)</li>
              <li id="req-symbol"><i class="bi bi-dot"></i> At least <strong>one symbol</strong> (e.g. @ ! $ # % ^ &amp; * ?)</li>
            </ul>
          </div>
        </div>

        <!-- Confirm Password -->
        <div class="form-group">
          <label for="confirmPassword" class="mb-1">Confirm Password</label>
          <div class="input-icon">
            <span class="input-icon-left"><i class="bi bi-lock"></i></span>
            <input id="confirmPassword" name="confirmPassword" type="password" class="form-control" placeholder="Confirm your password" required>
            <button class="toggle-pass" type="button" aria-label="Show/Hide confirm password" data-target="#confirmPassword"><i class="bi bi-eye"></i></button>
          </div>
          <div id="confirmFeedback" class="mt-1 small"></div>
        </div>

        <button type="submit" class="btn btn-gradient create-account-btn">Create Account</button>

        <div class="auth-footer">
          Already have an account? <a href="/login">Sign in here</a>
        </div>
      </form>
    </section>
  </main>

  <!-- Scripts -->
  <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.min.js"></script>

  <!-- Country autocomplete -->
  <script>
    (function() {
      const input = document.getElementById('location');
      const list  = document.getElementById('country-list');
      const hide = ()=>{ list.style.display='none'; list.innerHTML=''; };

      input.addEventListener('input', function(){
        const q = this.value.trim();
        if (q.length < 2) return hide();
        fetch('https://restcountries.com/v3.1/name/'+encodeURIComponent(q))
          .then(r=>r.json())
          .then(data=>{
            if (!Array.isArray(data)) return hide();
            list.innerHTML = data.slice(0,8).map(c=>{
              const name = c?.name?.common || '';
              const safe = String(name).replace(/'/g,"\\'");
              return `<li style="padding:8px 12px;cursor:pointer;" onmousedown="document.getElementById('location').value='${safe}';">${name}</li>`;
            }).join('');
            list.style.display='block';
          }).catch(hide);
      });

      document.addEventListener('click', e=>{
        if (!input.contains(e.target) && !list.contains(e.target)) hide();
      });
    })();
  </script>

  <!-- Password validation -->
  <script>
    (function(){
      const form = document.getElementById('registerForm');
      const pwd  = document.getElementById('password');
      const cpwd = document.getElementById('confirmPassword');
      const help = document.getElementById('passwordHelp');
      const confirmFeedback = document.getElementById('confirmFeedback');

      const req = {
        length: document.getElementById('req-length'),
        upper:  document.getElementById('req-upper'),
        number: document.getElementById('req-number'),
        symbol: document.getElementById('req-symbol')
      };

      let submitAttempted = false;

      const tests = {
        length: v => v.length >= 6,  // ≥ 6
        upper:  v => /[A-Z]/.test(v),
        number: v => /\d/.test(v),
        symbol: v => /[@!$#%^&*?~_\-+.,;:()[\]{}\\/|`]/.test(v)
      };

      function setItem(el, state){
        const icon = el.querySelector('i');
        el.classList.remove('text-success','text-danger');
        if (state==='ok'){ el.classList.add('text-success'); icon.className='bi bi-check-circle'; }
        else if (state==='bad'){ el.classList.add('text-danger'); icon.className='bi bi-x-circle'; }
        else { icon.className='bi bi-dot'; }
      }

      function setValidity(input, isValid){
        input.classList.remove('is-valid','is-invalid');
        input.classList.add(isValid ? 'is-valid' : 'is-invalid');
        input.setAttribute('aria-invalid', String(!isValid));
      }

      function evalPassword(){
        const v = pwd.value || '';
        const r = {
          length: tests.length(v),
          upper:  tests.upper(v),
          number: tests.number(v),
          symbol: tests.symbol(v)
        };
        Object.keys(r).forEach(k=>{
          setItem(req[k], r[k] ? 'ok' : (submitAttempted ? 'bad' : 'muted'));
        });
        const ok = r.length && r.upper && r.number && r.symbol;
        setValidity(pwd, ok || !submitAttempted);
        return ok;
      }

      function evalConfirm(){
        const match = !!pwd.value && !!cpwd.value && pwd.value === cpwd.value;
        if (cpwd.value.length){
          confirmFeedback.textContent = match ? 'Passwords match' : 'Passwords do not match';
          confirmFeedback.className   = match ? 'valid-msg' : 'invalid-msg';
        } else {
          confirmFeedback.textContent = ''; confirmFeedback.className = '';
        }
        setValidity(cpwd, match || !submitAttempted);
        return match;
      }

      // Checklist opens EVERY focus, hides on blur if empty
      pwd.addEventListener('focus', ()=>{ help.style.display='block'; });
      pwd.addEventListener('blur',  ()=>{ if (!pwd.value.length) help.style.display='none'; });
      pwd.addEventListener('input', ()=>{ evalPassword(); if (cpwd.value) evalConfirm(); });
      cpwd.addEventListener('input', evalConfirm);

      // Eye toggles
      document.querySelectorAll('.toggle-pass').forEach(btn=>{
        btn.addEventListener('click', ()=>{
          const input = document.querySelector(btn.getAttribute('data-target'));
          if (!input) return;
          const icon = btn.querySelector('i');
          if (input.type === 'password'){ input.type='text'; icon.className='bi bi-eye-slash'; }
          else { input.type='password'; icon.className='bi bi-eye'; }
          input.focus();
        });
      });

      // Submit gate
      form.addEventListener('submit', e=>{
        submitAttempted = true;
        const ok = evalPassword();
        const match = evalConfirm();
        if (!ok || !match){
          e.preventDefault();
          (ok ? cpwd : pwd).scrollIntoView({behavior:'smooth', block:'center'});
          (ok ? cpwd : pwd).focus();
        }
      });
    })();
  </script>
</body>
</html>

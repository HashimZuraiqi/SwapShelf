<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>History | BookSwap</title>

  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css"/>
  <link rel="stylesheet" href="/css/style.css"/>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css"/>

  <style>
    .history-main{min-height:100vh;padding:2.25rem 1rem 3rem;background:linear-gradient(135deg,#18191E,#15181D,#0D0E10);color:#fff}
    .container-narrow{max-width:1080px;margin:0 auto}
    .history-hero{background:#23242a;border:1px solid rgba(120,130,150,.1);border-radius:18px;box-shadow:0 2px 16px rgba(63,183,251,.06),0 1px 4px rgba(246,180,67,.06);padding:1.6rem 1.4rem;margin-bottom:1rem}
    .history-title{display:flex;align-items:center;gap:.75rem;margin:0;font-size:2.15rem;font-weight:800;letter-spacing:.2px;color:#fff}
    .history-title i{color:#3BB7FB}
    .subtle{color:#b0b3b8;margin:.25rem 0 0}
    .history-filters{position:sticky;top:64px;z-index:5;margin:0 0 1.1rem;background:#23242a;border:1px solid rgba(120,130,150,.1);border-radius:14px;padding:.6rem .75rem;box-shadow:0 2px 12px rgba(0,0,0,.2);display:flex;align-items:center;flex-wrap:wrap;gap:.4rem}
    .filter-chip{background:#1E1F23;color:#e6e9ee;border:1px solid #2A2D35;border-radius:999px;padding:.48rem .9rem;font-size:.92rem;font-weight:700;display:inline-flex;align-items:center;gap:.45rem;transition:all .2s ease;user-select:none}
    .filter-chip i{font-size:1rem;opacity:.95}
    .filter-chip.active,.filter-chip:hover{border-color:rgba(59,183,251,.35);background:linear-gradient(135deg,rgba(59,183,251,.12),rgba(246,180,67,.12));color:#fff}
    .filter-right{margin-left:auto}
    .btn-ghost{background:transparent;border:1px solid rgba(255,255,255,.18);color:#e6e9ee;border-radius:999px;padding:.55rem 1rem;font-weight:700}
    .btn-ghost:hover{background:rgba(255,255,255,.06);color:#fff}
    .list-card{background:#23242a;border:1px solid rgba(120,130,150,.1);border-radius:18px;box-shadow:0 2px 16px rgba(63,183,251,.06),0 1px 4px rgba(246,180,67,.06);padding:.9rem}
    .date-divider{display:grid;grid-template-columns:1fr auto 1fr;align-items:center;gap:.75rem;color:#b0b3b8;font-weight:800;letter-spacing:.2px;margin:.75rem .4rem .65rem;text-transform:uppercase;font-size:.8rem}
    .date-divider:before,.date-divider:after{content:"";display:block;height:1px;background:linear-gradient(90deg,rgba(59,183,251,.25),rgba(246,180,67,.25))}
    .activity-row{display:flex;align-items:center;gap:1rem;background:linear-gradient(135deg,#23242a 0%,#2c2d34 100%);border:1px solid rgba(120,130,150,.1);border-radius:14px;padding:.95rem;margin:.6rem .3rem;transition:transform .18s ease,box-shadow .18s ease,border-color .18s ease}
    .activity-row:hover{transform:translateY(-2px);box-shadow:0 8px 24px rgba(63,183,251,.08);border-color:rgba(59,183,251,.28)}
    .activity-icon{width:48px;height:48px;border-radius:12px;display:inline-flex;align-items:center;justify-content:center;font-size:1.2rem;flex:0 0 48px;background:rgba(59,183,251,.1);border:1px solid rgba(59,183,251,.22)}
    .activity-icon.danger{background:rgba(220,53,69,.1);border-color:rgba(220,53,69,.25)}
    .activity-icon.success{background:rgba(40,167,69,.1);border-color:rgba(40,167,69,.25)}
    .activity-icon.warn{background:rgba(246,180,67,.1);border-color:rgba(246,180,67,.28)}
    .activity-icon.purple{background:rgba(157,78,221,.12);border-color:rgba(157,78,221,.28)}
    .activity-main{display:grid;gap:.25rem}
    .activity-text{margin:0;color:#fff;font-weight:800;letter-spacing:.15px}
    .meta-row{display:flex;align-items:center;gap:.5rem;flex-wrap:wrap}
    .action-tag{font-size:.72rem;font-weight:800;padding:.22rem .6rem;border-radius:999px;letter-spacing:.4px;border:1px solid transparent;text-transform:uppercase}
    .tag-add{background:rgba(40,167,69,.12);color:#7de28f;border-color:rgba(40,167,69,.25)}
    .tag-delete{background:rgba(220,53,69,.12);color:#ff8b97;border-color:rgba(220,53,69,.25)}
    .tag-wishlist{background:rgba(255,99,132,.12);color:#ffa7bb;border-color:rgba(255,99,132,.25)}
    .tag-profile{background:rgba(59,183,251,.12);color:#8ddaff;border-color:rgba(59,183,251,.25)}
    .tag-swap{background:rgba(246,180,67,.12);color:#ffd692;border-color:rgba(246,180,67,.25)}
    .time-badge{margin-left:auto;white-space:nowrap;font-size:.9rem;font-weight:800;color:#F6B443;opacity:.95}
    .empty{text-align:center;padding:2rem 1rem;color:#b0b3b8}
    .empty i{font-size:2rem;display:block;margin-bottom:.4rem;color:#3BB7FB}
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark custom-navbar">
    <div class="container-fluid">
      <a class="navbar-brand d-flex align-items-center" href="/">
        <span class="logo-icon mr-2">ðŸ“š</span><span class="logo-text ml-2 gradient-text">Book<span class="swap">Swap</span></span>
      </a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav"><span class="navbar-toggler-icon"></span></button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav mx-auto">
          <li class="nav-item"><a class="nav-link" href="/"><i class="bi bi-house-door"></i> Home</a></li>
          <li class="nav-item"><a class="nav-link" href="/dashboard"><i class="bi bi-speedometer2"></i> Dashboard</a></li>
          <li class="nav-item"><a class="nav-link" href="/library"><i class="bi bi-book"></i> My Library</a></li>
          <li class="nav-item"><a class="nav-link" href="/wishlist"><i class="bi bi-heart"></i> Wishlist</a></li>
          <li class="nav-item"><a class="nav-link" href="/swap-matcher"><i class="bi bi-arrow-left-right"></i> Swap Matcher</a></li>
          <li class="nav-item"><a class="nav-link" href="/rewards"><i class="bi bi-trophy"></i> Rewards</a></li>
        </ul>
        <ul class="navbar-nav ml-auto">
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle active" href="#" data-toggle="dropdown"><i class="bi bi-person-circle"></i> Profile</a>
            <div class="dropdown-menu dropdown-menu-right">
              <a class="dropdown-item" href="/me"><i class="bi bi-person"></i> My Profile</a>
              <a class="dropdown-item active" href="/history"><i class="bi bi-clock-history"></i> History</a>
              <a class="dropdown-item" href="/logout"><i class="bi bi-box-arrow-right"></i> Logout</a>
            </div>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <main class="history-main">
    <div class="container-narrow">
      <div class="history-hero">
        <h1 class="history-title"><i class="bi bi-clock-history"></i> Full Activity History</h1>
        <p class="subtle">Everything youâ€™ve done since you joined â€” neatly organized.</p>
      </div>

      <!-- Multi-select filters -->
      <div class="history-filters">
        <button class="filter-chip active" data-action="ALL"><i class="bi bi-stars"></i> All</button>
        <button class="filter-chip" data-action="ADD_BOOK"><i class="bi bi-plus-circle"></i> Added Books</button>
        <button class="filter-chip" data-action="DELETE_BOOK"><i class="bi bi-trash"></i> Deleted</button>
        <button class="filter-chip" data-action="ADD_WISHLIST"><i class="bi bi-heart-fill"></i> Wishlist</button>
        <button class="filter-chip" data-action="UPDATE_PROFILE"><i class="bi bi-person-check"></i> Profile</button>
        <button class="filter-chip" data-action="COMPLETE_SWAP"><i class="bi bi-arrow-left-right"></i> Swaps</button>
        <div class="filter-right">
          <button id="btnClear" class="btn btn-ghost btn-sm"><i class="bi bi-broom"></i> Clear Filters</button>
        </div>
      </div>

      <div class="list-card">
        <div id="historyList"></div>
        <div id="emptyState" class="empty d-none">
          <i class="bi bi-emoji-smile-upside-down"></i>
          Nothing here yet for this filter.
        </div>
        <div class="text-center pt-2">
          <button id="loadMore" class="btn btn-ghost"><i class="bi bi-chevron-down"></i> Load more</button>
        </div>
      </div>
    </div>
  </main>

  <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.min.js"></script>

  <script>
    const listEl = document.getElementById('historyList');
    const emptyEl = document.getElementById('emptyState');
    const loadMoreBtn = document.getElementById('loadMore');
    const clearBtn = document.getElementById('btnClear');
    const chips = Array.from(document.querySelectorAll('.filter-chip'));

    let allItems = [];
    let cursor = null;

    // NEW: multi-select set (stores actions like 'ADD_BOOK','DELETE_BOOK', ...)
    const selected = new Set(); // empty = treat as ALL

    function iconFor(action){
      switch(action){
        case 'ADD_BOOK': return {i:'bi-plus-lg',wrap:''};
        case 'UPDATE_BOOK': return {i:'bi-pencil-square',wrap:''};
        case 'DELETE_BOOK': return {i:'bi-trash',wrap:'danger'};
        case 'ADD_WISHLIST': return {i:'bi-heart-fill',wrap:'purple'};
        case 'REMOVE_WISHLIST': return {i:'bi-heart',wrap:''};
        case 'MATCH_SWAP': return {i:'bi-handshake',wrap:'success'};
        case 'COMPLETE_SWAP': return {i:'bi-arrow-left-right',wrap:'success'};
        case 'EARN_POINTS': return {i:'bi-coin',wrap:'warn'};
        case 'UPDATE_PROFILE': return {i:'bi-person-check',wrap:''};
        default: return {i:'bi-info-circle',wrap:''};
      }
    }
    function tagFor(action){
      switch(action){
        case 'ADD_BOOK': return {text:'Add Book',cls:'tag-add'};
        case 'UPDATE_BOOK': return {text:'Update Book',cls:'tag-profile'};
        case 'DELETE_BOOK': return {text:'Delete Book',cls:'tag-delete'};
        case 'ADD_WISHLIST': return {text:'Add Wishlist',cls:'tag-wishlist'};
        case 'REMOVE_WISHLIST': return {text:'Remove Wishlist',cls:'tag-wishlist'};
        case 'MATCH_SWAP': return {text:'Match Swap',cls:'tag-swap'};
        case 'COMPLETE_SWAP': return {text:'Complete Swap',cls:'tag-swap'};
        case 'EARN_POINTS': return {text:'Earn Points',cls:'tag-swap'};
        case 'UPDATE_PROFILE': return {text:'Update Profile',cls:'tag-profile'};
        default: return {text:action,cls:'tag-profile'};
      }
    }
    function prettyTime(d){
      const dt = (d instanceof Date)? d : new Date(d);
      const date = dt.toLocaleDateString(undefined,{month:'short',day:'numeric',year:'numeric'});
      const time = dt.toLocaleTimeString(undefined,{hour:'numeric',minute:'2-digit',hour12:true}).toUpperCase();
      return `${date} â€¢ ${time}`;
    }
    function dayKey(d){
      const dt = (d instanceof Date)? d : new Date(d);
      return dt.getFullYear()+'-'+String(dt.getMonth()+1).padStart(2,'0')+'-'+String(dt.getDate()).padStart(2,'0');
    }

    function applyFilter(items){
      // If nothing selected OR "ALL" active => show all
      if (selected.size === 0) return items;
      return items.filter(a => selected.has(a.action));
    }

    function render(){
      listEl.innerHTML = '';
      const items = applyFilter(allItems);

      if (items.length === 0){
        emptyEl.classList.remove('d-none');
        return;
      }
      emptyEl.classList.add('d-none');

      let currentDay = null;
      items.forEach(a=>{
        const k = dayKey(a.createdAt || a.time || Date.now());
        if (k !== currentDay){
          currentDay = k;
          const dt = new Date(a.createdAt || a.time || Date.now());
          const header = document.createElement('div');
          header.className = 'date-divider';
          header.innerHTML = `<span>${dt.toLocaleDateString(undefined,{month:'short',day:'numeric',year:'numeric'})}</span>`;
          listEl.appendChild(header);
        }

        const {i,wrap} = iconFor(a.action);
        const tag = tagFor(a.action);

        const row = document.createElement('div');
        row.className = 'activity-row';
        row.innerHTML = `
          <div class="activity-icon ${wrap}"><i class="bi ${i}"></i></div>
          <div class="activity-main">
            <p class="activity-text">${a.message}</p>
            <div class="meta-row">
              <span class="action-tag ${tag.cls}">${tag.text}</span>
              ${a.entityType ? `<span class="action-tag tag-profile" style="opacity:.8">${a.entityType}</span>` : ''}
            </div>
          </div>
          <span class="time-badge">${prettyTime(a.createdAt || a.time || Date.now())}</span>
        `;
        listEl.appendChild(row);
      });
    }

    async function fetchHistory(nextCursor=null){
      const params = new URLSearchParams();
      params.set('limit','25');
      if(nextCursor) params.set('cursor', nextCursor);

      let res = await fetch('/api/users/history?'+params.toString());
      if(!res.ok){ res = await fetch('/api/users/recent-activity'); }
      const data = await res.json();

      if(Array.isArray(data)){
        allItems = data.map(x=>({...x, createdAt:x.createdAt||Date.now()}))
                       .sort((a,b)=>new Date(b.createdAt)-new Date(a.createdAt));
        cursor = null;
        document.getElementById('loadMore').style.display = 'none';
        render(); return;
      }

      const fresh = (data.items||[]).map(x=>({...x, createdAt:x.createdAt||Date.now()}));
      allItems = [...allItems, ...fresh].sort((a,b)=>new Date(b.createdAt)-new Date(a.createdAt));
      cursor = data.nextCursor || null;
      document.getElementById('loadMore').style.display = cursor ? 'inline-block' : 'none';
      render();
    }

    // ---------- Multi-select behavior ----------
    function setAllActive(){
      // Turn off everything except ALL
      chips.forEach(c=>c.classList.remove('active'));
      const allChip = chips.find(c=>c.dataset.action==='ALL');
      if (allChip) allChip.classList.add('active');
      selected.clear();
      render();
    }

    chips.forEach(chip=>{
      chip.addEventListener('click', ()=>{
        const action = chip.dataset.action;

        if (action === 'ALL'){
          setAllActive();
          return;
        }

        // Toggle this action
        chip.classList.toggle('active');

        // If it just turned on, add to set; if off, remove
        if (chip.classList.contains('active')){
          selected.add(action);
        } else {
          selected.delete(action);
        }

        // When any specific filters are on, ensure ALL is off
        const allChip = chips.find(c=>c.dataset.action==='ALL');
        if (selected.size > 0){
          allChip && allChip.classList.remove('active');
        } else {
          // if none selected, revert to ALL
          setAllActive();
          return;
        }

        render();
      });
    });

    clearBtn.addEventListener('click', setAllActive);
    document.getElementById('loadMore').addEventListener('click', ()=>{ if(cursor) fetchHistory(cursor); });

    // Boot
    fetchHistory();
  </script>
</body>
</html>
